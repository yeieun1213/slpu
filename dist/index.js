/*! For license information please see index.js.LICENSE.txt */
(()=>{var e,t,n={855:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(15),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".main{\r\n    background: white;\r\n    width: 100%;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    margin: 0 auto; /*page center */\r\n    margin-top: 4rem;\r\n}\r\n\r\n.title {\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n\r\n.main_title_img{\r\n    width:50%;\r\n    \r\n}\r\n\r\n.sub{\r\n    padding: 1rem;\r\n    /*border-bottom: 1px solid #22b8cf/*/\r\n}\r\n\r\n.btn{\r\n    text-align: center;\r\n    background: #22b8cf;\r\n}\r\n\r\n.btn_game{\r\n    padding: 1rem;\r\n    border: none;\r\n    margin:0 auto;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    background: white;\r\n    color: #22b8cf;\r\n}","",{version:3,sources:["webpack://./src/Display/00_Header.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,WAAW;IACX,wEAAwE;IACxE,cAAc,EAAE,eAAe;IAC/B,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;IACjB,cAAc;AAClB",sourcesContent:[".main{\r\n    background: white;\r\n    width: 100%;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    margin: 0 auto; /*page center */\r\n    margin-top: 4rem;\r\n}\r\n\r\n.title {\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n\r\n.main_title_img{\r\n    width:50%;\r\n    \r\n}\r\n\r\n.sub{\r\n    padding: 1rem;\r\n    /*border-bottom: 1px solid #22b8cf/*/\r\n}\r\n\r\n.btn{\r\n    text-align: center;\r\n    background: #22b8cf;\r\n}\r\n\r\n.btn_game{\r\n    padding: 1rem;\r\n    border: none;\r\n    margin:0 auto;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    background: white;\r\n    color: #22b8cf;\r\n}"],sourceRoot:""}]);const l=i},500:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(15),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".main{\r\n    background: white;\r\n    width: 100%;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    margin: 0 auto; /*page center */\r\n    margin-top: 4rem;\r\n}\r\n\r\n.title {\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n\r\n.main_title_img{\r\n    width:50%;\r\n    \r\n}\r\n\r\n.sub{\r\n    padding: 1rem;\r\n    /*border-bottom: 1px solid #22b8cf/*/\r\n}\r\n\r\n.btn{\r\n    text-align: center;\r\n    background: #22b8cf;\r\n}\r\n\r\n.btn_game{\r\n    padding: 1rem;\r\n    border: none;\r\n    margin:0 auto;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    background: white;\r\n    color: #22b8cf;\r\n}","",{version:3,sources:["webpack://./src/Display/00_Main.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,WAAW;IACX,wEAAwE;IACxE,cAAc,EAAE,eAAe;IAC/B,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;IACjB,cAAc;AAClB",sourcesContent:[".main{\r\n    background: white;\r\n    width: 100%;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    margin: 0 auto; /*page center */\r\n    margin-top: 4rem;\r\n}\r\n\r\n.title {\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n\r\n.main_title_img{\r\n    width:50%;\r\n    \r\n}\r\n\r\n.sub{\r\n    padding: 1rem;\r\n    /*border-bottom: 1px solid #22b8cf/*/\r\n}\r\n\r\n.btn{\r\n    text-align: center;\r\n    background: #22b8cf;\r\n}\r\n\r\n.btn_game{\r\n    padding: 1rem;\r\n    border: none;\r\n    margin:0 auto;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    background: white;\r\n    color: #22b8cf;\r\n}"],sourceRoot:""}]);const l=i},546:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(15),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".title{\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n\r\n.input{\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n}\r\n\r\n.btn{\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n","",{version:3,sources:["webpack://./src/Display/02_Login.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;AAChB",sourcesContent:[".title{\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n\r\n.input{\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n}\r\n\r\n.btn{\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    /*font-weight: 5%;*/\r\n    background: #22b8cf;\r\n    color: white;\r\n}\r\n"],sourceRoot:""}]);const l=i},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},15:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,a=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),s="/*# ".concat(u," */"),c=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[o].concat(c).concat([s]).join("\n")}return[o].join("\n")}},679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var i=c(n);f&&(i=i.concat(f(n)));for(var l=u(t),m=u(n),g=0;g<i.length;++g){var v=i[g];if(!(o[v]||r&&r[v]||m&&m[v]||l&&l[v])){var y=d(n,v);try{s(t,v,y)}catch(e){}}}}return t}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,u=a(e),s=1;s<arguments.length;s++){for(var c in i=Object(arguments[s]))n.call(i,c)&&(u[c]=i[c]);if(t){l=t(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),o=n(840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function g(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=v.hasOwnProperty(t)?v[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=60103,C=60106,E=60107,x=60108,A=60114,_=60109,P=60110,I=60112,T=60113,N=60120,O=60115,R=60116,L=60121,z=60128,M=60129,B=60130,j=60131;if("function"==typeof Symbol&&Symbol.for){var D=Symbol.for;S=D("react.element"),C=D("react.portal"),E=D("react.fragment"),x=D("react.strict_mode"),A=D("react.profiler"),_=D("react.provider"),P=D("react.context"),I=D("react.forward_ref"),T=D("react.suspense"),N=D("react.suspense_list"),O=D("react.memo"),R=D("react.lazy"),L=D("react.block"),D("react.scope"),z=D("react.opaque.id"),M=D("react.debug_trace_mode"),B=D("react.offscreen"),j=D("react.legacy_hidden")}var F,U="function"==typeof Symbol&&Symbol.iterator;function $(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=U&&e[U]||e["@@iterator"])?e:null}function V(e){if(void 0===F)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);F=t&&t[1]||""}return"\n"+F+e}var W=!1;function H(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function Q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case C:return"Portal";case A:return"Profiler";case x:return"StrictMode";case T:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case I:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case O:return q(e.type);case L:return q(e._render);case R:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function Y(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function G(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=K(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Y(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Y(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,Y(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Y(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Y(n)}}function se(e,t){var n=Y(t.value),r=Y(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ge=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var Se=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ce(e,t){if(t){if(Se[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Ee(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ae=null,_e=null,Pe=null;function Ie(e){if(e=Zr(e)){if("function"!=typeof Ae)throw Error(i(280));var t=e.stateNode;t&&(t=ea(t),Ae(e.stateNode,e.type,t))}}function Te(e){_e?Pe?Pe.push(e):Pe=[e]:_e=e}function Ne(){if(_e){var e=_e,t=Pe;if(Pe=_e=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Oe(e,t){return e(t)}function Re(e,t,n,r,a){return e(t,n,r,a)}function Le(){}var ze=Oe,Me=!1,Be=!1;function je(){null===_e&&null===Pe||(Le(),Ne())}function De(e,t){var n=e.stateNode;if(null===n)return null;var r=ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Fe=!1;if(f)try{var Ue={};Object.defineProperty(Ue,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",Ue,Ue),window.removeEventListener("test",Ue,Ue)}catch(me){Fe=!1}function $e(e,t,n,r,a,o,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Ve=!1,We=null,He=!1,Qe=null,qe={onError:function(e){Ve=!0,We=e}};function Ye(e,t,n,r,a,o,i,l,u){Ve=!1,We=null,$e.apply(qe,arguments)}function Ke(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Xe(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Je,et,tt,nt,rt=!1,at=[],ot=null,it=null,lt=null,ut=new Map,st=new Map,ct=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function pt(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function ht(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=dt(t,n,r,a,o),null!==t&&null!==(t=Zr(t))&&et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=Xr(e.target);if(null!==t){var n=Ke(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void nt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){tt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&et(t),e.blockedOn=n,!1;t.shift()}return!0}function vt(e,t,n){gt(e)&&n.delete(t)}function yt(){for(rt=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&Je(e);break}for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==ot&&gt(ot)&&(ot=null),null!==it&&gt(it)&&(it=null),null!==lt&&gt(lt)&&(lt=null),ut.forEach(vt),st.forEach(vt)}function bt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,yt)))}function wt(e){function t(t){return bt(t,e)}if(0<at.length){bt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&bt(ot,e),null!==it&&bt(it,e),null!==lt&&bt(lt,e),ut.forEach(t),st.forEach(t),n=0;n<ct.length;n++)(r=ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ct.length&&null===(n=ct[0]).blockedOn;)mt(n),null===n.blockedOn&&ct.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},Ct={},Et={};function xt(e){if(Ct[e])return Ct[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in Et)return Ct[e]=n[t];return e}f&&(Et=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var At=xt("animationend"),_t=xt("animationiteration"),Pt=xt("animationstart"),It=xt("transitionend"),Tt=new Map,Nt=new Map,Ot=["abort","abort",At,"animationEnd",_t,"animationIteration",Pt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",It,"transitionEnd","waiting","waiting"];function Rt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Nt.set(r,t),Tt.set(r,a),s(a,[r])}}(0,o.unstable_now)();var Lt=8;function zt(e){if(0!=(1&e))return Lt=15,1;if(0!=(2&e))return Lt=14,2;if(0!=(4&e))return Lt=13,4;var t=24&e;return 0!==t?(Lt=12,t):0!=(32&e)?(Lt=11,32):0!=(t=192&e)?(Lt=10,t):0!=(256&e)?(Lt=9,256):0!=(t=3584&e)?(Lt=8,t):0!=(4096&e)?(Lt=7,4096):0!=(t=4186112&e)?(Lt=6,t):0!=(t=62914560&e)?(Lt=5,t):67108864&e?(Lt=4,67108864):0!=(134217728&e)?(Lt=3,134217728):0!=(t=805306368&e)?(Lt=2,t):0!=(1073741824&e)?(Lt=1,1073741824):(Lt=8,e)}function Mt(e,t){var n=e.pendingLanes;if(0===n)return Lt=0;var r=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)r=o,a=Lt=15;else if(0!=(o=134217727&n)){var u=o&~i;0!==u?(r=zt(u),a=Lt):0!=(l&=o)&&(r=zt(l),a=Lt)}else 0!=(o=n&~i)?(r=zt(o),a=Lt):0!==l&&(r=zt(l),a=Lt);if(0===r)return 0;if(r=n&((0>(r=31-$t(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(zt(t),a<=Lt)return t;Lt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-$t(t)),r|=e[n],t&=~a;return r}function Bt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function jt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Dt(24&~t))?jt(10,t):e;case 10:return 0===(e=Dt(192&~t))?jt(8,t):e;case 8:return 0===(e=Dt(3584&~t))&&0===(e=Dt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Dt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Dt(e){return e&-e}function Ft(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ut(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-$t(t)]=n}var $t=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vt(e)/Wt|0)|0},Vt=Math.log,Wt=Math.LN2,Ht=o.unstable_UserBlockingPriority,Qt=o.unstable_runWithPriority,qt=!0;function Yt(e,t,n,r){Me||Le();var a=Gt,o=Me;Me=!0;try{Re(a,e,t,n,r)}finally{(Me=o)||je()}}function Kt(e,t,n,r){Qt(Ht,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){var a;if(qt)if((a=0==(4&t))&&0<at.length&&-1<ft.indexOf(e))e=dt(null,e,t,n,r),at.push(e);else{var o=Xt(e,t,n,r);if(null===o)a&&pt(e,r);else{if(a){if(-1<ft.indexOf(e))return e=dt(o,e,t,n,r),void at.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=ht(ot,e,t,n,r,a),!0;case"dragenter":return it=ht(it,e,t,n,r,a),!0;case"mouseover":return lt=ht(lt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return ut.set(o,ht(ut.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,st.set(o,ht(st.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;pt(e,r)}Tr(e,t,r,null,n)}}}function Xt(e,t,n,r){var a=xe(r);if(null!==(a=Xr(a))){var o=Ke(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ge(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Tr(e,t,r,a,n),null}var Zt=null,Jt=null,en=null;function tn(){if(en)return en;var e,t,n=Jt,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function on(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var ln,un,sn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=on(cn),dn=a({},cn,{view:0,detail:0}),pn=on(dn),hn=a({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:xn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(ln=e.screenX-sn.screenX,un=e.screenY-sn.screenY):un=ln=0,sn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),mn=on(hn),gn=on(a({},hn,{dataTransfer:0})),vn=on(a({},dn,{relatedTarget:0})),yn=on(a({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=on(a({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=on(a({},cn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function xn(){return En}var An=on(a({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:xn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),_n=on(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=on(a({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:xn})),In=on(a({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=on(a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Nn=[9,13,27,32],On=f&&"CompositionEvent"in window,Rn=null;f&&"documentMode"in document&&(Rn=document.documentMode);var Ln=f&&"TextEvent"in window&&!Rn,zn=f&&(!On||Rn&&8<Rn&&11>=Rn),Mn=String.fromCharCode(32),Bn=!1;function jn(e,t){switch(e){case"keyup":return-1!==Nn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Dn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Fn=!1,Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function Vn(e,t,n,r){Te(r),0<(t=Or(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Hn=null;function Qn(e){Er(e,0)}function qn(e){if(X(Jr(e)))return e}function Yn(e,t){if("change"===e)return t}var Kn=!1;if(f){var Gn;if(f){var Xn="oninput"in document;if(!Xn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Xn="function"==typeof Zn.oninput}Gn=Xn}else Gn=!1;Kn=Gn&&(!document.documentMode||9<document.documentMode)}function Jn(){Wn&&(Wn.detachEvent("onpropertychange",er),Hn=Wn=null)}function er(e){if("value"===e.propertyName&&qn(Hn)){var t=[];if(Vn(t,Hn,e,xe(e)),e=Qn,Me)e(t);else{Me=!0;try{Oe(e,t)}finally{Me=!1,je()}}}}function tr(e,t,n){"focusin"===e?(Jn(),Hn=n,(Wn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Jn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return qn(Hn)}function rr(e,t){if("click"===e)return qn(t)}function ar(e,t){if("input"===e||"change"===e)return qn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function lr(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,mr=null,gr=null,vr=!1;function yr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==hr||hr!==Z(r)||(r="selectionStart"in(r=hr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&lr(gr,r)||(gr=r,0<(r=Or(mr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}Rt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Rt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Rt(Ot,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<br.length;wr++)Nt.set(br[wr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Cr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,l,u,s){if(Ye.apply(this,arguments),Ve){if(!Ve)throw Error(i(198));var c=We;Ve=!1,We=null,He||(He=!0,Qe=c)}}(r,t,void 0,e),e.currentTarget=null}function Er(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,l,s),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,l,s),o=u}}}if(He)throw e=Qe,He=!1,Qe=null,e}function xr(e,t){var n=ta(t),r=e+"__bubble";n.has(r)||(Ir(t,e,2,!1),n.add(r))}var Ar="_reactListening"+Math.random().toString(36).slice(2);function _r(e){e[Ar]||(e[Ar]=!0,l.forEach((function(t){Sr.has(t)||Pr(t,!1,e,null),Pr(t,!0,e,null)})))}function Pr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;a|=2,o=r}var i=ta(o),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(a|=4),Ir(o,e,a,t),i.add(l))}function Ir(e,t,n,r){var a=Nt.get(t);switch(void 0===a?2:a){case 0:a=Yt;break;case 1:a=Kt;break;default:a=Gt}n=a.bind(null,t,n,e),a=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Tr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=Xr(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Be)return e();Be=!0;try{ze(e,t,n)}finally{Be=!1,je()}}((function(){var r=o,a=xe(n),i=[];e:{var l=Tt.get(e);if(void 0!==l){var u=fn,s=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":u=An;break;case"focusin":s="focus",u=vn;break;case"focusout":s="blur",u=vn;break;case"beforeblur":case"afterblur":u=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pn;break;case At:case _t:case Pt:u=yn;break;case It:u=In;break;case"scroll":u=pn;break;case"wheel":u=Tn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=_n}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=De(h,d))&&c.push(Nr(h,m,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,a),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Xr(s)&&!s[Kr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Xr(s):null)&&(s!==(f=Ke(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=mn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=_n,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:Jr(u),p=null==s?l:Jr(s),(l=new c(m,h+"leave",u,n,a)).target=f,l.relatedTarget=p,m=null,Xr(a)===r&&((c=new c(d,h+"enter",s,n,a)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Rr(p))h++;for(p=0,m=d;m;m=Rr(m))p++;for(;0<h-p;)c=Rr(c),h--;for(;0<p-h;)d=Rr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Rr(c),d=Rr(d)}c=null}else c=null;null!==u&&Lr(i,l,u,c,!1),null!==s&&null!==f&&Lr(i,f,s,c,!0)}if("select"===(u=(l=r?Jr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Yn;else if($n(l))if(Kn)g=ar;else{g=nr;var v=tr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=rr);switch(g&&(g=g(e,r))?Vn(i,g,n,a):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&ae(l,"number",l.value)),v=r?Jr(r):window,e){case"focusin":($n(v)||"true"===v.contentEditable)&&(hr=v,mr=r,gr=null);break;case"focusout":gr=mr=hr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,yr(i,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":yr(i,n,a)}var y;if(On)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Fn?jn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(zn&&"ko"!==n.locale&&(Fn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Fn&&(y=tn()):(Jt="value"in(Zt=a)?Zt.value:Zt.textContent,Fn=!0)),0<(v=Or(r,b)).length&&(b=new wn(b,e,null,n,a),i.push({event:b,listeners:v}),(y||null!==(y=Dn(n)))&&(b.data=y))),(y=Ln?function(e,t){switch(e){case"compositionend":return Dn(t);case"keypress":return 32!==t.which?null:(Bn=!0,Mn);case"textInput":return(e=t.data)===Mn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Fn)return"compositionend"===e||!On&&jn(e,t)?(e=tn(),en=Jt=Zt=null,Fn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Or(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=y)}Er(i,t)}))}function Nr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Or(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=De(e,n))&&r.unshift(Nr(e,o,a)),null!=(o=De(e,t))&&r.push(Nr(e,o,a))),e=e.return}return r}function Rr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Lr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=De(n,o))&&i.unshift(Nr(n,u,l)):a||null!=(u=De(n,o))&&i.push(Nr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function zr(){}var Mr=null,Br=null;function jr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Dr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Fr="function"==typeof setTimeout?setTimeout:void 0,Ur="function"==typeof clearTimeout?clearTimeout:void 0;function $r(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Vr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Hr=0,Qr=Math.random().toString(36).slice(2),qr="__reactFiber$"+Qr,Yr="__reactProps$"+Qr,Kr="__reactContainer$"+Qr,Gr="__reactEvents$"+Qr;function Xr(e){var t=e[qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Kr]||n[qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[qr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[qr]||e[Kr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Jr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ea(e){return e[Yr]||null}function ta(e){var t=e[Gr];return void 0===t&&(t=e[Gr]=new Set),t}var na=[],ra=-1;function aa(e){return{current:e}}function oa(e){0>ra||(e.current=na[ra],na[ra]=null,ra--)}function ia(e,t){ra++,na[ra]=e.current,e.current=t}var la={},ua=aa(la),sa=aa(!1),ca=la;function fa(e,t){var n=e.type.contextTypes;if(!n)return la;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function da(e){return null!=e.childContextTypes}function pa(){oa(sa),oa(ua)}function ha(e,t,n){if(ua.current!==la)throw Error(i(168));ia(ua,t),ia(sa,n)}function ma(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,q(t)||"Unknown",o));return a({},n,r)}function ga(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||la,ca=ua.current,ia(ua,e),ia(sa,sa.current),!0}function va(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ma(e,t,ca),r.__reactInternalMemoizedMergedChildContext=e,oa(sa),oa(ua),ia(ua,e)):oa(sa),ia(sa,n)}var ya=null,ba=null,wa=o.unstable_runWithPriority,ka=o.unstable_scheduleCallback,Sa=o.unstable_cancelCallback,Ca=o.unstable_shouldYield,Ea=o.unstable_requestPaint,xa=o.unstable_now,Aa=o.unstable_getCurrentPriorityLevel,_a=o.unstable_ImmediatePriority,Pa=o.unstable_UserBlockingPriority,Ia=o.unstable_NormalPriority,Ta=o.unstable_LowPriority,Na=o.unstable_IdlePriority,Oa={},Ra=void 0!==Ea?Ea:function(){},La=null,za=null,Ma=!1,Ba=xa(),ja=1e4>Ba?xa:function(){return xa()-Ba};function Da(){switch(Aa()){case _a:return 99;case Pa:return 98;case Ia:return 97;case Ta:return 96;case Na:return 95;default:throw Error(i(332))}}function Fa(e){switch(e){case 99:return _a;case 98:return Pa;case 97:return Ia;case 96:return Ta;case 95:return Na;default:throw Error(i(332))}}function Ua(e,t){return e=Fa(e),wa(e,t)}function $a(e,t,n){return e=Fa(e),ka(e,t,n)}function Va(){if(null!==za){var e=za;za=null,Sa(e)}Wa()}function Wa(){if(!Ma&&null!==La){Ma=!0;var e=0;try{var t=La;Ua(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),La=null}catch(t){throw null!==La&&(La=La.slice(e+1)),ka(_a,Va),t}finally{Ma=!1}}}var Ha=k.ReactCurrentBatchConfig;function Qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var qa=aa(null),Ya=null,Ka=null,Ga=null;function Xa(){Ga=Ka=Ya=null}function Za(e){var t=qa.current;oa(qa),e.type._context._currentValue=t}function Ja(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function eo(e,t){Ya=e,Ga=Ka=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Oi=!0),e.firstContext=null)}function to(e,t){if(Ga!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ga=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ka){if(null===Ya)throw Error(i(308));Ka=t,Ya.dependencies={lanes:0,firstContext:t,responders:null}}else Ka=Ka.next=t;return e._currentValue}var no=!1;function ro(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function lo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function uo(e,t,n,r){var o=e.updateQueue;no=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==i){for(d=o.baseState,l=0,f=c=s=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:no=!0}}null!==i.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=o.shared.pending))break;i=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(s=d),o.baseState=s,o.firstBaseUpdate=c,o.lastBaseUpdate=f,Ll|=l,e.lanes=l,e.memoizedState=d}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var co=(new r.Component).refs;function fo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var po={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=iu(e),a=oo(n,r);a.tag=2,null!=t&&(a.callback=t),io(e,a),lu(e,r,n)}};function ho(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(a,o))}function mo(e,t,n){var r=!1,a=la,o=t.contextType;return"object"==typeof o&&null!==o?o=to(o):(a=da(t)?ca:ua.current,o=(r=null!=(r=t.contextTypes))?fa(e,a):la),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=po,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function go(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&po.enqueueReplaceState(t,t.state,null)}function vo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=co,ro(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=to(o):(o=da(t)?ca:ua.current,a.context=fa(e,o)),uo(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(fo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&po.enqueueReplaceState(a,a.state,null),uo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yo=Array.isArray;function bo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===co&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function wo(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ko(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Bu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Uu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=bo(e,t,n),r.return=e,r):((r=ju(n.type,n.key,n.props,null,e.mode,r)).ref=bo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=$u(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Du(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Uu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(n=ju(t.type,t.key,t.props,null,e.mode,n)).ref=bo(e,null,t),n.return=e,n;case C:return(t=$u(t,e.mode,n)).return=e,t}if(yo(t)||$(t))return(t=Du(t,e.mode,n,null)).return=e,t;wo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===a?n.type===E?f(e,t,n.props.children,r,a):s(e,t,n,r):null;case C:return n.key===a?c(e,t,n,r):null}if(yo(n)||$(n))return null!==a?null:f(e,t,n,r,null);wo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return e=e.get(null===r.key?n:r.key)||null,r.type===E?f(t,e,r.props.children,a,r.key):s(t,e,r,a);case C:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(yo(r)||$(r))return f(t,e=e.get(n)||null,r,a,null);wo(t,r)}return null}function m(a,i,l,u){for(var s=null,c=null,f=i,m=i=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=p(a,f,l[m],u);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(a,f),i=o(v,i,m),null===c?s=v:c.sibling=v,c=v,f=g}if(m===l.length)return n(a,f),s;if(null===f){for(;m<l.length;m++)null!==(f=d(a,l[m],u))&&(i=o(f,i,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(a,f);m<l.length;m++)null!==(g=h(f,a,m,l[m],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),i=o(g,i,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(a,e)})),s}function g(a,l,u,s){var c=$(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,m=l,g=l=0,v=null,y=u.next();null!==m&&!y.done;g++,y=u.next()){m.index>g?(v=m,m=null):v=m.sibling;var b=p(a,m,y.value,s);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(a,m),l=o(b,l,g),null===f?c=b:f.sibling=b,f=b,m=v}if(y.done)return n(a,m),c;if(null===m){for(;!y.done;g++,y=u.next())null!==(y=d(a,y.value,s))&&(l=o(y,l,g),null===f?c=y:f.sibling=y,f=y);return c}for(m=r(a,m);!y.done;g++,y=u.next())null!==(y=h(m,a,g,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),l=o(y,l,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(a,e)})),c}return function(e,r,o,u){var s="object"==typeof o&&null!==o&&o.type===E&&null===o.key;s&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case S:e:{for(c=o.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(o.type===E){n(e,s.sibling),(r=a(s,o.props.children)).return=e,e=r;break e}break;default:if(s.elementType===o.type){n(e,s.sibling),(r=a(s,o.props)).ref=bo(e,s,o),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}o.type===E?((r=Du(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=ju(o.type,o.key,o.props,null,e.mode,u)).ref=bo(e,r,o),u.return=e,e=u)}return l(e);case C:e:{for(s=o.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=$u(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Uu(o,e.mode,u)).return=e,e=r),l(e);if(yo(o))return m(e,r,o,u);if($(o))return g(e,r,o,u);if(c&&wo(e,o),void 0===o&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,q(e.type)||"Component"))}return n(e,r)}}var So=ko(!0),Co=ko(!1),Eo={},xo=aa(Eo),Ao=aa(Eo),_o=aa(Eo);function Po(e){if(e===Eo)throw Error(i(174));return e}function Io(e,t){switch(ia(_o,t),ia(Ao,e),ia(xo,Eo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(xo),ia(xo,t)}function To(){oa(xo),oa(Ao),oa(_o)}function No(e){Po(_o.current);var t=Po(xo.current),n=pe(t,e.type);t!==n&&(ia(Ao,e),ia(xo,n))}function Oo(e){Ao.current===e&&(oa(xo),oa(Ao))}var Ro=aa(0);function Lo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var zo=null,Mo=null,Bo=!1;function jo(e,t){var n=zu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Do(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Fo(e){if(Bo){var t=Mo;if(t){var n=t;if(!Do(e,t)){if(!(t=Vr(n.nextSibling))||!Do(e,t))return e.flags=-1025&e.flags|2,Bo=!1,void(zo=e);jo(zo,n)}zo=e,Mo=Vr(t.firstChild)}else e.flags=-1025&e.flags|2,Bo=!1,zo=e}}function Uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;zo=e}function $o(e){if(e!==zo)return!1;if(!Bo)return Uo(e),Bo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Dr(t,e.memoizedProps))for(t=Mo;t;)jo(e,t),t=Vr(t.nextSibling);if(Uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Mo=Vr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Mo=null}}else Mo=zo?Vr(e.stateNode.nextSibling):null;return!0}function Vo(){Mo=zo=null,Bo=!1}var Wo=[];function Ho(){for(var e=0;e<Wo.length;e++)Wo[e]._workInProgressVersionPrimary=null;Wo.length=0}var Qo=k.ReactCurrentDispatcher,qo=k.ReactCurrentBatchConfig,Yo=0,Ko=null,Go=null,Xo=null,Zo=!1,Jo=!1;function ei(){throw Error(i(321))}function ti(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function ni(e,t,n,r,a,o){if(Yo=o,Ko=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Qo.current=null===e||null===e.memoizedState?Pi:Ii,e=n(r,a),Jo){o=0;do{if(Jo=!1,!(25>o))throw Error(i(301));o+=1,Xo=Go=null,t.updateQueue=null,Qo.current=Ti,e=n(r,a)}while(Jo)}if(Qo.current=_i,t=null!==Go&&null!==Go.next,Yo=0,Xo=Go=Ko=null,Zo=!1,t)throw Error(i(300));return e}function ri(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Xo?Ko.memoizedState=Xo=e:Xo=Xo.next=e,Xo}function ai(){if(null===Go){var e=Ko.alternate;e=null!==e?e.memoizedState:null}else e=Go.next;var t=null===Xo?Ko.memoizedState:Xo.next;if(null!==t)Xo=t,Go=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Go=e).memoizedState,baseState:Go.baseState,baseQueue:Go.baseQueue,queue:Go.queue,next:null},null===Xo?Ko.memoizedState=Xo=e:Xo=Xo.next=e}return Xo}function oi(e,t){return"function"==typeof t?t(e):t}function ii(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Go,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,s=a;do{var c=s.lane;if((Yo&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,o=r):u=u.next=f,Ko.lanes|=c,Ll|=c}s=s.next}while(null!==s&&s!==a);null===u?o=r:u.next=l,or(r,t.memoizedState)||(Oi=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function li(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);or(o,t.memoizedState)||(Oi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ui(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Yo&e)===e)&&(t._workInProgressVersionPrimary=r,Wo.push(t))),e)return n(t._source);throw Wo.push(t),Error(i(350))}function si(e,t,n,r){var a=Al;if(null===a)throw Error(i(349));var o=t._getVersion,l=o(t._source),u=Qo.current,s=u.useState((function(){return ui(a,t,n)})),c=s[1],f=s[0];s=Xo;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var g=Ko;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=o(t._source);if(!or(l,e)){e=n(t._source),or(f,e)||(c(e),e=iu(g),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var u=31-$t(i),s=1<<u;r[u]|=e,i&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(g);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(h,n)&&or(m,t)&&or(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:f}).dispatch=c=Ai.bind(null,Ko,e),s.queue=e,s.baseQueue=null,f=ui(a,t,n),s.memoizedState=s.baseState=f),f}function ci(e,t,n){return si(ai(),e,t,n)}function fi(e){var t=ri();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:e}).dispatch=Ai.bind(null,Ko,e),[t.memoizedState,e]}function di(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ko.updateQueue)?(t={lastEffect:null},Ko.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function pi(e){return e={current:e},ri().memoizedState=e}function hi(){return ai().memoizedState}function mi(e,t,n,r){var a=ri();Ko.flags|=e,a.memoizedState=di(1|t,n,void 0,void 0===r?null:r)}function gi(e,t,n,r){var a=ai();r=void 0===r?null:r;var o=void 0;if(null!==Go){var i=Go.memoizedState;if(o=i.destroy,null!==r&&ti(r,i.deps))return void di(t,n,o,r)}Ko.flags|=e,a.memoizedState=di(1|t,n,o,r)}function vi(e,t){return mi(516,4,e,t)}function yi(e,t){return gi(516,4,e,t)}function bi(e,t){return gi(4,2,e,t)}function wi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ki(e,t,n){return n=null!=n?n.concat([e]):null,gi(4,2,wi.bind(null,t,e),n)}function Si(){}function Ci(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ei(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function xi(e,t){var n=Da();Ua(98>n?98:n,(function(){e(!0)})),Ua(97<n?97:n,(function(){var n=qo.transition;qo.transition=1;try{e(!1),t()}finally{qo.transition=n}}))}function Ai(e,t,n){var r=ou(),a=iu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Ko||null!==i&&i===Ko)Jo=Zo=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(o.eagerReducer=i,o.eagerState=u,or(u,l))return}catch(e){}lu(e,a,r)}}var _i={readContext:to,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},Pi={readContext:to,useCallback:function(e,t){return ri().memoizedState=[e,void 0===t?null:t],e},useContext:to,useEffect:vi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,mi(4,2,wi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var n=ri();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ri();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ai.bind(null,Ko,e),[r.memoizedState,e]},useRef:pi,useState:fi,useDebugValue:Si,useDeferredValue:function(e){var t=fi(e),n=t[0],r=t[1];return vi((function(){var t=qo.transition;qo.transition=1;try{r(e)}finally{qo.transition=t}}),[e]),n},useTransition:function(){var e=fi(!1),t=e[0];return pi(e=xi.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ri();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},si(r,e,t,n)},useOpaqueIdentifier:function(){if(Bo){var e=!1,t=function(e){return{$$typeof:z,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Hr++).toString(36))),Error(i(355))})),n=fi(t)[1];return 0==(2&Ko.mode)&&(Ko.flags|=516,di(5,(function(){n("r:"+(Hr++).toString(36))}),void 0,null)),t}return fi(t="r:"+(Hr++).toString(36)),t},unstable_isNewReconciler:!1},Ii={readContext:to,useCallback:Ci,useContext:to,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:Ei,useReducer:ii,useRef:hi,useState:function(){return ii(oi)},useDebugValue:Si,useDeferredValue:function(e){var t=ii(oi),n=t[0],r=t[1];return yi((function(){var t=qo.transition;qo.transition=1;try{r(e)}finally{qo.transition=t}}),[e]),n},useTransition:function(){var e=ii(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return ii(oi)[0]},unstable_isNewReconciler:!1},Ti={readContext:to,useCallback:Ci,useContext:to,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:Ei,useReducer:li,useRef:hi,useState:function(){return li(oi)},useDebugValue:Si,useDeferredValue:function(e){var t=li(oi),n=t[0],r=t[1];return yi((function(){var t=qo.transition;qo.transition=1;try{r(e)}finally{qo.transition=t}}),[e]),n},useTransition:function(){var e=li(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return li(oi)[0]},unstable_isNewReconciler:!1},Ni=k.ReactCurrentOwner,Oi=!1;function Ri(e,t,n,r){t.child=null===e?Co(t,null,n,r):So(t,e.child,n,r)}function Li(e,t,n,r,a){n=n.render;var o=t.ref;return eo(t,a),r=ni(e,t,n,r,o,a),null===e||Oi?(t.flags|=1,Ri(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zi(e,t,a))}function zi(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!=typeof i||Mu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=ju(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Mi(e,t,i,r,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:lr)(a,r)&&e.ref===t.ref)?Zi(e,t,o):(t.flags|=1,(e=Bu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Mi(e,t,n,r,a,o){if(null!==e&&lr(e.memoizedProps,r)&&e.ref===t.ref){if(Oi=!1,0==(o&a))return t.lanes=e.lanes,Zi(e,t,o);0!=(16384&e.flags)&&(Oi=!0)}return Di(e,t,n,r,o)}function Bi(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},pu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},pu(0,e),null;t.memoizedState={baseLanes:0},pu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,pu(0,r);return Ri(e,t,a,n),t.child}function ji(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Di(e,t,n,r,a){var o=da(n)?ca:ua.current;return o=fa(t,o),eo(t,a),n=ni(e,t,n,r,o,a),null===e||Oi?(t.flags|=1,Ri(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zi(e,t,a))}function Fi(e,t,n,r,a){if(da(n)){var o=!0;ga(t)}else o=!1;if(eo(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),mo(t,n,r),vo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?to(s):fa(t,s=da(n)?ca:ua.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&go(t,i,r,s),no=!1;var d=t.memoizedState;i.state=d,uo(t,r,i,a),u=t.memoizedState,l!==r||d!==u||sa.current||no?("function"==typeof c&&(fo(t,n,c,r),u=t.memoizedState),(l=no||ho(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ao(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Qa(t.type,l),i.props=s,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?to(u):fa(t,u=da(n)?ca:ua.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&go(t,i,r,u),no=!1,d=t.memoizedState,i.state=d,uo(t,r,i,a);var h=t.memoizedState;l!==f||d!==h||sa.current||no?("function"==typeof p&&(fo(t,n,p,r),h=t.memoizedState),(s=no||ho(t,n,s,r,d,h,u))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Ui(e,t,n,r,o,a)}function Ui(e,t,n,r,a,o){ji(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&va(t,n,!1),Zi(e,t,o);r=t.stateNode,Ni.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=So(t,e.child,null,o),t.child=So(t,null,l,o)):Ri(e,t,l,o),t.memoizedState=r.state,a&&va(t,n,!0),t.child}function $i(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),Io(e,t.containerInfo)}var Vi,Wi,Hi,Qi={dehydrated:null,retryLane:0};function qi(e,t,n){var r,a=t.pendingProps,o=Ro.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(Ro,1&o),null===e?(void 0!==a.fallback&&Fo(t),e=a.children,o=a.fallback,i?(e=Yi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qi,e):"number"==typeof a.unstable_expectedLoadTime?(e=Yi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qi,t.lanes=33554432,e):((n=Fu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=function(e,t,n,r,a){var o=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&o)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Bu(i,l),null!==e?r=Bu(e,r):(r=Du(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),i=t.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=Qi,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Bu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Yi(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Fu(t,a,0,null),n=Du(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Ki(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Ja(e.return,t)}function Gi(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=o)}function Xi(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Ri(e,t,r.children,n),0!=(2&(r=Ro.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ki(e,n);else if(19===e.tag)Ki(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(Ro,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Lo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Gi(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Lo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Gi(t,!0,n,null,o,t.lastEffect);break;case"together":Gi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ll|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Bu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Ji(e,t){if(!Bo)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function el(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(t.type)&&pa(),null;case 3:return To(),oa(sa),oa(ua),Ho(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||($o(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Oo(t);var o=Po(_o.current);if(n=t.type,null!==e&&null!=t.stateNode)Wi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Po(xo.current),$o(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[qr]=t,r[Yr]=l,n){case"dialog":xr("cancel",r),xr("close",r);break;case"iframe":case"object":case"embed":xr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)xr(kr[e],r);break;case"source":xr("error",r);break;case"img":case"image":case"link":xr("error",r),xr("load",r);break;case"details":xr("toggle",r);break;case"input":ee(r,l),xr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},xr("invalid",r);break;case"textarea":ue(r,l),xr("invalid",r)}for(var s in Ce(n,l),e=null,l)l.hasOwnProperty(s)&&(o=l[s],"children"===s?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(s)&&null!=o&&"onScroll"===s&&xr("scroll",r));switch(n){case"input":G(r),re(r,l,!0);break;case"textarea":G(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=zr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[qr]=t,e[Yr]=r,Vi(e,t),t.stateNode=e,s=Ee(n,r),n){case"dialog":xr("cancel",e),xr("close",e),o=r;break;case"iframe":case"object":case"embed":xr("load",e),o=r;break;case"video":case"audio":for(o=0;o<kr.length;o++)xr(kr[o],e);o=r;break;case"source":xr("error",e),o=r;break;case"img":case"image":case"link":xr("error",e),xr("load",e),o=r;break;case"details":xr("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),xr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),xr("invalid",e);break;case"textarea":ue(e,r),o=le(e,r),xr("invalid",e);break;default:o=r}Ce(n,o);var c=o;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ge(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ve(e,f):"number"==typeof f&&ve(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&xr("scroll",e):null!=f&&w(e,l,f,s))}switch(n){case"input":G(e),re(e,r,!1);break;case"textarea":G(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Y(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=zr)}jr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Hi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=Po(_o.current),Po(xo.current),$o(t)?(r=t.stateNode,n=t.memoizedProps,r[qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[qr]=t,t.stateNode=r)}return null;case 13:return oa(Ro),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&$o(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ro.current)?0===Nl&&(Nl=3):(0!==Nl&&3!==Nl||(Nl=4),null===Al||0==(134217727&Ll)&&0==(134217727&zl)||fu(Al,Pl))),(r||n)&&(t.flags|=4),null);case 4:return To(),null===e&&_r(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return da(t.type)&&pa(),null;case 19:if(oa(Ro),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)Ji(r,!1);else{if(0!==Nl||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Lo(e))){for(t.flags|=64,Ji(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(Ro,1&Ro.current|2),t.child}e=e.sibling}null!==r.tail&&ja()>Dl&&(t.flags|=64,l=!0,Ji(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Lo(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ji(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Bo)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*ja()-r.renderingStartTime>Dl&&1073741824!==n&&(t.flags|=64,l=!0,Ji(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=ja(),n.sibling=null,t=Ro.current,ia(Ro,l?1&t|2:1&t),n):null;case 23:case 24:return hu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function tl(e){switch(e.tag){case 1:da(e.type)&&pa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(To(),oa(sa),oa(ua),Ho(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Oo(e),null;case 13:return oa(Ro),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(Ro),null;case 4:return To(),null;case 10:return Za(e),null;case 23:case 24:return hu(),null;default:return null}}function nl(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function rl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Vi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wi=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Po(xo.current);var i,l=null;switch(n){case"input":o=J(e,o),r=J(e,r),l=[];break;case"option":o=oe(e,o),r=oe(e,r),l=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":o=le(e,o),r=le(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=zr)}for(f in Ce(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var s=o[f];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&xr("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===z?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Hi=function(e,t,n,r){n!==r&&(t.flags|=4)};var al="function"==typeof WeakMap?WeakMap:Map;function ol(e,t,n){(n=oo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vl||(Vl=!0,Wl=r),rl(0,t)},n}function il(e,t,n){(n=oo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return rl(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Hl?Hl=new Set([this]):Hl.add(this),rl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ll="function"==typeof WeakSet?WeakSet:Set;function ul(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Nu(e,t)}else t.current=null}function sl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&$r(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function cl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Pu(n,e),_u(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&jr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function fl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function dl(e,t){if(ba&&"function"==typeof ba.onCommitFiberUnmount)try{ba.onCommitFiberUnmount(ya,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Pu(t,n);else{r=t;try{a()}catch(e){Nu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ul(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Nu(t,e)}break;case 5:ul(t);break;case 4:yl(e,t)}}function pl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hl(e){return 5===e.tag||3===e.tag||4===e.tag}function ml(e){e:{for(var t=e.return;null!==t;){if(hl(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ve(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?gl(e,n,t):vl(e,n,t)}function gl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=zr));else if(4!==r&&null!==(e=e.child))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function vl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(vl(e,t,n),e=e.sibling;null!==e;)vl(e,t,n),e=e.sibling}function yl(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,s=u;;)if(dl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(dl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function bl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Yr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ee(e,a),t=Ee(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?ge(n,u):"children"===l?ve(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ie(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(jl=ja(),fl(t.child,!0)),void wl(t);case 19:return void wl(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(i(163))}function wl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ll),t.forEach((function(t){var r=Ru.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function kl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Sl=Math.ceil,Cl=k.ReactCurrentDispatcher,El=k.ReactCurrentOwner,xl=0,Al=null,_l=null,Pl=0,Il=0,Tl=aa(0),Nl=0,Ol=null,Rl=0,Ll=0,zl=0,Ml=0,Bl=null,jl=0,Dl=1/0;function Fl(){Dl=ja()+500}var Ul,$l=null,Vl=!1,Wl=null,Hl=null,Ql=!1,ql=null,Yl=90,Kl=[],Gl=[],Xl=null,Zl=0,Jl=null,eu=-1,tu=0,nu=0,ru=null,au=!1;function ou(){return 0!=(48&xl)?ja():-1!==eu?eu:eu=ja()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Da()?1:2;if(0===tu&&(tu=Rl),0!==Ha.transition){0!==nu&&(nu=null!==Bl?Bl.pendingLanes:0),e=tu;var t=4186112&~nu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Da(),e=jt(0!=(4&xl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu)}function lu(e,t,n){if(50<Zl)throw Zl=0,Jl=null,Error(i(185));if(null===(e=uu(e,t)))return null;Ut(e,t,n),e===Al&&(zl|=t,4===Nl&&fu(e,Pl));var r=Da();1===t?0!=(8&xl)&&0==(48&xl)?du(e):(su(e,n),0===xl&&(Fl(),Va())):(0==(4&xl)||98!==r&&99!==r||(null===Xl?Xl=new Set([e]):Xl.add(e)),su(e,n)),Bl=e}function uu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-$t(l),s=1<<u,c=o[u];if(-1===c){if(0==(s&r)||0!=(s&a)){c=t,zt(s);var f=Lt;o[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=Mt(e,e===Al?Pl:0),t=Lt,0===r)null!==n&&(n!==Oa&&Sa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Oa&&Sa(n)}15===t?(n=du.bind(null,e),null===La?(La=[n],za=ka(_a,Wa)):La.push(n),n=Oa):n=14===t?$a(99,du.bind(null,e)):$a(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),cu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function cu(e){if(eu=-1,nu=tu=0,0!=(48&xl))throw Error(i(327));var t=e.callbackNode;if(Au()&&e.callbackNode!==t)return null;var n=Mt(e,e===Al?Pl:0);if(0===n)return null;var r=n,a=xl;xl|=16;var o=vu();for(Al===e&&Pl===r||(Fl(),mu(e,r));;)try{wu();break}catch(t){gu(e,t)}if(Xa(),Cl.current=o,xl=a,null!==_l?r=0:(Al=null,Pl=0,r=Nl),0!=(Rl&zl))mu(e,0);else if(0!==r){if(2===r&&(xl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(n=Bt(e))&&(r=yu(e,n))),1===r)throw t=Ol,mu(e,0),fu(e,n),su(e,ja()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Cu(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=jl+500-ja())){if(0!==Mt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Fr(Cu.bind(null,e),r);break}Cu(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-$t(n);o=1<<l,(l=r[l])>a&&(a=l),n&=~o}if(n=a,10<(n=(120>(n=ja()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Sl(n/1960))-n)){e.timeoutHandle=Fr(Cu.bind(null,e),n);break}Cu(e);break;case 5:Cu(e);break;default:throw Error(i(329))}}return su(e,ja()),e.callbackNode===t?cu.bind(null,e):null}function fu(e,t){for(t&=~Ml,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-$t(t),r=1<<n;e[n]=-1,t&=~r}}function du(e){if(0!=(48&xl))throw Error(i(327));if(Au(),e===Al&&0!=(e.expiredLanes&Pl)){var t=Pl,n=yu(e,t);0!=(Rl&zl)&&(n=yu(e,t=Mt(e,t)))}else n=yu(e,t=Mt(e,0));if(0!==e.tag&&2===n&&(xl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(t=Bt(e))&&(n=yu(e,t))),1===n)throw n=Ol,mu(e,0),fu(e,t),su(e,ja()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cu(e),su(e,ja()),null}function pu(e,t){ia(Tl,Il),Il|=t,Rl|=t}function hu(){Il=Tl.current,oa(Tl)}function mu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Ur(n)),null!==_l)for(n=_l.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&pa();break;case 3:To(),oa(sa),oa(ua),Ho();break;case 5:Oo(r);break;case 4:To();break;case 13:case 19:oa(Ro);break;case 10:Za(r);break;case 23:case 24:hu()}n=n.return}Al=e,_l=Bu(e.current,null),Pl=Il=Rl=t,Nl=0,Ol=null,Ml=zl=Ll=0}function gu(e,t){for(;;){var n=_l;try{if(Xa(),Qo.current=_i,Zo){for(var r=Ko.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Zo=!1}if(Yo=0,Xo=Go=Ko=null,Jo=!1,El.current=null,null===n||null===n.return){Nl=1,Ol=t,_l=null;break}e:{var o=e,i=n.return,l=n,u=t;if(t=Pl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&Ro.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var g=d.updateQueue;if(null===g){var v=new Set;v.add(s),d.updateQueue=v}else g.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=oo(-1,1);y.tag=2,io(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new al,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var w=Ou.bind(null,o,s,l);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Nl&&(Nl=2),u=nl(u,l),d=i;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,lo(d,ol(0,o,t));break e;case 1:o=u;var k=d.type,S=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===Hl||!Hl.has(S)))){d.flags|=4096,t&=-t,d.lanes|=t,lo(d,il(d,o,t));break e}}d=d.return}while(null!==d)}Su(n)}catch(e){t=e,_l===n&&null!==n&&(_l=n=n.return);continue}break}}function vu(){var e=Cl.current;return Cl.current=_i,null===e?_i:e}function yu(e,t){var n=xl;xl|=16;var r=vu();for(Al===e&&Pl===t||mu(e,t);;)try{bu();break}catch(t){gu(e,t)}if(Xa(),xl=n,Cl.current=r,null!==_l)throw Error(i(261));return Al=null,Pl=0,Nl}function bu(){for(;null!==_l;)ku(_l)}function wu(){for(;null!==_l&&!Ca();)ku(_l)}function ku(e){var t=Ul(e.alternate,e,Il);e.memoizedProps=e.pendingProps,null===t?Su(e):_l=t,El.current=null}function Su(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=el(n,t,Il)))return void(_l=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Il)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=tl(t)))return n.flags&=2047,void(_l=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(_l=t);_l=t=e}while(null!==t);0===Nl&&(Nl=5)}function Cu(e){var t=Da();return Ua(99,Eu.bind(null,e,t)),null}function Eu(e,t){do{Au()}while(null!==ql);if(0!=(48&xl))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<o;){var s=31-$t(o),c=1<<s;a[s]=0,l[s]=-1,u[s]=-1,o&=~c}if(null!==Xl&&0==(24&r)&&Xl.has(e)&&Xl.delete(e),e===Al&&(_l=Al=null,Pl=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=xl,xl|=32,El.current=null,Mr=qt,dr(l=fr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,o=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,g=l,v=null;t:for(;;){for(var y;g!==u||0!==o&&3!==g.nodeType||(d=f+o),g!==s||0!==c&&3!==g.nodeType||(p=f+c),3===g.nodeType&&(f+=g.nodeValue.length),null!==(y=g.firstChild);)v=g,g=y;for(;;){if(g===l)break t;if(v===u&&++h===o&&(d=f),v===s&&++m===c&&(p=f),null!==(y=g.nextSibling))break;v=(g=v).parentNode}g=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Br={focusedElem:l,selectionRange:u},qt=!1,ru=null,au=!1,$l=r;do{try{xu()}catch(e){if(null===$l)throw Error(i(330));Nu($l,e),$l=$l.nextEffect}}while(null!==$l);ru=null,$l=r;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ve($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:ml($l),$l.flags&=-3;break;case 6:ml($l),$l.flags&=-3,bl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,bl($l.alternate,$l);break;case 4:bl($l.alternate,$l);break;case 8:yl(l,u=$l);var S=u.alternate;pl(u),null!==S&&pl(S)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Nu($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=Br,w=fr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&cr(b.ownerDocument.documentElement,b)){null!==l&&dr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,S=Math.min(l.start,u),l=void 0===l.end?S:Math.min(l.end,u),!k.extend&&S>l&&(u=l,l=S,S=u),u=sr(b,S),o=sr(b,l),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),S>l?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qt=!!Mr,Br=Mr=null,e.current=n,$l=r;do{try{for(b=e;null!==$l;){var C=$l.flags;if(36&C&&cl(b,$l.alternate,$l),128&C){w=void 0;var E=$l.ref;if(null!==E){var x=$l.stateNode;switch($l.tag){case 5:w=x;break;default:w=x}"function"==typeof E?E(w):E.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Nu($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Ra(),xl=a}else e.current=n;if(Ql)Ql=!1,ql=e,Yl=t;else for($l=r;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((C=$l).sibling=null,C.stateNode=null),$l=t;if(0===(r=e.pendingLanes)&&(Hl=null),1===r?e===Jl?Zl++:(Zl=0,Jl=e):Zl=0,n=n.stateNode,ba&&"function"==typeof ba.onCommitFiberRoot)try{ba.onCommitFiberRoot(ya,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,ja()),Vl)throw Vl=!1,e=Wl,Wl=null,e;return 0!=(8&xl)||Va(),null}function xu(){for(;null!==$l;){var e=$l.alternate;au||null===ru||(0!=(8&$l.flags)?Ze($l,ru)&&(au=!0):13===$l.tag&&kl(e,$l)&&Ze($l,ru)&&(au=!0));var t=$l.flags;0!=(256&t)&&sl(e,$l),0==(512&t)||Ql||(Ql=!0,$a(97,(function(){return Au(),null}))),$l=$l.nextEffect}}function Au(){if(90!==Yl){var e=97<Yl?97:Yl;return Yl=90,Ua(e,Iu)}return!1}function _u(e,t){Kl.push(t,e),Ql||(Ql=!0,$a(97,(function(){return Au(),null})))}function Pu(e,t){Gl.push(t,e),Ql||(Ql=!0,$a(97,(function(){return Au(),null})))}function Iu(){if(null===ql)return!1;var e=ql;if(ql=null,0!=(48&xl))throw Error(i(331));var t=xl;xl|=32;var n=Gl;Gl=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));Nu(o,e)}}for(n=Kl,Kl=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(i(330));Nu(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return xl=t,Va(),!0}function Tu(e,t,n){io(e,t=ol(0,t=nl(n,t),1)),t=ou(),null!==(e=uu(e,1))&&(Ut(e,1,t),su(e,t))}function Nu(e,t){if(3===e.tag)Tu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Tu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r))){var a=il(n,e=nl(t,e),1);if(io(n,a),a=ou(),null!==(n=uu(n,1)))Ut(n,1,a),su(n,a);else if("function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Ou(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,Al===e&&(Pl&n)===n&&(4===Nl||3===Nl&&(62914560&Pl)===Pl&&500>ja()-jl?mu(e,0):Ml|=n),su(e,t)}function Ru(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Da()?1:2:(0===tu&&(tu=Rl),0===(t=Dt(62914560&~tu))&&(t=4194304))),n=ou(),null!==(e=uu(e,t))&&(Ut(e,t,n),su(e,n))}function Lu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function zu(e,t,n,r){return new Lu(e,t,n,r)}function Mu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bu(e,t){var n=e.alternate;return null===n?((n=zu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ju(e,t,n,r,a,o){var l=2;if(r=e,"function"==typeof e)Mu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case E:return Du(n.children,a,o,t);case M:l=8,a|=16;break;case x:l=8,a|=1;break;case A:return(e=zu(12,n,t,8|a)).elementType=A,e.type=A,e.lanes=o,e;case T:return(e=zu(13,n,t,a)).type=T,e.elementType=T,e.lanes=o,e;case N:return(e=zu(19,n,t,a)).elementType=N,e.lanes=o,e;case B:return Fu(n,a,o,t);case j:return(e=zu(24,n,t,a)).elementType=j,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case _:l=10;break e;case P:l=9;break e;case I:l=11;break e;case O:l=14;break e;case R:l=16,r=null;break e;case L:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=zu(l,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Du(e,t,n,r){return(e=zu(7,e,r,t)).lanes=n,e}function Fu(e,t,n,r){return(e=zu(23,e,r,t)).elementType=B,e.lanes=n,e}function Uu(e,t,n){return(e=zu(6,e,null,t)).lanes=n,e}function $u(e,t,n){return(t=zu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Vu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ft(0),this.expirationTimes=Ft(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ft(0),this.mutableSourceEagerHydrationData=null}function Wu(e,t,n,r){var a=t.current,o=ou(),l=iu(a);e:if(n){t:{if(Ke(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(da(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(da(s)){n=ma(n,s,u);break e}}n=u}else n=la;return null===t.context?t.context=n:t.pendingContext=n,(t=oo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(a,t),lu(a,l,o),l}function Hu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Qu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qu(e,t){Qu(e,t),(e=e.alternate)&&Qu(e,t)}function Yu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Vu(e,t,null!=n&&!0===n.hydrate),t=zu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ro(t),e[Kr]=n.current,_r(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Gu(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Hu(i);l.call(e)}}Wu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Yu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Hu(i);u.call(e)}}!function(e,t){var n=xl;xl&=-2,xl|=8;try{e(t)}finally{0===(xl=n)&&(Fl(),Va())}}((function(){Wu(t,i,e,a)}))}return Hu(i)}Ul=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sa.current)Oi=!0;else{if(0==(n&r)){switch(Oi=!1,t.tag){case 3:$i(t),Vo();break;case 5:No(t);break;case 1:da(t.type)&&ga(t);break;case 4:Io(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(qa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?qi(e,t,n):(ia(Ro,1&Ro.current),null!==(t=Zi(e,t,n))?t.sibling:null);ia(Ro,1&Ro.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Xi(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(Ro,Ro.current),r)break;return null;case 23:case 24:return t.lanes=0,Bi(e,t,n)}return Zi(e,t,n)}Oi=0!=(16384&e.flags)}else Oi=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,ua.current),eo(t,n),a=ni(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,da(r)){var o=!0;ga(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ro(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&fo(t,r,l,e),a.updater=po,t.stateNode=a,a._reactInternals=t,vo(t,r,e,n),t=Ui(null,t,r,!0,o,n)}else t.tag=0,Ri(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Mu(e)?1:0;if(null!=e){if((e=e.$$typeof)===I)return 11;if(e===O)return 14}return 2}(a),e=Qa(a,e),o){case 0:t=Di(null,t,a,e,n);break e;case 1:t=Fi(null,t,a,e,n);break e;case 11:t=Li(null,t,a,e,n);break e;case 14:t=zi(null,t,a,Qa(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Di(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Fi(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 3:if($i(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ao(e,t),uo(t,r,null,n),(r=t.memoizedState.element)===a)Vo(),t=Zi(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Mo=Vr(t.stateNode.containerInfo.firstChild),zo=t,o=Bo=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Wo.push(o);for(n=Co(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ri(e,t,r,n),Vo();t=t.child}return t;case 5:return No(t),null===e&&Fo(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,Dr(r,a)?l=null:null!==o&&Dr(r,o)&&(t.flags|=16),ji(e,t),Ri(e,t,l,n),t.child;case 6:return null===e&&Fo(t),null;case 13:return qi(e,t,n);case 4:return Io(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=So(t,null,r,n):Ri(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Li(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 7:return Ri(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ri(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ia(qa,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0==(o=or(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!sa.current){t=Zi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&o)){1===u.tag&&((c=oo(-1,n&-n)).tag=2,io(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),Ja(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Ri(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,eo(t,n),r=r(a=to(a,o.unstable_observedBits)),t.flags|=1,Ri(e,t,r,n),t.child;case 14:return o=Qa(a=t.type,t.pendingProps),zi(e,t,a,o=Qa(a.type,o),r,n);case 15:return Mi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,da(r)?(e=!0,ga(t)):e=!1,eo(t,n),mo(t,r,a),vo(t,r,a,n),Ui(null,t,r,!0,e,n);case 19:return Xi(e,t,n);case 23:case 24:return Bi(e,t,n)}throw Error(i(156,t.tag))},Yu.prototype.render=function(e){Wu(e,this._internalRoot,null,null)},Yu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Wu(null,e,null,(function(){t[Kr]=null}))},Je=function(e){13===e.tag&&(lu(e,4,ou()),qu(e,4))},et=function(e){13===e.tag&&(lu(e,67108864,ou()),qu(e,67108864))},tt=function(e){if(13===e.tag){var t=ou(),n=iu(e);lu(e,n,t),qu(e,n)}},nt=function(e,t){return t()},Ae=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ea(r);if(!a)throw Error(i(90));X(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Oe=function(e,t){var n=xl;xl|=1;try{return e(t)}finally{0===(xl=n)&&(Fl(),Va())}},Re=function(e,t,n,r,a){var o=xl;xl|=4;try{return Ua(98,e.bind(null,t,n,r,a))}finally{0===(xl=o)&&(Fl(),Va())}},Le=function(){0==(49&xl)&&(function(){if(null!==Xl){var e=Xl;Xl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,ja())}))}Va()}(),Au())},ze=function(e,t){var n=xl;xl|=2;try{return e(t)}finally{0===(xl=n)&&(Fl(),Va())}};var Xu={findFiberByHostInstance:Xr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Zu={bundleType:Xu.bundleType,version:Xu.version,rendererPackageName:Xu.rendererPackageName,rendererConfig:Xu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Xe(a),e;if(o===r)return Xe(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Xu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Ju=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ju.isDisabled&&Ju.supportsFiber)try{ya=Ju.inject(Zu),ba=Ju}catch(me){}}t.render=function(e,t,n){if(!Ku(t))throw Error(i(200));return Gu(null,e,t,!1,n)}},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,g=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case o:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case s:case d:case g:case m:case u:return e;default:return t}}case a:return t}}}function S(e){return k(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=o,t.Lazy=g,t.Memo=m,t.Portal=a,t.Profiler=l,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return S(e)||k(e)===c},t.isConcurrentMode=S,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===o},t.isLazy=function(e){return k(e)===g},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===l},t.isStrictMode=function(e){return k(e)===i},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===l||e===i||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===u||e.$$typeof===s||e.$$typeof===d||e.$$typeof===y||e.$$typeof===b||e.$$typeof===w||e.$$typeof===v)},t.typeOf=k},864:(e,t,n)=>{"use strict";e.exports=n(921)},585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},658:(e,t,n)=>{var r=n(585);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],o=0;o<t.length;o++)a.push(e(t[o],n,r).source);return c(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(o(e,n),t,n)}(t,n,a)},e.exports.parse=o,e.exports.compile=function(e,t){return l(o(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,i=0,l="",c=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var h=e[i],m=n[2],g=n[3],v=n[4],y=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,S="+"===b||"*"===b,C="?"===b||"*"===b,E=n[2]||c,x=v||y;r.push({name:g||o++,prefix:m||"",delimiter:E,optional:C,repeat:S,partial:k,asterisk:!!w,pattern:x?s(x):w?".*":"[^"+u(E)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var o="",l=t||{},u=(a||{}).pretty?i:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var f,d=l[c.name];if(null==d){if(c.optional){c.partial&&(o+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(d)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[s].test(f))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?c.prefix:c.delimiter)+f}}else{if(f=c.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[s].test(f))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+f+'"');o+=c.prefix+f}}else o+=c}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,i="",l=0;l<e.length;l++){var s=e[l];if("string"==typeof s)i+=u(s);else{var d=u(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+d+p+")*"),i+=p=s.optional?s.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=i.slice(-h.length)===h;return a||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=o?"$":a&&m?"":"(?="+h+"|$)",c(new RegExp("^"+i,f(n)),t)}},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function v(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=g.prototype;var b=y.prototype=new v;b.constructor=y,r(b,g.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:w.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var x=/\/+/g;function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function _(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return i=i(u=e),e=""===r?"."+A(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(x,"$&/")+"/"),_(i,t,n,"",(function(e){return e}))):null!=i&&(E(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(x,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+A(l=e[s],s);u+=_(l,t,n,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(l=e.next()).done;)u+=_(l=l.value,t,n,c=r+A(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function P(e,t,n){if(null==e)return e;var r=[],a=0;return _(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function I(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var T={current:null};function N(){var e=T.current;if(null===e)throw Error(p(321));return e}var O={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error(p(143));return e}},t.Component=g,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!S.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:I}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return N().useCallback(e,t)},t.useContext=function(e,t){return N().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return N().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return N().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return N().useLayoutEffect(e,t)},t.useMemo=function(e,t){return N().useMemo(e,t)},t.useReducer=function(e,t,n){return N().useReducer(e,t,n)},t.useRef=function(e){return N().useRef(e)},t.useState=function(e){return N().useState(e)},t.version="17.0.1"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,v=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();b=e+y;try{g(!0,e)?k.postMessage(null):(m=!1,g=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){g=e,m||(m=!0,k.postMessage(null))},r=function(e,n){v=d((function(){e(t.unstable_now())}),n)},a=function(){p(v),v=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<x(a,t)))break e;e[r]=t,e[n]=a,n=r}}function C(e){return void 0===(e=e[0])?null:e}function E(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>x(i,n))void 0!==u&&0>x(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>x(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function x(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var A=[],_=[],P=1,I=null,T=3,N=!1,O=!1,R=!1;function L(e){for(var t=C(_);null!==t;){if(null===t.callback)E(_);else{if(!(t.startTime<=e))break;E(_),t.sortIndex=t.expirationTime,S(A,t)}t=C(_)}}function z(e){if(R=!1,L(e),!O)if(null!==C(A))O=!0,n(M);else{var t=C(_);null!==t&&r(z,t.startTime-e)}}function M(e,n){O=!1,R&&(R=!1,a()),N=!0;var o=T;try{for(L(n),I=C(A);null!==I&&(!(I.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=I.callback;if("function"==typeof i){I.callback=null,T=I.priorityLevel;var l=i(I.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?I.callback=l:I===C(A)&&E(A),L(n)}else E(A);I=C(A)}if(null!==I)var u=!0;else{var s=C(_);null!==s&&r(z,s.startTime-n),u=!1}return u}finally{I=null,T=o,N=!1}}var B=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){O||N||(O=!0,n(M))},t.unstable_getCurrentPriorityLevel=function(){return T},t.unstable_getFirstCallbackNode=function(){return C(A)},t.unstable_next=function(e){switch(T){case 1:case 2:case 3:var t=3;break;default:t=T}var n=T;T=t;try{return e()}finally{T=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=T;T=e;try{return t()}finally{T=n}},t.unstable_scheduleCallback=function(e,o,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:o,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,S(_,e),null===C(A)&&e===C(_)&&(R?a():R=!0,r(z,i-l))):(e.sortIndex=u,S(A,e),O||N||(O=!0,n(M))),e},t.unstable_wrapCallback=function(e){var t=T;return function(){var n=T;T=t;try{return e.apply(this,arguments)}finally{T=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},774:e=>{e.exports=function(e,t,n,r){var a=n?n.call(r,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var o=Object.keys(e),i=Object.keys(t);if(o.length!==i.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),u=0;u<o.length;u++){var s=o[u];if(!l(s))return!1;var c=e[s],f=t[s];if(!1===(a=n?n.call(r,c,f,s):void 0)||void 0===a&&c!==f)return!1}return!0}},379:(e,t,n)=>{"use strict";var r,a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),o=[];function i(e){for(var t=-1,n=0;n<o.length;n++)if(o[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},r=[],a=0;a<e.length;a++){var l=e[a],u=t.base?l[0]+t.base:l[0],s=n[u]||0,c="".concat(u," ").concat(s);n[u]=s+1;var f=i(c),d={css:l[1],media:l[2],sourceMap:l[3]};-1!==f?(o[f].references++,o[f].updater(d)):o.push({identifier:c,updater:m(d,t),references:1}),r.push(c)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var s,c=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function f(e,t,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=c(t,a);else{var o=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(o,i[t]):e.appendChild(o)}}function d(e,t,n){var r=n.css,a=n.media,o=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,h=0;function m(e,t){var n,r,a;if(t.singleton){var o=h++;n=p||(p=u(t)),r=f.bind(null,n,o,!1),a=f.bind(null,n,o,!0)}else n=u(t),r=d.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=i(n[r]);o[a].references--}for(var u=l(e,t),s=0;s<n.length;s++){var c=i(n[s]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}n=u}}}}},r={};function a(e){if(r[e])return r[e].exports;var t=r[e]={id:e,exports:{}};return n[e](t,t.exports,a),t.exports}a.m=n,a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+".js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="slpu3:",a.l=(n,r,o,i)=>{if(e[n])e[n].push(r);else{var l,u;if(void 0!==o)for(var s=document.getElementsByTagName("script"),c=0;c<s.length;c++){var f=s[c];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==t+o){l=f;break}}l||(u=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,a.nc&&l.setAttribute("nonce",a.nc),l.setAttribute("data-webpack",t+o),l.src=n),e[n]=[r];var d=(t,r)=>{l.onerror=l.onload=null,clearTimeout(p);var a=e[n];if(delete e[n],l.parentNode&&l.parentNode.removeChild(l),a&&a.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=d.bind(null,l.onerror),l.onload=d.bind(null,l.onload),u&&document.head.appendChild(l)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={826:0};a.f.j=(t,n)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var o=new Promise(((n,a)=>{r=e[t]=[n,a]}));n.push(r[2]=o);var i=a.p+a.u(t),l=new Error;a.l(i,(n=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var o=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;l.message="Loading chunk "+t+" failed.\n("+o+": "+i+")",l.name="ChunkLoadError",l.type=o,l.request=i,r[1](l)}}),"chunk-"+t,t)}};var t=(t,n)=>{for(var r,o,[i,l,u]=n,s=0,c=[];s<i.length;s++)o=i[s],a.o(e,o)&&e[o]&&c.push(e[o][0]),e[o]=0;for(r in l)a.o(l,r)&&(a.m[r]=l[r]);for(u&&u(a),t&&t(n);c.length;)c.shift()()},n=self.webpackChunkslpu3=self.webpackChunkslpu3||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),(()=>{"use strict";var e=a(294),t=a(935),n=a(379),r=a.n(n),o=a(855);r()(o.Z,{insert:"head",singleton:!1}),o.Z.locals;const i=a.p+"c8b93e19cd6c135f17c42fe33b195cd7.png";class l extends e.Component{constructor(t){super(t),this.state={main_title:"슬퍼 SLPU",main_title_img:e.createElement("img",{alt:"main_title_img",className:"main_title_img",src:i}),main_sub:"게임게임게임게임!",main_btn_game:e.createElement("button",{className:"btn_game"},"go game!"),user_state:0}}render(){return e.createElement("main",{className:"main"},e.createElement("section",{className:"title"},e.createElement("h1",null,this.state.main_title)))}}const u=l;var s=a(500);function c(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}r()(s.Z,{insert:"head",singleton:!1}),s.Z.locals;var f=a(697),d=a.n(f);function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function h(e){return"/"===e.charAt(0)}function m(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}const g=function(e,t){if(!e)throw new Error("Invariant failed")};function v(e){return"/"===e.charAt(0)?e:"/"+e}function y(e){return"/"===e.charAt(0)?e.substr(1):e}function b(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function w(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function k(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function S(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=p({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],o=e&&h(e),i=t&&h(t),l=o||i;if(e&&h(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];n="."===u||".."===u||""===u}else n=!1;for(var s=0,c=a.length;c>=0;c--){var f=a[c];"."===f?m(a,c):".."===f?(m(a,c),s++):s&&(m(a,c),s--)}if(!l)for(;s--;s)a.unshift("..");!l||""===a[0]||a[0]&&h(a[0])||a.unshift("");var d=a.join("/");return n&&"/"!==d.substr(-1)&&(d+="/"),d}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function C(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var E=!("undefined"==typeof window||!window.document||!window.document.createElement);function x(e,t){t(window.confirm(e))}var A="hashchange",_={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+y(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:y,decodePath:v},slash:{encodePath:v,decodePath:v}};function P(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function I(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function T(e){window.location.replace(P(window.location.href)+"#"+e)}function N(e){void 0===e&&(e={}),E||g(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?x:r,o=n.hashType,i=void 0===o?"slash":o,l=e.basename?w(v(e.basename)):"",u=_[i],s=u.encodePath,c=u.decodePath;function f(){var e=c(I());return l&&(e=b(e,l)),S(e)}var d=C();function h(e){p(F,e),F.length=t.length,d.notifyListeners(F.location,F.action)}var m=!1,y=null;function N(){var e=I(),t=s(e);if(e!==t)T(t);else{var n=f(),r=F.location;if(!m&&function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash}(r,n))return;if(y===k(n))return;y=null,function(e){if(m)m=!1,h();else{d.confirmTransitionTo(e,"POP",a,(function(t){t?h({action:"POP",location:e}):function(e){var t=F.location,n=z.lastIndexOf(k(t));-1===n&&(n=0);var r=z.lastIndexOf(k(e));-1===r&&(r=0);var a=n-r;a&&(m=!0,M(a))}(e)}))}}(n)}}var O=I(),R=s(O);O!==R&&T(R);var L=f(),z=[k(L)];function M(e){t.go(e)}var B=0;function j(e){1===(B+=e)&&1===e?window.addEventListener(A,N):0===B&&window.removeEventListener(A,N)}var D=!1,F={length:t.length,action:"POP",location:L,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=P(window.location.href)),n+"#"+s(l+k(e))},push:function(e,t){var n="PUSH",r=S(e,void 0,void 0,F.location);d.confirmTransitionTo(r,n,a,(function(e){if(e){var t=k(r),a=s(l+t);if(I()!==a){y=t,function(e){window.location.hash=e}(a);var o=z.lastIndexOf(k(F.location)),i=z.slice(0,o+1);i.push(t),z=i,h({action:n,location:r})}else h()}}))},replace:function(e,t){var n="REPLACE",r=S(e,void 0,void 0,F.location);d.confirmTransitionTo(r,n,a,(function(e){if(e){var t=k(r),a=s(l+t);I()!==a&&(y=t,T(a));var o=z.indexOf(k(F.location));-1!==o&&(z[o]=t),h({action:n,location:r})}}))},go:M,goBack:function(){M(-1)},goForward:function(){M(1)},block:function(e){void 0===e&&(e=!1);var t=d.setPrompt(e);return D||(j(1),D=!0),function(){return D&&(D=!1,j(-1)),t()}},listen:function(e){var t=d.appendListener(e);return j(1),function(){j(-1),t()}}};return F}var O=1073741823,R="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==a.g?a.g:{};function L(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const z=e.createContext||function(t,n){var r,a,o,i="__create-react-context-"+((R[o="__global_unique_id__"]=(R[o]||0)+1)+"__"),l=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).emitter=L(t.props.value),t}c(t,e);var r=t.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,a=e.value;!function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(r,a)?(t="function"==typeof n?n(r,a):O,0!=(t|=0)&&this.emitter.set(e.value,t)):t=0}},r.render=function(){return this.props.children},t}(e.Component);l.childContextTypes=((r={})[i]=d().object.isRequired,r);var u=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).state={value:t.getValue()},t.onUpdate=function(e,n){0!=((0|t.observedBits)&n)&&t.setState({value:t.getValue()})},t}c(n,e);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?O:t},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?O:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():t},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(e.Component);return u.contextTypes=((a={})[i]=d().object,a),{Provider:l,Consumer:u}};var M=a(658),B=a.n(M),j=a(864);function D(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}var F=a(679),U=a.n(F),$=function(e){var t=z();return t.displayName="Router-History",t}(),V=function(e){var t=z();return t.displayName="Router",t}(),W=function(t){function n(e){var n;return(n=t.call(this,e)||this).state={location:e.history.location},n._isMounted=!1,n._pendingLocation=null,e.staticContext||(n.unlisten=e.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}c(n,t),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var r=n.prototype;return r.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},r.componentWillUnmount=function(){this.unlisten&&this.unlisten()},r.render=function(){return e.createElement(V.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},e.createElement($.Provider,{children:this.props.children||null,value:this.props.history}))},n}(e.Component);e.Component,e.Component;var H={},Q=0;function q(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,i=n.strict,l=void 0!==i&&i,u=n.sensitive,s=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=H[n]||(H[n]={});if(r[e])return r[e];var a=[],o={regexp:B()(e,a,t),keys:a};return Q<1e4&&(r[e]=o,Q++),o}(n,{end:o,strict:l,sensitive:s}),a=r.regexp,i=r.keys,u=a.exec(e);if(!u)return null;var c=u[0],f=u.slice(1),d=e===c;return o&&!d?null:{path:n,url:"/"===n&&""===c?"/":c,isExact:d,params:i.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var Y=function(t){function n(){return t.apply(this,arguments)||this}return c(n,t),n.prototype.render=function(){var t=this;return e.createElement(V.Consumer,null,(function(n){n||g(!1);var r=t.props.location||n.location,a=p({},n,{location:r,match:t.props.computedMatch?t.props.computedMatch:t.props.path?q(r.pathname,t.props):n.match}),o=t.props,i=o.children,l=o.component,u=o.render;return Array.isArray(i)&&0===i.length&&(i=null),e.createElement(V.Provider,{value:a},a.match?i?"function"==typeof i?i(a):i:l?e.createElement(l,a):u?u(a):null:"function"==typeof i?i(a):null)}))},n}(e.Component);e.Component;var K=function(t){function n(){return t.apply(this,arguments)||this}return c(n,t),n.prototype.render=function(){var t=this;return e.createElement(V.Consumer,null,(function(n){n||g(!1);var r,a,o=t.props.location||n.location;return e.Children.forEach(t.props.children,(function(t){if(null==a&&e.isValidElement(t)){r=t;var i=t.props.path||t.props.from;a=i?q(o.pathname,p({},t.props,{path:i})):n.match}})),a?e.cloneElement(r,{location:o,computedMatch:a}):null}))},n}(e.Component);e.useContext,e.Component;var G=function(t){function n(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(e=t.call.apply(t,[this].concat(r))||this).history=N(e.props),e}return c(n,t),n.prototype.render=function(){return e.createElement(W,{history:this.history,children:this.props.children})},n}(e.Component),X=function(e,t){return"function"==typeof e?e(t):e},Z=function(e,t){return"string"==typeof e?S(e,null,null,t):e},J=function(e){return e},ee=e.forwardRef;void 0===ee&&(ee=J);var te=ee((function(t,n){var r=t.innerRef,a=t.navigate,o=t.onClick,i=D(t,["innerRef","navigate","onClick"]),l=i.target,u=p({},i,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),a())}});return u.ref=J!==ee&&n||r,e.createElement("a",u)})),ne=ee((function(t,n){var r=t.component,a=void 0===r?te:r,o=t.replace,i=t.to,l=t.innerRef,u=D(t,["component","replace","to","innerRef"]);return e.createElement(V.Consumer,null,(function(t){t||g(!1);var r=t.history,s=Z(X(i,t.location),t.location),c=s?r.createHref(s):"",f=p({},u,{href:c,navigate:function(){var e=X(i,t.location);(o?r.replace:r.push)(e)}});return J!==ee?f.ref=n||l:f.innerRef=l,e.createElement(a,f)}))})),re=function(e){return e},ae=e.forwardRef;void 0===ae&&(ae=re),ae((function(t,n){var r=t["aria-current"],a=void 0===r?"page":r,o=t.activeClassName,i=void 0===o?"active":o,l=t.activeStyle,u=t.className,s=t.exact,c=t.isActive,f=t.location,d=t.sensitive,h=t.strict,m=t.style,v=t.to,y=t.innerRef,b=D(t,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return e.createElement(V.Consumer,null,(function(t){t||g(!1);var r=f||t.location,o=Z(X(v,r),r),w=o.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),S=k?q(r.pathname,{path:k,exact:s,sensitive:d,strict:h}):null,C=!!(c?c(S,r):S),E=C?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,i):u,x=C?p({},m,{},l):m,A=p({"aria-current":C&&a||null,className:E,style:x,to:o},b);return re!==ae?A.ref=n||y:A.innerRef=y,e.createElement(ne,A)}))}));class oe extends e.Component{constructor(t){super(t),this.state={main_title:"슬퍼 SLPU",main_title_img:e.createElement("img",{alt:"main_title_img",className:"main_title_img",src:i}),main_sub:"게임게임게임게임!",main_btn_game:e.createElement("button",{className:"btn_game"},"go game!"),user_state:0}}render(){return e.createElement("main",{className:"main"},e.createElement("section",{className:"sub"},e.createElement("h2",null,this.state.main_sub),e.createElement("h3",null,this.state.main_sub),e.createElement("h4",null,this.state.main_sub),e.createElement("h5",null,this.state.main_sub)),e.createElement("section",{className:"btn"},{0:e.createElement(ne,{to:"/login"},this.state.main_btn_game),1:e.createElement(ne,{to:"/start"},this.state.main_btn_game)}[this.state.user_state]))}}const ie=oe;class le extends e.Component{render(){return e.createElement("div",null,e.createElement("h1",null,"start"))}}const ue=le;var se=a(546);r()(se.Z,{insert:"head",singleton:!1}),se.Z.locals;class ce extends e.Component{constructor(t){var n,r,a;super(t),a=e=>{e.preventDefault(),this.setState({user_id:e.target.id.value}),console.log(e.target.id.value),this.props.onSubmit(e.target.id.value)},(r="changeEvent")in(n=this)?Object.defineProperty(n,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[r]=a,this.state={user_id:"",login_title:"이름을 입력해주세요",login_input:e.createElement("input",{type:"user_id",name:"id"}),login_btn_next:e.createElement("button",{className:"btn_next"},"다음")}}render(){return e.createElement("main",{className:"login"},e.createElement("section",{className:"title"},this.state.login_title),e.createElement("form",{onSubmit:this.changeEvent},e.createElement("section",{className:"input"},this.state.login_input),e.createElement("section",{className:"btn"},e.createElement(ne,{to:"/login"},this.state.login_btn_next),e.createElement("h1",null,this.state.user_id),e.createElement("h1",null,"hello"))))}}const fe=ce;class de extends e.Component{render(){return e.createElement("div",null,e.createElement("h1",null,"make"))}}const pe=de,he=()=>e.createElement("div",{className:"App"},e.createElement(G,null,e.createElement(K,null,e.createElement(Y,{exact:!0,path:"/"},e.createElement(ie,null)),e.createElement(Y,{path:"/main"},e.createElement(ie,null)),e.createElement(Y,{path:"/start"},e.createElement(ue,null)),e.createElement(Y,{path:"/login"},e.createElement(fe,null)),e.createElement(Y,{path:"/make"},e.createElement(pe,null)))));var me=a(774),ge=a.n(me);const ve=function(e){function t(e,r,u,s,d){for(var p,h,m,g,w,S=0,C=0,E=0,x=0,A=0,O=0,L=m=p=0,M=0,B=0,j=0,D=0,F=u.length,U=F-1,$="",V="",W="",H="";M<F;){if(h=u.charCodeAt(M),M===U&&0!==C+x+E+S&&(0!==C&&(h=47===C?10:47),x=E=S=0,F++,U++),0===C+x+E+S){if(M===U&&(0<B&&($=$.replace(f,"")),0<$.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:$+=u.charAt(M)}h=59}switch(h){case 123:for(p=($=$.trim()).charCodeAt(0),m=1,D=++M;M<F;){switch(h=u.charCodeAt(M)){case 123:m++;break;case 125:m--;break;case 47:switch(h=u.charCodeAt(M+1)){case 42:case 47:e:{for(L=M+1;L<U;++L)switch(u.charCodeAt(L)){case 47:if(42===h&&42===u.charCodeAt(L-1)&&M+2!==L){M=L+1;break e}break;case 10:if(47===h){M=L+1;break e}}M=L}}break;case 91:h++;case 40:h++;case 34:case 39:for(;M++<U&&u.charCodeAt(M)!==h;);}if(0===m)break;M++}switch(m=u.substring(D,M),0===p&&(p=($=$.replace(c,"").trim()).charCodeAt(0)),p){case 64:switch(0<B&&($=$.replace(f,"")),h=$.charCodeAt(1)){case 100:case 109:case 115:case 45:B=r;break;default:B=N}if(D=(m=t(r,B,m,h,d+1)).length,0<R&&(w=l(3,m,B=n(N,$,j),r,P,_,D,h,d,s),$=B.join(""),void 0!==w&&0===(D=(m=w.trim()).length)&&(h=0,m="")),0<D)switch(h){case 115:$=$.replace(k,i);case 100:case 109:case 45:m=$+"{"+m+"}";break;case 107:m=($=$.replace(v,"$1 $2"))+"{"+m+"}",m=1===T||2===T&&o("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=$+m,112===s&&(V+=m,m="")}else m="";break;default:m=t(r,n(r,$,j),m,s,d+1)}W+=m,m=j=B=L=p=0,$="",h=u.charCodeAt(++M);break;case 125:case 59:if(1<(D=($=(0<B?$.replace(f,""):$).trim()).length))switch(0===L&&(p=$.charCodeAt(0),45===p||96<p&&123>p)&&(D=($=$.replace(" ",":")).length),0<R&&void 0!==(w=l(1,$,r,e,P,_,V.length,s,d,s))&&0===(D=($=w.trim()).length)&&($="\0\0"),p=$.charCodeAt(0),h=$.charCodeAt(1),p){case 0:break;case 64:if(105===h||99===h){H+=$+u.charAt(M);break}default:58!==$.charCodeAt(D-1)&&(V+=a($,p,h,$.charCodeAt(2)))}j=B=L=p=0,$="",h=u.charCodeAt(++M)}}switch(h){case 13:case 10:47===C?C=0:0===1+p&&107!==s&&0<$.length&&(B=1,$+="\0"),0<R*z&&l(0,$,r,e,P,_,V.length,s,d,s),_=1,P++;break;case 59:case 125:if(0===C+x+E+S){_++;break}default:switch(_++,g=u.charAt(M),h){case 9:case 32:if(0===x+S+C)switch(A){case 44:case 58:case 9:case 32:g="";break;default:32!==h&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===x+C+S&&(B=j=1,g="\f"+g);break;case 108:if(0===x+C+S+I&&0<L)switch(M-L){case 2:112===A&&58===u.charCodeAt(M-3)&&(I=A);case 8:111===O&&(I=O)}break;case 58:0===x+C+S&&(L=M);break;case 44:0===C+E+x+S&&(B=1,g+="\r");break;case 34:case 39:0===C&&(x=x===h?0:0===x?h:x);break;case 91:0===x+C+E&&S++;break;case 93:0===x+C+E&&S--;break;case 41:0===x+C+S&&E--;break;case 40:if(0===x+C+S){if(0===p)switch(2*A+3*O){case 533:break;default:p=1}E++}break;case 64:0===C+E+x+S+L+m&&(m=1);break;case 42:case 47:if(!(0<x+S+E))switch(C){case 0:switch(2*h+3*u.charCodeAt(M+1)){case 235:C=47;break;case 220:D=M,C=42}break;case 42:47===h&&42===A&&D+2!==M&&(33===u.charCodeAt(D+2)&&(V+=u.substring(D,M+1)),g="",C=0)}}0===C&&($+=g)}O=A,A=h,M++}if(0<(D=V.length)){if(B=r,0<R&&void 0!==(w=l(2,V,B,e,P,_,D,s,d,s))&&0===(V=w).length)return H+V+W;if(V=B.join(",")+"{"+V+"}",0!=T*I){switch(2!==T||o(V,2)||(I=0),I){case 111:V=V.replace(b,":-moz-$1")+V;break;case 112:V=V.replace(y,"::-webkit-input-$1")+V.replace(y,"::-moz-$1")+V.replace(y,":-ms-input-$1")+V}I=0}}return H+V+W}function n(e,t,n){var a=t.trim().split(m);t=a;var o=a.length,i=e.length;switch(i){case 0:case 1:var l=0;for(e=0===i?"":e[0]+" ";l<o;++l)t[l]=r(e,t[l],n).trim();break;default:var u=l=0;for(t=[];l<o;++l)for(var s=0;s<i;++s)t[u++]=r(e[s]+" ",a[l],n).trim()}return t}function r(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function a(e,t,n,r){var i=e+";",l=2*t+3*n+4*r;if(944===l){e=i.indexOf(":",9)+1;var u=i.substring(e,i.length-1).trim();return u=i.substring(0,e).trim()+u+";",1===T||2===T&&o(u,1)?"-webkit-"+u+u:u}if(0===T||2===T&&!o(i,1))return i;switch(l){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(A,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(u=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+u+i;case 1005:return p.test(i)?i.replace(d,":-webkit-")+i.replace(d,":-moz-")+i:i;case 1e3:switch(t=(u=i.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=i.replace(w,"tb");break;case 232:u=i.replace(w,"tb-rl");break;case 220:u=i.replace(w,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+u+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,l=(u=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:i=i.replace(u,"-webkit-"+u)+";"+i;break;case 207:case 102:i=i.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+i.replace(u,"-webkit-"+u)+";"+i.replace(u,"-ms-"+u+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return u=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+u+"-ms-flex-"+u+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(C,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(C,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===x.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?a(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):i.replace(u,"-webkit-"+u)+i.replace(u,"-moz-"+u.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===n+r&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+i}return i}function o(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),L(2!==t?r:r.replace(E,"$1"),n,t)}function i(e,t){var n=a(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(S," or ($1)").substring(4):"("+t+")"}function l(e,t,n,r,a,o,i,l,u,c){for(var f,d=0,p=t;d<R;++d)switch(f=O[d].call(s,e,p,n,r,a,o,i,l,u,c)){case void 0:case!1:case!0:case null:break;default:p=f}if(p!==t)return p}function u(e){return void 0!==(e=e.prefix)&&(L=null,e?"function"!=typeof e?T=1:(T=2,L=e):T=0),u}function s(e,n){var r=e;if(33>r.charCodeAt(0)&&(r=r.trim()),r=[r],0<R){var a=l(-1,n,r,r,P,_,0,0,0,0);void 0!==a&&"string"==typeof a&&(n=a)}var o=t(N,r,n,0,0);return 0<R&&void 0!==(a=l(-2,o,r,r,P,_,o.length,0,0,0))&&(o=a),I=0,_=P=1,o}var c=/^\0+/g,f=/[\0\r\f]/g,d=/: */g,p=/zoo|gra/,h=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,v=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,b=/:(read-only)/g,w=/[svh]\w+-[tblr]{2}/,k=/\(\s*(.*)\s*\)/g,S=/([\s\S]*?);/g,C=/-self|flex-/g,E=/[^]*?(:[rp][el]a[\w-]+)[^]*/,x=/stretch|:\s*\w+\-(?:conte|avail)/,A=/([^-])(image-set\()/,_=1,P=1,I=0,T=1,N=[],O=[],R=0,L=null,z=0;return s.use=function e(t){switch(t){case void 0:case null:R=O.length=0;break;default:if("function"==typeof t)O[R++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else z=0|!!t}return e},s.set=u,void 0!==e&&u(e),s},ye={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var be=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const we=(ke={},function(e){return void 0===ke[e]&&(ke[e]=(t=e,be.test(t)||111===t.charCodeAt(0)&&110===t.charCodeAt(1)&&t.charCodeAt(2)<91)),ke[e];var t});var ke;function Se(){return(Se=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Ce=function(e,t){for(var n=[e[0]],r=0,a=t.length;r<a;r+=1)n.push(t[r],e[r+1]);return n},Ee=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,j.typeOf)(e)},xe=Object.freeze([]),Ae=Object.freeze({});function _e(e){return"function"==typeof e}function Pe(e){return e.displayName||e.name||"Component"}function Ie(e){return e&&"string"==typeof e.styledComponentId}var Te="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",Ne="undefined"!=typeof window&&"HTMLElement"in window,Oe=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY);function Re(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""))}var Le=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,a=r;e>=a;)(a<<=1)<0&&Re(16,""+e);this.groupSizes=new Uint32Array(a),this.groupSizes.set(n),this.length=a;for(var o=r;o<a;o++)this.groupSizes[o]=0}for(var i=this.indexOfGroup(e+1),l=0,u=t.length;l<u;l++)this.tag.insertRule(i,t[l])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var a=n;a<r;a++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),a=r+n,o=r;o<a;o++)t+=this.tag.getRule(o)+"/*!sc*/\n";return t},e}(),ze=new Map,Me=new Map,Be=1,je=function(e){if(ze.has(e))return ze.get(e);for(;Me.has(Be);)Be++;var t=Be++;return ze.set(e,t),Me.set(t,e),t},De=function(e){return Me.get(e)},Fe=function(e,t){ze.set(e,t),Me.set(t,e)},Ue="style["+Te+'][data-styled-version="5.2.3"]',$e=new RegExp("^"+Te+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),Ve=function(e,t,n){for(var r,a=n.split(","),o=0,i=a.length;o<i;o++)(r=a[o])&&e.registerName(t,r)},We=function(e,t){for(var n=t.innerHTML.split("/*!sc*/\n"),r=[],a=0,o=n.length;a<o;a++){var i=n[a].trim();if(i){var l=i.match($e);if(l){var u=0|parseInt(l[1],10),s=l[2];0!==u&&(Fe(s,u),Ve(e,s,l[3]),e.getTag().insertRules(u,r)),r.length=0}else r.push(i)}}},He=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},Qe=function(e){var t=document.head,n=e||t,r=document.createElement("style"),a=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(Te))return r}}(n),o=void 0!==a?a.nextSibling:null;r.setAttribute(Te,"active"),r.setAttribute("data-styled-version","5.2.3");var i=He();return i&&r.setAttribute("nonce",i),n.insertBefore(r,o),r},qe=function(){function e(e){var t=this.element=Qe(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var a=t[n];if(a.ownerNode===e)return a}Re(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),Ye=function(){function e(e){var t=this.element=Qe(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),Ke=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),Ge=Ne,Xe={isServer:!Ne,useCSSOMInjection:!Oe},Ze=function(){function e(e,t,n){void 0===e&&(e=Ae),void 0===t&&(t={}),this.options=Se({},Xe,{},e),this.gs=t,this.names=new Map(n),!this.options.isServer&&Ne&&Ge&&(Ge=!1,function(e){for(var t=document.querySelectorAll(Ue),n=0,r=t.length;n<r;n++){var a=t[n];a&&"active"!==a.getAttribute(Te)&&(We(e,a),a.parentNode&&a.parentNode.removeChild(a))}}(this))}e.registerId=function(e){return je(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(Se({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,a=t.target,e=n?new Ke(a):r?new qe(a):new Ye(a),new Le(e)));var e,t,n,r,a},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(je(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(je(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(je(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",a=0;a<n;a++){var o=De(a);if(void 0!==o){var i=e.names.get(o),l=t.getGroup(a);if(void 0!==i&&0!==l.length){var u=Te+".g"+a+'[id="'+o+'"]',s="";void 0!==i&&i.forEach((function(e){e.length>0&&(s+=e+",")})),r+=""+l+u+'{content:"'+s+'"}/*!sc*/\n'}}}return r}(this)},e}(),Je=/(a)(d)/gi,et=function(e){return String.fromCharCode(e+(e>25?39:97))};function tt(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=et(t%52)+n;return(et(t%52)+n).replace(Je,"$1-$2")}var nt=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},rt=function(e){return nt(5381,e)};function at(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(_e(n)&&!Ie(n))return!1}return!0}var ot=rt("5.2.3"),it=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&at(e),this.componentId=t,this.baseHash=nt(ot,t),this.baseStyle=n,Ze.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,a=[];if(this.baseStyle&&a.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))a.push(this.staticRulesId);else{var o=Ct(this.rules,e,t,n).join(""),i=tt(nt(this.baseHash,o.length)>>>0);if(!t.hasNameForId(r,i)){var l=n(o,"."+i,void 0,r);t.insertRules(r,i,l)}a.push(i),this.staticRulesId=i}else{for(var u=this.rules.length,s=nt(this.baseHash,n.hash),c="",f=0;f<u;f++){var d=this.rules[f];if("string"==typeof d)c+=d;else if(d){var p=Ct(d,e,t,n),h=Array.isArray(p)?p.join(""):p;s=nt(s,h+f),c+=h}}if(c){var m=tt(s>>>0);if(!t.hasNameForId(r,m)){var g=n(c,"."+m,void 0,r);t.insertRules(r,m,g)}a.push(m)}}return a.join(" ")},e}(),lt=/^\s*\/\/.*$/gm,ut=[":","[",".","#"];function st(e){var t,n,r,a,o=void 0===e?Ae:e,i=o.options,l=void 0===i?Ae:i,u=o.plugins,s=void 0===u?xe:u,c=new ve(l),f=[],d=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,a,o,i,l,u,s,c,f){switch(n){case 1:if(0===c&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===s)return r+"/*|*/";break;case 3:switch(s){case 102:case 112:return e(a[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){f.push(e)})),p=function(e,r,o){return 0===r&&-1!==ut.indexOf(o[n.length])||o.match(a)?e:"."+t};function h(e,o,i,l){void 0===l&&(l="&");var u=e.replace(lt,""),s=o&&i?i+" "+o+" { "+u+" }":u;return t=l,n=o,r=new RegExp("\\"+n+"\\b","g"),a=new RegExp("(\\"+n+"\\b){2,}"),c(i||!o?"":o,s)}return c.use([].concat(s,[function(e,t,a){2===e&&a.length&&a[0].lastIndexOf(n)>0&&(a[0]=a[0].replace(r,p))},d,function(e){if(-2===e){var t=f;return f=[],t}}])),h.hash=s.length?s.reduce((function(e,t){return t.name||Re(15),nt(e,t.name)}),5381).toString():"",h}var ct=e.createContext(),ft=(ct.Consumer,e.createContext()),dt=(ft.Consumer,new Ze),pt=st();function ht(){return(0,e.useContext)(ct)||dt}function mt(t){var n=(0,e.useState)(t.stylisPlugins),r=n[0],a=n[1],o=ht(),i=(0,e.useMemo)((function(){var e=o;return t.sheet?e=t.sheet:t.target&&(e=e.reconstructWithOptions({target:t.target},!1)),t.disableCSSOMInjection&&(e=e.reconstructWithOptions({useCSSOMInjection:!1})),e}),[t.disableCSSOMInjection,t.sheet,t.target]),l=(0,e.useMemo)((function(){return st({options:{prefix:!t.disableVendorPrefixes},plugins:r})}),[t.disableVendorPrefixes,r]);return(0,e.useEffect)((function(){ge()(r,t.stylisPlugins)||a(t.stylisPlugins)}),[t.stylisPlugins]),e.createElement(ct.Provider,{value:i},e.createElement(ft.Provider,{value:l},t.children))}var gt=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=pt);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return Re(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=pt),this.name+e.hash},e}(),vt=/([A-Z])/,yt=/([A-Z])/g,bt=/^ms-/,wt=function(e){return"-"+e.toLowerCase()};function kt(e){return vt.test(e)?e.replace(yt,wt).replace(bt,"-ms-"):e}var St=function(e){return null==e||!1===e||""===e};function Ct(e,t,n,r){if(Array.isArray(e)){for(var a,o=[],i=0,l=e.length;i<l;i+=1)""!==(a=Ct(e[i],t,n,r))&&(Array.isArray(a)?o.push.apply(o,a):o.push(a));return o}return St(e)?"":Ie(e)?"."+e.styledComponentId:_e(e)?"function"!=typeof(u=e)||u.prototype&&u.prototype.isReactComponent||!t?e:Ct(e(t),t,n,r):e instanceof gt?n?(e.inject(n,r),e.getName(r)):e:Ee(e)?function e(t,n){var r,a,o=[];for(var i in t)t.hasOwnProperty(i)&&!St(t[i])&&(Ee(t[i])?o.push.apply(o,e(t[i],i)):_e(t[i])?o.push(kt(i)+":",t[i],";"):o.push(kt(i)+": "+(r=i,(null==(a=t[i])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||r in ye?String(a).trim():a+"px")+";")));return n?[n+" {"].concat(o,["}"]):o}(e):e.toString();var u}function Et(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return _e(e)||Ee(e)?Ct(Ce(xe,[e].concat(n))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:Ct(Ce(e,n))}new Set;var xt=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,At=/(^-|-$)/g;function _t(e){return e.replace(xt,"-").replace(At,"")}function Pt(e){return"string"==typeof e&&!0}var It=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Tt=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Nt(e,t,n){var r=e[n];It(t)&&It(r)?Ot(r,t):e[n]=t}function Ot(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var a=0,o=n;a<o.length;a++){var i=o[a];if(It(i))for(var l in i)Tt(l)&&Nt(e,i[l],l)}return e}var Rt=e.createContext();Rt.Consumer;var Lt={};function zt(t,n,r){var a=Ie(t),o=!Pt(t),i=n.attrs,l=void 0===i?xe:i,u=n.componentId,s=void 0===u?function(e,t){var n="string"!=typeof e?"sc":_t(e);Lt[n]=(Lt[n]||0)+1;var r=n+"-"+function(e){return tt(rt(e)>>>0)}("5.2.3"+n+Lt[n]);return t?t+"-"+r:r}(n.displayName,n.parentComponentId):u,c=n.displayName,f=void 0===c?function(e){return Pt(e)?"styled."+e:"Styled("+Pe(e)+")"}(t):c,d=n.displayName&&n.componentId?_t(n.displayName)+"-"+n.componentId:n.componentId||s,p=a&&t.attrs?Array.prototype.concat(t.attrs,l).filter(Boolean):l,h=n.shouldForwardProp;a&&t.shouldForwardProp&&(h=n.shouldForwardProp?function(e,r){return t.shouldForwardProp(e,r)&&n.shouldForwardProp(e,r)}:t.shouldForwardProp);var m,g=new it(r,d,a?t.componentStyle:void 0),v=g.isStatic&&0===l.length,y=function(t,n){return function(t,n,r,a){var o=t.attrs,i=t.componentStyle,l=t.defaultProps,u=t.foldedComponentIds,s=t.shouldForwardProp,c=t.styledComponentId,f=t.target,d=function(e,t,n){void 0===e&&(e=Ae);var r=Se({},t,{theme:e}),a={};return n.forEach((function(e){var t,n,o,i=e;for(t in _e(i)&&(i=i(r)),i)r[t]=a[t]="className"===t?(n=a[t],o=i[t],n&&o?n+" "+o:n||o):i[t]})),[r,a]}(function(e,t,n){return void 0===n&&(n=Ae),e.theme!==n.theme&&e.theme||t||n.theme}(n,(0,e.useContext)(Rt),l)||Ae,n,o),p=d[0],h=d[1],m=function(t,n,r,a){var o=ht(),i=(0,e.useContext)(ft)||pt;return n?t.generateAndInjectStyles(Ae,o,i):t.generateAndInjectStyles(r,o,i)}(i,a,p),g=r,v=h.$as||n.$as||h.as||n.as||f,y=Pt(v),b=h!==n?Se({},n,{},h):n,w={};for(var k in b)"$"!==k[0]&&"as"!==k&&("forwardedAs"===k?w.as=b[k]:(s?s(k,we):!y||we(k))&&(w[k]=b[k]));return n.style&&h.style!==n.style&&(w.style=Se({},n.style,{},h.style)),w.className=Array.prototype.concat(u,c,m!==c?m:null,n.className,h.className).filter(Boolean).join(" "),w.ref=g,(0,e.createElement)(v,w)}(m,t,n,v)};return y.displayName=f,(m=e.forwardRef(y)).attrs=p,m.componentStyle=g,m.displayName=f,m.shouldForwardProp=h,m.foldedComponentIds=a?Array.prototype.concat(t.foldedComponentIds,t.styledComponentId):xe,m.styledComponentId=d,m.target=a?t.target:t,m.withComponent=function(e){var t=n.componentId,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(n,["componentId"]),o=t&&t+"-"+(Pt(e)?e:_t(Pe(e)));return zt(e,Se({},a,{attrs:p,componentId:o}),r)},Object.defineProperty(m,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=a?Ot({},t.defaultProps,e):e}}),m.toString=function(){return"."+m.styledComponentId},o&&U()(m,t,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),m}var Mt,Bt=function(e){return function e(t,n,r){if(void 0===r&&(r=Ae),!(0,j.isValidElementType)(n))return Re(1,String(n));var a=function(){return t(n,r,Et.apply(void 0,arguments))};return a.withConfig=function(a){return e(t,n,Se({},r,{},a))},a.attrs=function(a){return e(t,n,Se({},r,{attrs:Array.prototype.concat(r.attrs,a).filter(Boolean)}))},a}(zt,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){Bt[e]=Bt(e)})),(Mt=function(e,t){this.rules=e,this.componentId=t,this.isStatic=at(e),Ze.registerId(this.componentId+1)}.prototype).createStyles=function(e,t,n,r){var a=r(Ct(this.rules,t,n,r).join(""),""),o=this.componentId+e;n.insertRules(o,o,a)},Mt.removeStyles=function(e,t){t.clearRules(this.componentId+e)},Mt.renderStyles=function(e,t,n,r){e>2&&Ze.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},function(){var t=function(){var t=this;this._emitSheetCSS=function(){var e=t.instance.toString(),n=He();return"<style "+[n&&'nonce="'+n+'"',Te+'="true"','data-styled-version="5.2.3"'].filter(Boolean).join(" ")+">"+e+"</style>"},this.getStyleTags=function(){return t.sealed?Re(2):t._emitSheetCSS()},this.getStyleElement=function(){var n;if(t.sealed)return Re(2);var r=((n={})[Te]="",n["data-styled-version"]="5.2.3",n.dangerouslySetInnerHTML={__html:t.instance.toString()},n),a=He();return a&&(r.nonce=a),[e.createElement("style",Se({},r,{key:"sc-0-0"}))]},this.seal=function(){t.sealed=!0},this.instance=new Ze({isServer:!0}),this.sealed=!1}.prototype;t.collectStyles=function(t){return this.sealed?Re(2):e.createElement(mt,{sheet:this.instance},t)},t.interleaveWithNodeStream=function(e){return Re(3)}}();const jt=Bt;class Dt extends e.Component{render(){return e.createElement(Ft,null,e.createElement(u,null),e.createElement(he,null))}}const Ft=jt.div`
  margin: 0 auto;
  width: 100%;
`,Ut=Dt;var $t;t.render(e.createElement(e.StrictMode,null,e.createElement(Ut,null)),document.getElementById("root")),$t&&$t instanceof Function&&a.e(131).then(a.bind(a,131)).then((({getCLS:e,getFID:t,getFCP:n,getLCP:r,getTTFB:a})=>{e($t),t($t),n($t),r($t),a($t)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbHB1My93ZWJwYWNrL3J1bnRpbWUvbG9hZCBzY3JpcHQiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9zcmMvRGlzcGxheS8wMF9IZWFkZXIuY3NzIiwid2VicGFjazovL3NscHUzLy4vc3JjL0Rpc3BsYXkvMDBfTWFpbi5jc3MiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9zcmMvRGlzcGxheS8wMl9Mb2dpbi5jc3MiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9zaGFsbG93ZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vc2xwdTMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vc2xwdTMvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vc2xwdTMvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3NscHUzL3dlYnBhY2svcnVudGltZS9lbnN1cmUgY2h1bmsiLCJ3ZWJwYWNrOi8vc2xwdTMvd2VicGFjay9ydW50aW1lL2dldCBqYXZhc2NyaXB0IGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL3NscHUzL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vc2xwdTMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9zbHB1My93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3NscHUzL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3NscHUzL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3NscHUzLy4vc3JjL0Rpc3BsYXkvMDBfSGVhZGVyLmNzcz9mNjA0Iiwid2VicGFjazovL3NscHUzLy4vc3JjL2ltZy9tYWluX3RpdGxlLnBuZyIsIndlYnBhY2s6Ly9zbHB1My8uL3NyYy9EaXNwbGF5LzAwX0hlYWRlci5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovL3NscHUzLy4vc3JjL0Rpc3BsYXkvMDBfTWFpbi5jc3M/N2Q0YyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovL3NscHUzLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL3NyYy9EaXNwbGF5LzAwX01haW4uanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9zcmMvRGlzcGxheS8wMV9TdGFydC5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL3NyYy9EaXNwbGF5LzAyX0xvZ2luLmNzcz81MGUwIiwid2VicGFjazovL3NscHUzLy4vc3JjL0Rpc3BsYXkvMDJfTG9naW4uanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9zcmMvRGlzcGxheS8wM19NYWtlLmpzIiwid2VicGFjazovL3NscHUzLy4vc3JjL0NvbXBvbmVudHMvUm91dGVycy5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zdHlsaXMvZGlzdC9zdHlsaXMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vc2xwdTMvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9pcy1wcm9wLXZhbGlkL2Rpc3QvaXMtcHJvcC12YWxpZC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9tZW1vaXplL2Rpc3QvbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL25vZGVfbW9kdWxlcy9zdHlsZWQtY29tcG9uZW50cy9kaXN0L3N0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL3NscHUzLy4vc3JjL0FwcC5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL3JlcG9ydFdlYlZpdGFscy5qcyIsIndlYnBhY2s6Ly9zbHB1My8uL2luZGV4LmpzIl0sIm5hbWVzIjpbImluUHJvZ3Jlc3MiLCJkYXRhV2VicGFja1ByZWZpeCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjb25jYXQiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsIl9pIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwiQXJyYXkiLCJfaXRlbSIsImlzQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJTeW1ib2wiLCJpdGVyYXRvciIsIk9iamVjdCIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJ1bmRlZmluZWQiLCJfcyIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJlcnIiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJvIiwibWluTGVuIiwibiIsInByb3RvdHlwZSIsImNhbGwiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiVHlwZUVycm9yIiwiX25vbkl0ZXJhYmxlUmVzdCIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJndW1lbnRzIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsImtleXMiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImtleSIsImRlc2NyaXB0b3IiLCJlIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInN5bWJvbHMiLCJ0byIsInMiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcHMiLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkVycm9yIiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsImZ1bmMiLCJudW1iZXIiLCJvYmplY3QiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudCIsImVsZW1lbnRUeXBlIiwiaW5zdGFuY2VPZiIsIm5vZGUiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYWEiLCJtIiwiciIsInkiLCJhIiwiYiIsImMiLCJiYSIsIlNldCIsImNhIiwiZGEiLCJlYSIsImFkZCIsImZhIiwid2luZG93IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaGEiLCJpYSIsImphIiwia2EiLCJCIiwiZCIsImYiLCJnIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJEIiwidG9Mb3dlckNhc2UiLCJvYSIsInBhIiwidG9VcHBlckNhc2UiLCJxYSIsIm1hIiwiaXNOYU4iLCJuYSIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJyZXBsYWNlIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ1YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJmb3IiLCJFIiwiTWEiLCJLYSIsIkxhIiwiTmEiLCJzdGFjayIsInRyaW0iLCJtYXRjaCIsIk9hIiwiUGEiLCJwcmVwYXJlU3RhY2tUcmFjZSIsInNldCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJrIiwiaCIsIlFhIiwidGFnIiwiX3JlbmRlciIsIlJhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwiWGEiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsIllhIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJaYSIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCIkYSIsImFiIiwiYmIiLCJjYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImNoaWxkcmVuIiwiQ2hpbGRyZW4iLCJkYiIsImZiIiwib3B0aW9ucyIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiaGIiLCJpYiIsImpiIiwidGV4dENvbnRlbnQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJxYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmIiLCJzYiIsInRiIiwic3R5bGUiLCJpbmRleE9mIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJ1YiIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInZiIiwid2IiLCJpcyIsInhiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk9iIiwiUGIiLCJRYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUmIiLCJsIiwiYXBwbHkiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJNYXAiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwic2hpZnQiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJiaW5kIiwidWMiLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwiY29kZSIsInJlcGVhdCIsImxvY2FsZSIsIndoaWNoIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiT2UiLCJjb250ZW50RWRpdGFibGUiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJWZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiWWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRyIsIiRlIiwiaGFzIiwiYWYiLCJiZiIsInJhbmRvbSIsImNmIiwiZGYiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIk5iIiwieCIsInciLCJ6IiwidSIsInEiLCJ0IiwidiIsImVmIiwiZmYiLCJwYXJlbnRXaW5kb3ciLCJnZiIsImhmIiwiSiIsIksiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsImpmIiwia2YiLCJsZiIsIm1mIiwiYXV0b0ZvY3VzIiwibmYiLCJfX2h0bWwiLCJvZiIsInNldFRpbWVvdXQiLCJwZiIsImNsZWFyVGltZW91dCIsInFmIiwicmYiLCJzZiIsInByZXZpb3VzU2libGluZyIsInRmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJjaGlsZCIsInpmIiwiQWYiLCJCZiIsImN1cnJlbnQiLCJIIiwiSSIsIkNmIiwiTSIsIk4iLCJEZiIsIkVmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJRZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUmYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJTZiIsIlRmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJVZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVmYiLCJXZiIsIlhmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJZZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsIk8iLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJfY3VycmVudFZhbHVlIiwic2ciLCJjaGlsZExhbmVzIiwidGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsInVnIiwidmciLCJjb250ZXh0Iiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsIndnIiwieGciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ5ZyIsInpnIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJjYWxsYmFjayIsIkFnIiwiQmciLCJDZyIsIkEiLCJwIiwiQyIsIkRnIiwiRWciLCJGZyIsIkNvbXBvbmVudCIsInJlZnMiLCJHZyIsIktnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiSGciLCJJZyIsIkpnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJNZyIsInN0YXRlIiwidXBkYXRlciIsIk5nIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiT2ciLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlBnIiwiUWciLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiUmciLCJTZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJzaWJsaW5nIiwiaW5kZXgiLCJUZyIsIlVnIiwibW9kZSIsIlZnIiwiaW1wbGVtZW50YXRpb24iLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJlaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJmaCIsImdoIiwiaGgiLCJQIiwiaWgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwZW5kaW5nUHJvcHMiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsInZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIndoIiwieGgiLCJSIiwiUyIsIlQiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsImJhc2VRdWV1ZSIsInF1ZXVlIiwiSWgiLCJKaCIsIktoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiTGgiLCJNaCIsIl9nZXRWZXJzaW9uIiwiX3NvdXJjZSIsIm11dGFibGVSZWFkTGFuZXMiLCJOaCIsIlUiLCJ1c2VTdGF0ZSIsImdldFNuYXBzaG90Iiwic3Vic2NyaWJlIiwidXNlRWZmZWN0Iiwic2V0U25hcHNob3QiLCJPaCIsIlBoIiwiUWgiLCJSaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VPcGFxdWVJZGVudGlmaWVyIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwidWYiLCJlaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiZmkiLCJnaSIsImhpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsImJhc2VMYW5lcyIsIm5pIiwib2kiLCJwaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInFpIiwicmkiLCJwZW5kaW5nQ29udGV4dCIsIkJpIiwiRGkiLCJFaSIsInNpIiwicmV0cnlMYW5lIiwidGkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwidWkiLCJ1bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsTW9kZSIsIkFpIiwiRmkiLCJHaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsIlYiLCJIaSIsIklpIiwiVyIsIkppIiwiS2kiLCJMaSIsIk1pIiwibWVzc2FnZSIsIk5pIiwiY29uc29sZSIsImVycm9yIiwiT2kiLCJXZWFrTWFwIiwiUGkiLCJRaSIsIlJpIiwiU2kiLCJjb21wb25lbnREaWRDYXRjaCIsIlRpIiwiY29tcG9uZW50U3RhY2siLCJVaSIsIldlYWtTZXQiLCJWaSIsIldpIiwiWGkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIllpIiwiWmkiLCIkaSIsImZvY3VzIiwiYWoiLCJkaXNwbGF5IiwiYmoiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiY2oiLCJkaiIsImVqIiwiZmoiLCJnaiIsImhqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsImlqIiwiamoiLCJraiIsImxqIiwidGhlbiIsIm1qIiwibmoiLCJjZWlsIiwib2oiLCJwaiIsIlgiLCJZIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwiSW5maW5pdHkiLCJ3aiIsImNrIiwiWiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJJaiIsIkpqIiwiU2MiLCJLaiIsIkxqIiwiTWoiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJjYWxsYmFja1ByaW9yaXR5IiwiVGMiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJVaiIsInRpbWVvdXRIYW5kbGUiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJsayIsIm1rIiwibmsiLCJvayIsInFrIiwiaHlkcmF0aW9uT3B0aW9ucyIsIm11dGFibGVTb3VyY2VzIiwiX2ludGVybmFsUm9vdCIsInJrIiwidGsiLCJoYXNBdHRyaWJ1dGUiLCJzayIsIlhqIiwiaGsiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJWaiIsIndrIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ4ayIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJjIiwiY2MiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjaGVja0RDRSIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkZyYWdtZW50IiwiTGF6eSIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhdGgiLCJSZWdFeHAiLCJncm91cHMiLCJwcmVmaXgiLCJkZWxpbWl0ZXIiLCJvcHRpb25hbCIsInBhcnRpYWwiLCJhc3RlcmlzayIsInBhdHRlcm4iLCJhdHRhY2hLZXlzIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImFycmF5VG9SZWdleHAiLCJ0b2tlbnNUb1JlZ0V4cCIsInBhcnNlIiwic3RyaW5nVG9SZWdleHAiLCJjb21waWxlIiwic3RyIiwidG9rZW5zVG9GdW5jdGlvbiIsIlBBVEhfUkVHRVhQIiwicmVzIiwidG9rZW5zIiwiZGVmYXVsdERlbGltaXRlciIsImV4ZWMiLCJlc2NhcGVkIiwiZ3JvdXAiLCJtb2RpZmllciIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwic3Vic3RyIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwiY2hhckNvZGVBdCIsIm1hdGNoZXMiLCJvYmoiLCJvcHRzIiwiZW5jb2RlIiwicHJldHR5IiwidG9rZW4iLCJzZWdtZW50IiwiaiIsInNlbnNpdGl2ZSIsInN0cmljdCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJwb3AiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJvYmpBIiwib2JqQiIsImNvbXBhcmVDb250ZXh0IiwicmV0Iiwia2V5c0EiLCJrZXlzQiIsImJIYXNPd25Qcm9wZXJ0eSIsImlkeCIsInZhbHVlQSIsInZhbHVlQiIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwiaW5zZXJ0IiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsImFwcGx5VG9UYWciLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwidXBkYXRlIiwic3R5bGVJbmRleCIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImFsbCIsImF0b2IiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4Iiwic3BsaWNlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkZWZpbml0aW9uIiwiY2h1bmtJZCIsIlByb21pc2UiLCJyZWR1Y2UiLCJwcm9taXNlcyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJzY3JpcHQiLCJuZWVkQXR0YWNoIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZ2V0QXR0cmlidXRlIiwiY2hhcnNldCIsInRpbWVvdXQiLCJzcmMiLCJvblNjcmlwdENvbXBsZXRlIiwicHJldiIsIm9uZXJyb3IiLCJvbmxvYWQiLCJkb25lRm5zIiwiZm4iLCJ0b1N0cmluZ1RhZyIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJjdXJyZW50U2NyaXB0IiwiaW5zdGFsbGVkQ2h1bmtzIiwiODI2IiwiaW5zdGFsbGVkQ2h1bmtEYXRhIiwicHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnJvclR5cGUiLCJyZWFsU3JjIiwicmVxdWVzdCIsIndlYnBhY2tKc29ucENhbGxiYWNrIiwicGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24iLCJjaHVua0lkcyIsIm1vcmVNb2R1bGVzIiwicnVudGltZSIsInJlc29sdmVzIiwiY2h1bmtMb2FkaW5nR2xvYmFsIiwic2VsZiIsIkhlYWRlciIsInN1cGVyIiwibWFpbl90aXRsZSIsIm1haW5fdGl0bGVfaW1nIiwiYWx0IiwiY2xhc3NOYW1lIiwiTWFpbl90aXRsZV9pbWciLCJtYWluX3N1YiIsIm1haW5fYnRuX2dhbWUiLCJ1c2VyX3N0YXRlIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJfX3Byb3RvX18iLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJzcGxpY2VPbmUiLCJjb25kaXRpb24iLCJhZGRMZWFkaW5nU2xhc2giLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJoYXNoIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJ1cCIsInBhcnQiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiaXNBY3RpdmUiLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImhpc3RvcnkiLCJfcHJvcHMiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsImJhc2VuYW1lIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiZ2V0RE9NTG9jYXRpb24iLCJ0cmFuc2l0aW9uTWFuYWdlciIsIm5leHRTdGF0ZSIsImZvcmNlTmV4dFBvcCIsImlnbm9yZVBhdGgiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJsb2NhdGlvbnNBcmVFcXVhbCQkMSIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsUGF0aHMiLCJsYXN0SW5kZXhPZiIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJoYW5kbGVQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJjcmVhdGVIcmVmIiwiYmFzZVRhZyIsInB1c2hIYXNoUGF0aCIsInByZXZJbmRleCIsIm5leHRQYXRocyIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiY29tbW9uanNHbG9iYWwiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiZW1pdHRlciIsIl9wcm90byIsIl9yZWYiLCJuZXh0UHJvcHMiLCJvbGRWYWx1ZSIsIm9iamVjdElzIiwiX0NvbXBvbmVudDIiLCJfdGhpczIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJoaXN0b3J5Q29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCQxIiwiUm91dGVyIiwiX1JlYWN0JENvbXBvbmVudCIsIl9pc01vdW50ZWQiLCJfcGVuZGluZ0xvY2F0aW9uIiwic3RhdGljQ29udGV4dCIsImNvbXB1dGVSb290TWF0Y2giLCJwYXJhbXMiLCJpc0V4YWN0IiwiY2FjaGUkMSIsImNhY2hlQ291bnQkMSIsIm1hdGNoUGF0aCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwidmFsdWVzIiwiUm91dGUiLCJjb250ZXh0JDEiLCJjb21wdXRlZE1hdGNoIiwiX3RoaXMkcHJvcHMiLCJTd2l0Y2giLCJIYXNoUm91dGVyIiwicmVzb2x2ZVRvTG9jYXRpb24iLCJub3JtYWxpemVUb0xvY2F0aW9uIiwiZm9yd2FyZFJlZlNoaW0iLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwicmVzdCIsImV4IiwiaXNNb2RpZmllZEV2ZW50IiwiTGluayIsIl9yZWYyIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJNYWluIiwiMCIsIjEiLCJTdGFydCIsIkxvZ2luIiwidXNlcl9pZCIsIm9uU3VibWl0IiwibG9naW5fdGl0bGUiLCJsb2dpbl9pbnB1dCIsImxvZ2luX2J0bl9uZXh0IiwiY2hhbmdlRXZlbnQiLCJNYWtlIiwidXNlIiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJXZWJraXRMaW5lQ2xhbXAiLCJyZWFjdFByb3BzUmVnZXgiLCJjYWNoZSIsImFyZyIsImZyZWV6ZSIsIl8iLCJzdHlsZWRDb21wb25lbnRJZCIsInByb2Nlc3MiLCJlbnYiLCJSRUFDVF9BUFBfU0NfQVRUUiIsIlNDX0FUVFIiLCJTQ19ESVNBQkxFX1NQRUVEWSIsIlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSIsImdyb3VwU2l6ZXMiLCJVaW50MzJBcnJheSIsImluZGV4T2ZHcm91cCIsImluc2VydFJ1bGVzIiwiaW5zZXJ0UnVsZSIsImNsZWFyR3JvdXAiLCJkZWxldGVSdWxlIiwiZ2V0R3JvdXAiLCJnZXRSdWxlIiwicmVnaXN0ZXJOYW1lIiwicGFyc2VJbnQiLCJnZXRUYWciLCJfX3dlYnBhY2tfbm9uY2VfXyIsIiQiLCJzaGVldCIsInN0eWxlU2hlZXRzIiwib3duZXJOb2RlIiwiY3NzUnVsZXMiLCJub2RlcyIsInJ1bGVzIiwiaXNTZXJ2ZXIiLCJ1c2VDU1NPTUluamVjdGlvbiIsImdzIiwibmFtZXMiLCJyZWdpc3RlcklkIiwicmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImFsbG9jYXRlR1NJbnN0YW5jZSIsImhhc05hbWVGb3JJZCIsImNsZWFyTmFtZXMiLCJjbGVhciIsImNsZWFyUnVsZXMiLCJjbGVhclRhZyIsImFicyIsInN0YXRpY1J1bGVzSWQiLCJpc1N0YXRpYyIsImNvbXBvbmVudElkIiwiYmFzZUhhc2giLCJiYXNlU3R5bGUiLCJnZW5lcmF0ZUFuZEluamVjdFN0eWxlcyIsInBsdWdpbnMiLCJzdHlsaXNQbHVnaW5zIiwiZGlzYWJsZUNTU09NSW5qZWN0aW9uIiwiZGlzYWJsZVZlbmRvclByZWZpeGVzIiwiZ2V0TmFtZSIsImF0dHJzIiwicGFyZW50Q29tcG9uZW50SWQiLCJzaG91bGRGb3J3YXJkUHJvcCIsImNvbXBvbmVudFN0eWxlIiwiZm9sZGVkQ29tcG9uZW50SWRzIiwidGhlbWUiLCIkYXMiLCJhcyIsIndpdGhDb21wb25lbnQiLCJfZm9sZGVkRGVmYXVsdFByb3BzIiwid2l0aENvbmZpZyIsImNyZWF0ZVN0eWxlcyIsInJlbW92ZVN0eWxlcyIsInJlbmRlclN0eWxlcyIsIl9lbWl0U2hlZXRDU1MiLCJnZXRTdHlsZVRhZ3MiLCJzZWFsZWQiLCJnZXRTdHlsZUVsZW1lbnQiLCJzZWFsIiwiY29sbGVjdFN0eWxlcyIsImludGVybGVhdmVXaXRoTm9kZVN0cmVhbSIsIkFwcCIsIkxheW91dCIsInN0eWxlZCIsIm9uUGVyZkVudHJ5IiwiUmVhY3RET00iLCJnZXRFbGVtZW50QnlJZCIsImdldENMUyIsImdldEZJRCIsImdldEZDUCIsImdldExDUCIsImdldFRURkIiXSwibWFwcGluZ3MiOiI7VUFBSUEsRUFDQUMsRSw2RUNFQUMsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSw4d0JBQSt3QixHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyx5Q0FBeUMsTUFBUSxHQUFHLFNBQVcsMlZBQTJWLGVBQWlCLENBQUMsK3dCQUErd0IsV0FBYSxNQUUzaEUsVywwRUNKSUgsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSw4d0JBQSt3QixHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyx1Q0FBdUMsTUFBUSxHQUFHLFNBQVcsMlZBQTJWLGVBQWlCLENBQUMsK3dCQUErd0IsV0FBYSxNQUV6aEUsVywwRUNKSUgsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSxvYkFBcWIsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsd0NBQXdDLE1BQVEsR0FBRyxTQUFXLCtNQUErTSxlQUFpQixDQUFDLHFiQUFxYixXQUFhLE1BRTF0QyxXLHFCQ0NBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0F1RFgsT0FyREFBLEVBQUtDLFNBQVcsV0FDZCxPQUFP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TyxHQUFXcHVELFVBQWlCbXVCLEVBQUVvZ0MsY0FBYyxTQUFTcnFELEdBQUcsT0FBT3hHLEtBQUswd0QsT0FBTzFiLEdBQUUsR0FBRyxnQkFBZ0Ixb0IsR0FBRyxDQUFDc2hDLE1BQU01dEQsS0FBS3V2QixVQUFVL29CLElBQUlpcUIsRUFBRXFnQyx5QkFBeUIsU0FBU3RxRCxHQUFHLE9BQU93dUMsR0FBRSxJQUEveEIsR0FBbW1FLFlDTXJsekIsTUFBTStiLFdBQVk5M0IsWUFDaEIzekIsU0FDRSxPQUNFLGdCQUFDMHJELEdBQUQsS0FDRSxnQkFBQyxFQUFELE1BQ0EsZ0JBQUMsR0FBRCxRQU9SLE1BQU1BLEdBQVNDLE1BQVc7OztFQUsxQixNQ3ZCd0JDLE9DTXhCQyxTQUNFLGdCQUFDLGFBQUQsS0FDRSxnQkFBQyxHQUFELE9BRUZybUQsU0FBU3NtRCxlQUFlLFNEVHBCRixJQUFlQSxjQUF1QjFVLFVBQ3hDLDZCQUFxQjdULE1BQUssRUFBRzBvQixTQUFRQyxTQUFRQyxTQUFRQyxTQUFRQyxjQUMzREosRUFBT0gsSUFDUEksRUFBT0osSUFDUEssRUFBT0wsSUFDUE0sRUFBT04sSUFDUE8sRUFBUVAsUSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpblByb2dyZXNzID0ge307XG52YXIgZGF0YVdlYnBhY2tQcmVmaXggPSBcInNscHUzOlwiO1xuLy8gbG9hZFNjcmlwdCBmdW5jdGlvbiB0byBsb2FkIGEgc2NyaXB0IHZpYSBzY3JpcHQgdGFnXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmwgPSAodXJsLCBkb25lLCBrZXksIGNodW5rSWQpID0+IHtcblx0aWYoaW5Qcm9ncmVzc1t1cmxdKSB7IGluUHJvZ3Jlc3NbdXJsXS5wdXNoKGRvbmUpOyByZXR1cm47IH1cblx0dmFyIHNjcmlwdCwgbmVlZEF0dGFjaDtcblx0aWYoa2V5ICE9PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzY3JpcHRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgcyA9IHNjcmlwdHNbaV07XG5cdFx0XHRpZihzLmdldEF0dHJpYnV0ZShcInNyY1wiKSA9PSB1cmwgfHwgcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIikgPT0gZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpIHsgc2NyaXB0ID0gczsgYnJlYWs7IH1cblx0XHR9XG5cdH1cblx0aWYoIXNjcmlwdCkge1xuXHRcdG5lZWRBdHRhY2ggPSB0cnVlO1xuXHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuXG5cdFx0c2NyaXB0LmNoYXJzZXQgPSAndXRmLTgnO1xuXHRcdHNjcmlwdC50aW1lb3V0ID0gMTIwO1xuXHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKSB7XG5cdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgX193ZWJwYWNrX3JlcXVpcmVfXy5uYyk7XG5cdFx0fVxuXHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIiwgZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpO1xuXHRcdHNjcmlwdC5zcmMgPSB1cmw7XG5cdH1cblx0aW5Qcm9ncmVzc1t1cmxdID0gW2RvbmVdO1xuXHR2YXIgb25TY3JpcHRDb21wbGV0ZSA9IChwcmV2LCBldmVudCkgPT4ge1xuXHRcdC8vIGF2b2lkIG1lbSBsZWFrcyBpbiBJRS5cblx0XHRzY3JpcHQub25lcnJvciA9IHNjcmlwdC5vbmxvYWQgPSBudWxsO1xuXHRcdGNsZWFyVGltZW91dCh0aW1lb3V0KTtcblx0XHR2YXIgZG9uZUZucyA9IGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRkZWxldGUgaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdHNjcmlwdC5wYXJlbnROb2RlICYmIHNjcmlwdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG5cdFx0ZG9uZUZucyAmJiBkb25lRm5zLmZvckVhY2goKGZuKSA9PiBmbihldmVudCkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHQ7XG5cdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgdW5kZWZpbmVkLCB7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSksIDEyMDAwMCk7XG5cdHNjcmlwdC5vbmVycm9yID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmVycm9yKTtcblx0c2NyaXB0Lm9ubG9hZCA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25sb2FkKTtcblx0bmVlZEF0dGFjaCAmJiBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1haW57XFxyXFxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgYm94LXNoYWRvdzogMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjMpO1xcclxcbiAgICBtYXJnaW46IDAgYXV0bzsgLypwYWdlIGNlbnRlciAqL1xcclxcbiAgICBtYXJnaW4tdG9wOiA0cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4udGl0bGUge1xcclxcbiAgICBwYWRkaW5nOiAwLjVyZW07XFxyXFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICAvKmZvbnQtd2VpZ2h0OiA1JTsqL1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjMjJiOGNmO1xcclxcbiAgICBjb2xvcjogd2hpdGU7XFxyXFxufVxcclxcblxcclxcbi5tYWluX3RpdGxlX2ltZ3tcXHJcXG4gICAgd2lkdGg6NTAlO1xcclxcbiAgICBcXHJcXG59XFxyXFxuXFxyXFxuLnN1YntcXHJcXG4gICAgcGFkZGluZzogMXJlbTtcXHJcXG4gICAgLypib3JkZXItYm90dG9tOiAxcHggc29saWQgIzIyYjhjZi8qL1xcclxcbn1cXHJcXG5cXHJcXG4uYnRue1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGJhY2tncm91bmQ6ICMyMmI4Y2Y7XFxyXFxufVxcclxcblxcclxcbi5idG5fZ2FtZXtcXHJcXG4gICAgcGFkZGluZzogMXJlbTtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbiAgICBtYXJnaW46MCBhdXRvO1xcclxcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xcclxcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG4gICAgY29sb3I6ICMyMmI4Y2Y7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9EaXNwbGF5LzAwX0hlYWRlci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLHdFQUF3RTtJQUN4RSxjQUFjLEVBQUUsZUFBZTtJQUMvQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxTQUFTOztBQUViOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixjQUFjO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tYWlue1xcclxcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKTtcXHJcXG4gICAgbWFyZ2luOiAwIGF1dG87IC8qcGFnZSBjZW50ZXIgKi9cXHJcXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnRpdGxlIHtcXHJcXG4gICAgcGFkZGluZzogMC41cmVtO1xcclxcbiAgICBmb250LXNpemU6IDJyZW07XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgLypmb250LXdlaWdodDogNSU7Ki9cXHJcXG4gICAgYmFja2dyb3VuZDogIzIyYjhjZjtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG4ubWFpbl90aXRsZV9pbWd7XFxyXFxuICAgIHdpZHRoOjUwJTtcXHJcXG4gICAgXFxyXFxufVxcclxcblxcclxcbi5zdWJ7XFxyXFxuICAgIHBhZGRpbmc6IDFyZW07XFxyXFxuICAgIC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMyMmI4Y2YvKi9cXHJcXG59XFxyXFxuXFxyXFxuLmJ0bntcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjMjJiOGNmO1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuX2dhbWV7XFxyXFxuICAgIHBhZGRpbmc6IDFyZW07XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgbWFyZ2luOjAgYXV0bztcXHJcXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcXHJcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxyXFxuICAgIGNvbG9yOiAjMjJiOGNmO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIubWFpbntcXHJcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBib3gtc2hhZG93OiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxyXFxuICAgIG1hcmdpbjogMCBhdXRvOyAvKnBhZ2UgY2VudGVyICovXFxyXFxuICAgIG1hcmdpbi10b3A6IDRyZW07XFxyXFxufVxcclxcblxcclxcbi50aXRsZSB7XFxyXFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXHJcXG4gICAgZm9udC1zaXplOiAycmVtO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIC8qZm9udC13ZWlnaHQ6IDUlOyovXFxyXFxuICAgIGJhY2tncm91bmQ6ICMyMmI4Y2Y7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxuLm1haW5fdGl0bGVfaW1ne1xcclxcbiAgICB3aWR0aDo1MCU7XFxyXFxuICAgIFxcclxcbn1cXHJcXG5cXHJcXG4uc3Vie1xcclxcbiAgICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgICAvKmJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMjJiOGNmLyovXFxyXFxufVxcclxcblxcclxcbi5idG57XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZDogIzIyYjhjZjtcXHJcXG59XFxyXFxuXFxyXFxuLmJ0bl9nYW1le1xcclxcbiAgICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgICBib3JkZXI6IG5vbmU7XFxyXFxuICAgIG1hcmdpbjowIGF1dG87XFxyXFxuICAgIG1hcmdpbi10b3A6IDJyZW07XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XFxyXFxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbiAgICBjb2xvcjogIzIyYjhjZjtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL0Rpc3BsYXkvMDBfTWFpbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLHdFQUF3RTtJQUN4RSxjQUFjLEVBQUUsZUFBZTtJQUMvQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxTQUFTOztBQUViOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixjQUFjO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tYWlue1xcclxcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKTtcXHJcXG4gICAgbWFyZ2luOiAwIGF1dG87IC8qcGFnZSBjZW50ZXIgKi9cXHJcXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnRpdGxlIHtcXHJcXG4gICAgcGFkZGluZzogMC41cmVtO1xcclxcbiAgICBmb250LXNpemU6IDJyZW07XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgLypmb250LXdlaWdodDogNSU7Ki9cXHJcXG4gICAgYmFja2dyb3VuZDogIzIyYjhjZjtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG4ubWFpbl90aXRsZV9pbWd7XFxyXFxuICAgIHdpZHRoOjUwJTtcXHJcXG4gICAgXFxyXFxufVxcclxcblxcclxcbi5zdWJ7XFxyXFxuICAgIHBhZGRpbmc6IDFyZW07XFxyXFxuICAgIC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMyMmI4Y2YvKi9cXHJcXG59XFxyXFxuXFxyXFxuLmJ0bntcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjMjJiOGNmO1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuX2dhbWV7XFxyXFxuICAgIHBhZGRpbmc6IDFyZW07XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgbWFyZ2luOjAgYXV0bztcXHJcXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcXHJcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxyXFxuICAgIGNvbG9yOiAjMjJiOGNmO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGl0bGV7XFxyXFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXHJcXG4gICAgZm9udC1zaXplOiAycmVtO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIC8qZm9udC13ZWlnaHQ6IDUlOyovXFxyXFxuICAgIGJhY2tncm91bmQ6ICMyMmI4Y2Y7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxuLmlucHV0e1xcclxcbiAgICBwYWRkaW5nOiAwLjVyZW07XFxyXFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uYnRue1xcclxcbiAgICBwYWRkaW5nOiAwLjVyZW07XFxyXFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICAvKmZvbnQtd2VpZ2h0OiA1JTsqL1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjMjJiOGNmO1xcclxcbiAgICBjb2xvcjogd2hpdGU7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9EaXNwbGF5LzAyX0xvZ2luLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGVBQWU7SUFDZixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50aXRsZXtcXHJcXG4gICAgcGFkZGluZzogMC41cmVtO1xcclxcbiAgICBmb250LXNpemU6IDJyZW07XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgLypmb250LXdlaWdodDogNSU7Ki9cXHJcXG4gICAgYmFja2dyb3VuZDogIzIyYjhjZjtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG4uaW5wdXR7XFxyXFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXHJcXG4gICAgZm9udC1zaXplOiAycmVtO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5idG57XFxyXFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXHJcXG4gICAgZm9udC1zaXplOiAycmVtO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIC8qZm9udC13ZWlnaHQ6IDUlOyovXFxyXFxuICAgIGJhY2tncm91bmQ6ICMyMmI4Y2Y7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5NZW1vXSA9IE1FTU9fU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgLy8gUmVhY3QgdjE2LjExIGFuZCBiZWxvd1xuICBpZiAocmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gIH0gLy8gUmVhY3QgdjE2LjEyIGFuZCBhYm92ZVxuXG5cbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHkoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHkoMjI3KSk7dmFyIGJhPW5ldyBTZXQsY2E9e307ZnVuY3Rpb24gZGEoYSxiKXtlYShhLGIpO2VhKGErXCJDYXB0dXJlXCIsYil9XG5mdW5jdGlvbiBlYShhLGIpe2NhW2FdPWI7Zm9yKGE9MDthPGIubGVuZ3RoO2ErKyliYS5hZGQoYlthXSl9XG52YXIgZmE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLGhhPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxpYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuamE9e30sa2E9e307ZnVuY3Rpb24gbGEoYSl7aWYoaWEuY2FsbChrYSxhKSlyZXR1cm4hMDtpZihpYS5jYWxsKGphLGEpKXJldHVybiExO2lmKGhhLnRlc3QoYSkpcmV0dXJuIGthW2FdPSEwO2phW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIG1hKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbmEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8bWEoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmLGcpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mO3RoaXMucmVtb3ZlRW1wdHlTdHJpbmc9Z312YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCEwLGEsbnVsbCwhMSwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw0LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDYsITEsYSxudWxsLCExLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIG9hPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gcGEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EsXG5wYSk7RFtiXT1uZXcgQihiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5ELnhsaW5rSHJlZj1uZXcgQihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITAsITEpO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITAsITApfSk7XG5mdW5jdGlvbiBxYShhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChuYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/bGEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciByYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxzYT02MDEwMyx0YT02MDEwNix1YT02MDEwNyx3YT02MDEwOCx4YT02MDExNCx5YT02MDEwOSx6YT02MDExMCxBYT02MDExMixCYT02MDExMyxDYT02MDEyMCxEYT02MDExNSxFYT02MDExNixGYT02MDEyMSxHYT02MDEyOCxIYT02MDEyOSxJYT02MDEzMCxKYT02MDEzMTtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciBFPVN5bWJvbC5mb3I7c2E9RShcInJlYWN0LmVsZW1lbnRcIik7dGE9RShcInJlYWN0LnBvcnRhbFwiKTt1YT1FKFwicmVhY3QuZnJhZ21lbnRcIik7d2E9RShcInJlYWN0LnN0cmljdF9tb2RlXCIpO3hhPUUoXCJyZWFjdC5wcm9maWxlclwiKTt5YT1FKFwicmVhY3QucHJvdmlkZXJcIik7emE9RShcInJlYWN0LmNvbnRleHRcIik7QWE9RShcInJlYWN0LmZvcndhcmRfcmVmXCIpO0JhPUUoXCJyZWFjdC5zdXNwZW5zZVwiKTtDYT1FKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTtEYT1FKFwicmVhY3QubWVtb1wiKTtFYT1FKFwicmVhY3QubGF6eVwiKTtGYT1FKFwicmVhY3QuYmxvY2tcIik7RShcInJlYWN0LnNjb3BlXCIpO0dhPUUoXCJyZWFjdC5vcGFxdWUuaWRcIik7SGE9RShcInJlYWN0LmRlYnVnX3RyYWNlX21vZGVcIik7SWE9RShcInJlYWN0Lm9mZnNjcmVlblwiKTtKYT1FKFwicmVhY3QubGVnYWN5X2hpZGRlblwiKX1cbnZhciBLYT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gTGEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUthJiZhW0thXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBNYTtmdW5jdGlvbiBOYShhKXtpZih2b2lkIDA9PT1NYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtNYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTWErYX12YXIgT2E9ITE7XG5mdW5jdGlvbiBQYShhLGIpe2lmKCFhfHxPYSlyZXR1cm5cIlwiO09hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChrKXt2YXIgZD1rfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2goayl7ZD1rfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goayl7ZD1rfWEoKX19Y2F0Y2goayl7aWYoayYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBrLnN0YWNrKXtmb3IodmFyIGU9ay5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXJldHVyblwiXFxuXCIrZVtnXS5yZXBsYWNlKFwiIGF0IG5ldyBcIixcIiBhdCBcIik7d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e09hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TmEoYSk6XCJcIn1cbmZ1bmN0aW9uIFFhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBOYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE5hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBOYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE5hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1QYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1QYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMjI6cmV0dXJuIGE9UGEoYS50eXBlLl9yZW5kZXIsITEpLGE7Y2FzZSAxOnJldHVybiBhPVBhKGEudHlwZSwhMCksYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gUmEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB0YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgeGE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2Ugd2E6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBCYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBDYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB6YTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSB5YTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBBYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtcbnJldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgRGE6cmV0dXJuIFJhKGEudHlwZSk7Y2FzZSBGYTpyZXR1cm4gUmEoYS5fcmVuZGVyKTtjYXNlIEVhOmI9YS5fcGF5bG9hZDthPWEuX2luaXQ7dHJ5e3JldHVybiBSYShhKGIpKX1jYXRjaChjKXt9fXJldHVybiBudWxsfWZ1bmN0aW9uIFNhKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG0oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gJGEoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZxYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYWIoYSxiKXskYShhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2JiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmJiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gY2IoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGJiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIGRiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIGViKGEsYil7YT1tKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IoeSg5MSkpO3JldHVybiBtKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHkoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih5KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIga2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmIsb2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09a2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bmI9bmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9bmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gcGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBxYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxyYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocWIpLmZvckVhY2goZnVuY3Rpb24oYSl7cmIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtxYltiXT1xYlthXX0pfSk7ZnVuY3Rpb24gc2IoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHFiLmhhc093blByb3BlcnR5KGEpJiZxYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiB0YihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1zYihjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB1Yj1tKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdmIoYSxiKXtpZihiKXtpZih1YlthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoMTM3LGEpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHkoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHkoNjIpKTt9fVxuZnVuY3Rpb24gd2IoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uIHhiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeWI9bnVsbCx6Yj1udWxsLEFiPW51bGw7XG5mdW5jdGlvbiBCYihhKXtpZihhPUNiKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgeWIpdGhyb3cgRXJyb3IoeSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1EYihiKSx5YihhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBFYihhKXt6Yj9BYj9BYi5wdXNoKGEpOkFiPVthXTp6Yj1hfWZ1bmN0aW9uIEZiKCl7aWYoemIpe3ZhciBhPXpiLGI9QWI7QWI9emI9bnVsbDtCYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQmIoYlthXSl9fWZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBJYigpe312YXIgSmI9R2IsS2I9ITEsTGI9ITE7ZnVuY3Rpb24gTWIoKXtpZihudWxsIT09emJ8fG51bGwhPT1BYilJYigpLEZiKCl9XG5mdW5jdGlvbiBOYihhLGIsYyl7aWYoTGIpcmV0dXJuIGEoYixjKTtMYj0hMDt0cnl7cmV0dXJuIEpiKGEsYixjKX1maW5hbGx5e0xiPSExLE1iKCl9fVxuZnVuY3Rpb24gT2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgYyl0aHJvdyBFcnJvcih5KDIzMSxiLHR5cGVvZiBjKSk7cmV0dXJuIGN9dmFyIFBiPSExO2lmKGZhKXRyeXt2YXIgUWI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFFiLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtQYj0hMH19KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpfWNhdGNoKGEpe1BiPSExfWZ1bmN0aW9uIFJiKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChuKXt0aGlzLm9uRXJyb3Iobil9fXZhciBTYj0hMSxUYj1udWxsLFViPSExLFZiPW51bGwsV2I9e29uRXJyb3I6ZnVuY3Rpb24oYSl7U2I9ITA7VGI9YX19O2Z1bmN0aW9uIFhiKGEsYixjLGQsZSxmLGcsaCxrKXtTYj0hMTtUYj1udWxsO1JiLmFwcGx5KFdiLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiBZYihhLGIsYyxkLGUsZixnLGgsayl7WGIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKFNiKXtpZihTYil7dmFyIGw9VGI7U2I9ITE7VGI9bnVsbH1lbHNlIHRocm93IEVycm9yKHkoMTk4KSk7VWJ8fChVYj0hMCxWYj1sKX19ZnVuY3Rpb24gWmIoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmZsYWdzJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiAkYihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGFjKGEpe2lmKFpiKGEpIT09YSl0aHJvdyBFcnJvcih5KDE4OCkpO31cbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVpiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGFjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGFjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IoeSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih5KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHkoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gY2MoYSl7YT1iYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRjKGEsYil7Zm9yKHZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1iOyl7aWYoYj09PWF8fGI9PT1jKXJldHVybiEwO2I9Yi5yZXR1cm59cmV0dXJuITF9dmFyIGVjLGZjLGdjLGhjLGljPSExLGpjPVtdLGtjPW51bGwsbGM9bnVsbCxtYz1udWxsLG5jPW5ldyBNYXAsb2M9bmV3IE1hcCxwYz1bXSxxYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiByYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSxkb21FdmVudE5hbWU6YixldmVudFN5c3RlbUZsYWdzOmN8MTYsbmF0aXZlRXZlbnQ6ZSx0YXJnZXRDb250YWluZXJzOltkXX19ZnVuY3Rpb24gc2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjprYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6bGM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6bWM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOm5jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOm9jLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gdGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1yYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmZmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gdWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4ga2M9dGMoa2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIGxjPXRjKGxjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBtYz10YyhtYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO25jLnNldChmLHRjKG5jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxvYy5zZXQoZix0YyhvYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiB2YyhhKXt2YXIgYj13YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVpiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPSRiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO2hjKGEubGFuZVByaW9yaXR5LGZ1bmN0aW9uKCl7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe2djKGMpfSl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24geGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXJldHVybiBiPUNiKGMpLG51bGwhPT1iJiZmYyhiKSxhLmJsb2NrZWRPbj1jLCExO2Iuc2hpZnQoKX1yZXR1cm4hMH1mdW5jdGlvbiB6YyhhLGIsYyl7eGMoYSkmJmMuZGVsZXRlKGIpfVxuZnVuY3Rpb24gQWMoKXtmb3IoaWM9ITE7MDxqYy5sZW5ndGg7KXt2YXIgYT1qY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9Q2IoYS5ibG9ja2VkT24pO251bGwhPT1hJiZlYyhhKTticmVha31mb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yyl7YS5ibG9ja2VkT249YzticmVha31iLnNoaWZ0KCl9bnVsbD09PWEuYmxvY2tlZE9uJiZqYy5zaGlmdCgpfW51bGwhPT1rYyYmeGMoa2MpJiYoa2M9bnVsbCk7bnVsbCE9PWxjJiZ4YyhsYykmJihsYz1udWxsKTtudWxsIT09bWMmJnhjKG1jKSYmKG1jPW51bGwpO25jLmZvckVhY2goemMpO29jLmZvckVhY2goemMpfVxuZnVuY3Rpb24gQmMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLGljfHwoaWM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksQWMpKSl9XG5mdW5jdGlvbiBDYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBCYyhiLGEpfWlmKDA8amMubGVuZ3RoKXtCYyhqY1swXSxhKTtmb3IodmFyIGM9MTtjPGpjLmxlbmd0aDtjKyspe3ZhciBkPWpjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09a2MmJkJjKGtjLGEpO251bGwhPT1sYyYmQmMobGMsYSk7bnVsbCE9PW1jJiZCYyhtYyxhKTtuYy5mb3JFYWNoKGIpO29jLmZvckVhY2goYik7Zm9yKGM9MDtjPHBjLmxlbmd0aDtjKyspZD1wY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8cGMubGVuZ3RoJiYoYz1wY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOyl2YyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJnBjLnNoaWZ0KCl9XG5mdW5jdGlvbiBEYyhhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBFYz17YW5pbWF0aW9uZW5kOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6RGMoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxGYz17fSxHYz17fTtcbmZhJiYoR2M9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgRWMuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgRWMudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBIYyhhKXtpZihGY1thXSlyZXR1cm4gRmNbYV07aWYoIUVjW2FdKXJldHVybiBhO3ZhciBiPUVjW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIEdjKXJldHVybiBGY1thXT1iW2NdO3JldHVybiBhfVxudmFyIEljPUhjKFwiYW5pbWF0aW9uZW5kXCIpLEpjPUhjKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLEtjPUhjKFwiYW5pbWF0aW9uc3RhcnRcIiksTGM9SGMoXCJ0cmFuc2l0aW9uZW5kXCIpLE1jPW5ldyBNYXAsTmM9bmV3IE1hcCxPYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixJYyxcImFuaW1hdGlvbkVuZFwiLEpjLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsS2MsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXG5cImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIixMYyxcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gUGMoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV07ZT1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtOYy5zZXQoZCxiKTtNYy5zZXQoZCxlKTtkYShlLFtkXSl9fXZhciBRYz1yLnVuc3RhYmxlX25vdztRYygpO3ZhciBGPTg7XG5mdW5jdGlvbiBSYyhhKXtpZigwIT09KDEmYSkpcmV0dXJuIEY9MTUsMTtpZigwIT09KDImYSkpcmV0dXJuIEY9MTQsMjtpZigwIT09KDQmYSkpcmV0dXJuIEY9MTMsNDt2YXIgYj0yNCZhO2lmKDAhPT1iKXJldHVybiBGPTEyLGI7aWYoMCE9PShhJjMyKSlyZXR1cm4gRj0xMSwzMjtiPTE5MiZhO2lmKDAhPT1iKXJldHVybiBGPTEwLGI7aWYoMCE9PShhJjI1NikpcmV0dXJuIEY9OSwyNTY7Yj0zNTg0JmE7aWYoMCE9PWIpcmV0dXJuIEY9OCxiO2lmKDAhPT0oYSY0MDk2KSlyZXR1cm4gRj03LDQwOTY7Yj00MTg2MTEyJmE7aWYoMCE9PWIpcmV0dXJuIEY9NixiO2I9NjI5MTQ1NjAmYTtpZigwIT09YilyZXR1cm4gRj01LGI7aWYoYSY2NzEwODg2NClyZXR1cm4gRj00LDY3MTA4ODY0O2lmKDAhPT0oYSYxMzQyMTc3MjgpKXJldHVybiBGPTMsMTM0MjE3NzI4O2I9ODA1MzA2MzY4JmE7aWYoMCE9PWIpcmV0dXJuIEY9MixiO2lmKDAhPT0oMTA3Mzc0MTgyNCZhKSlyZXR1cm4gRj0xLDEwNzM3NDE4MjQ7XG5GPTg7cmV0dXJuIGF9ZnVuY3Rpb24gU2MoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIDE1O2Nhc2UgOTg6cmV0dXJuIDEwO2Nhc2UgOTc6Y2FzZSA5NjpyZXR1cm4gODtjYXNlIDk1OnJldHVybiAyO2RlZmF1bHQ6cmV0dXJuIDB9fWZ1bmN0aW9uIFRjKGEpe3N3aXRjaChhKXtjYXNlIDE1OmNhc2UgMTQ6cmV0dXJuIDk5O2Nhc2UgMTM6Y2FzZSAxMjpjYXNlIDExOmNhc2UgMTA6cmV0dXJuIDk4O2Nhc2UgOTpjYXNlIDg6Y2FzZSA3OmNhc2UgNjpjYXNlIDQ6Y2FzZSA1OnJldHVybiA5NztjYXNlIDM6Y2FzZSAyOmNhc2UgMTpyZXR1cm4gOTU7Y2FzZSAwOnJldHVybiA5MDtkZWZhdWx0OnRocm93IEVycm9yKHkoMzU4LGEpKTt9fVxuZnVuY3Rpb24gVWMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcztpZigwPT09YylyZXR1cm4gRj0wO3ZhciBkPTAsZT0wLGY9YS5leHBpcmVkTGFuZXMsZz1hLnN1c3BlbmRlZExhbmVzLGg9YS5waW5nZWRMYW5lcztpZigwIT09ZilkPWYsZT1GPTE1O2Vsc2UgaWYoZj1jJjEzNDIxNzcyNywwIT09Zil7dmFyIGs9ZiZ+ZzswIT09az8oZD1SYyhrKSxlPUYpOihoJj1mLDAhPT1oJiYoZD1SYyhoKSxlPUYpKX1lbHNlIGY9YyZ+ZywwIT09Zj8oZD1SYyhmKSxlPUYpOjAhPT1oJiYoZD1SYyhoKSxlPUYpO2lmKDA9PT1kKXJldHVybiAwO2Q9MzEtVmMoZCk7ZD1jJigoMD5kPzA6MTw8ZCk8PDEpLTE7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZykpe1JjKGIpO2lmKGU8PUYpcmV0dXJuIGI7Rj1lfWI9YS5lbnRhbmdsZWRMYW5lcztpZigwIT09Yilmb3IoYT1hLmVudGFuZ2xlbWVudHMsYiY9ZDswPGI7KWM9MzEtVmMoYiksZT0xPDxjLGR8PWFbY10sYiY9fmU7cmV0dXJuIGR9XG5mdW5jdGlvbiBXYyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24gWGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxNTpyZXR1cm4gMTtjYXNlIDE0OnJldHVybiAyO2Nhc2UgMTI6cmV0dXJuIGE9WWMoMjQmfmIpLDA9PT1hP1hjKDEwLGIpOmE7Y2FzZSAxMDpyZXR1cm4gYT1ZYygxOTImfmIpLDA9PT1hP1hjKDgsYik6YTtjYXNlIDg6cmV0dXJuIGE9WWMoMzU4NCZ+YiksMD09PWEmJihhPVljKDQxODYxMTImfmIpLDA9PT1hJiYoYT01MTIpKSxhO2Nhc2UgMjpyZXR1cm4gYj1ZYyg4MDUzMDYzNjgmfmIpLDA9PT1iJiYoYj0yNjg0MzU0NTYpLGJ9dGhyb3cgRXJyb3IoeSgzNTgsYSkpO31mdW5jdGlvbiBZYyhhKXtyZXR1cm4gYSYtYX1mdW5jdGlvbiBaYyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjt2YXIgZD1iLTE7YS5zdXNwZW5kZWRMYW5lcyY9ZDthLnBpbmdlZExhbmVzJj1kO2E9YS5ldmVudFRpbWVzO2I9MzEtVmMoYik7YVtiXT1jfXZhciBWYz1NYXRoLmNsejMyP01hdGguY2x6MzI6YWQsYmQ9TWF0aC5sb2csY2Q9TWF0aC5MTjI7ZnVuY3Rpb24gYWQoYSl7cmV0dXJuIDA9PT1hPzMyOjMxLShiZChhKS9jZHwwKXwwfXZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIGdkKGEsYixjLGQpe0tifHxJYigpO3ZhciBlPWhkLGY9S2I7S2I9ITA7dHJ5e0hiKGUsYSxiLGMsZCl9ZmluYWxseXsoS2I9Zil8fE1iKCl9fWZ1bmN0aW9uIGlkKGEsYixjLGQpe2VkKGRkLGhkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkKXtpZihmZCl7dmFyIGU7aWYoKGU9MD09PShiJjQpKSYmMDxqYy5sZW5ndGgmJi0xPHFjLmluZGV4T2YoYSkpYT1yYyhudWxsLGEsYixjLGQpLGpjLnB1c2goYSk7ZWxzZXt2YXIgZj15YyhhLGIsYyxkKTtpZihudWxsPT09ZillJiZzYyhhLGQpO2Vsc2V7aWYoZSl7aWYoLTE8cWMuaW5kZXhPZihhKSl7YT1yYyhmLGEsYixjLGQpO2pjLnB1c2goYSk7cmV0dXJufWlmKHVjKGYsYSxiLGMsZCkpcmV0dXJuO3NjKGEsZCl9amQoYSxiLGQsbnVsbCxjKX19fX1cbmZ1bmN0aW9uIHljKGEsYixjLGQpe3ZhciBlPXhiKGQpO2U9d2MoZSk7aWYobnVsbCE9PWUpe3ZhciBmPVpiKGUpO2lmKG51bGw9PT1mKWU9bnVsbDtlbHNle3ZhciBnPWYudGFnO2lmKDEzPT09Zyl7ZT0kYihmKTtpZihudWxsIT09ZSlyZXR1cm4gZTtlPW51bGx9ZWxzZSBpZigzPT09Zyl7aWYoZi5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWYudGFnP2Yuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtlPW51bGx9ZWxzZSBmIT09ZSYmKGU9bnVsbCl9fWpkKGEsYixkLGUsYyk7cmV0dXJuIG51bGx9dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO1xuZnVuY3Rpb24gbmQoKXtpZihtZClyZXR1cm4gbWQ7dmFyIGEsYj1sZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBtZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9bShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9bSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPW0oe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPW0oe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPW0oe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1tKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9bSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1tKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9bSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1tKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1tKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9bSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9bSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9ZmEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWZhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9ZmEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoZmEpe3ZhciB4ZTtpZihmYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO2E9cmU7aWYoS2IpYShiKTtlbHNle0tiPSEwO3RyeXtHYihhLGIpfWZpbmFsbHl7S2I9ITEsTWIoKX19fX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlLEllPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBKZShhLGIpe2lmKEhlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighSWUuY2FsbChiLGNbZF0pfHwhSGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBLZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZShhLGIpe3ZhciBjPUtlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtlKGMpfX1mdW5jdGlvbiBNZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01lKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5lKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVhhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVhhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgUGU9ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk9lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkplKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cblBjKFwiY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXNpbiBmb2N1cyBmb2N1c291dCBibHVyIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksXG4wKTtQYyhcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTtQYyhPYywyKTtmb3IodmFyIFZlPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxXZT0wO1dlPFZlLmxlbmd0aDtXZSsrKU5jLnNldChWZVtXZV0sMCk7ZWEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtcbmVhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtlYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2RhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZGEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5kYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIFhlPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxZZT1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChYZSkpO1xuZnVuY3Rpb24gWmUoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7WWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfX19aWYoVWIpdGhyb3cgYT1WYixVYj0hMSxWYj1udWxsLGE7fVxuZnVuY3Rpb24gRyhhLGIpe3ZhciBjPSRlKGIpLGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChhZihiLGEsMiwhMSksYy5hZGQoZCkpfXZhciBiZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIGNmKGEpe2FbYmZdfHwoYVtiZl09ITAsYmEuZm9yRWFjaChmdW5jdGlvbihiKXtZZS5oYXMoYil8fGRmKGIsITEsYSxudWxsKTtkZihiLCEwLGEsbnVsbCl9KSl9XG5mdW5jdGlvbiBkZihhLGIsYyxkKXt2YXIgZT00PGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06MCxmPWM7XCJzZWxlY3Rpb25jaGFuZ2VcIj09PWEmJjkhPT1jLm5vZGVUeXBlJiYoZj1jLm93bmVyRG9jdW1lbnQpO2lmKG51bGwhPT1kJiYhYiYmWWUuaGFzKGEpKXtpZihcInNjcm9sbFwiIT09YSlyZXR1cm47ZXw9MjtmPWR9dmFyIGc9JGUoZiksaD1hK1wiX19cIisoYj9cImNhcHR1cmVcIjpcImJ1YmJsZVwiKTtnLmhhcyhoKXx8KGImJihlfD00KSxhZihmLGEsZSxiKSxnLmFkZChoKSl9XG5mdW5jdGlvbiBhZihhLGIsYyxkKXt2YXIgZT1OYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWU/MjplKXtjYXNlIDA6ZT1nZDticmVhaztjYXNlIDE6ZT1pZDticmVhaztkZWZhdWx0OmU9aGR9Yz1lLmJpbmQobnVsbCxiLGMsYSk7ZT12b2lkIDA7IVBifHxcInRvdWNoc3RhcnRcIiE9PWImJlwidG91Y2htb3ZlXCIhPT1iJiZcIndoZWVsXCIhPT1ifHwoZT0hMCk7ZD92b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse2NhcHR1cmU6ITAscGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMCk6dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX1cbmZ1bmN0aW9uIGpkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9d2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufU5iKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXhiKGMpLGc9W107XG5hOnt2YXIgaD1NYy5nZXQoYSk7aWYodm9pZCAwIT09aCl7dmFyIGs9dGQseD1hO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2QoYykpYnJlYWsgYTtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOms9UmQ7YnJlYWs7Y2FzZSBcImZvY3VzaW5cIjp4PVwiZm9jdXNcIjtrPUZkO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOng9XCJibHVyXCI7az1GZDticmVhaztjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjprPUZkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilicmVhayBhO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6az1CZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjprPVxuRGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6az1WZDticmVhaztjYXNlIEljOmNhc2UgSmM6Y2FzZSBLYzprPUhkO2JyZWFrO2Nhc2UgTGM6az1YZDticmVhaztjYXNlIFwic2Nyb2xsXCI6az12ZDticmVhaztjYXNlIFwid2hlZWxcIjprPVpkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOms9SmQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6az1UZH12YXIgdz0wIT09KGImNCksej0hdyYmXCJzY3JvbGxcIj09PWEsdT13P251bGwhPT1oP2grXCJDYXB0dXJlXCI6bnVsbDpoO3c9W107Zm9yKHZhciB0PWQscTtudWxsIT09XG50Oyl7cT10O3ZhciB2PXEuc3RhdGVOb2RlOzU9PT1xLnRhZyYmbnVsbCE9PXYmJihxPXYsbnVsbCE9PXUmJih2PU9iKHQsdSksbnVsbCE9diYmdy5wdXNoKGVmKHQsdixxKSkpKTtpZih6KWJyZWFrO3Q9dC5yZXR1cm59MDx3Lmxlbmd0aCYmKGg9bmV3IGsoaCx4LG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnd9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiYwPT09KGImMTYpJiYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYod2MoeCl8fHhbZmZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCx4PXg/d2MoeCk6bnVsbCxudWxsIT09XG54JiYoej1aYih4KSx4IT09enx8NSE9PXgudGFnJiY2IT09eC50YWcpKXg9bnVsbH1lbHNlIGs9bnVsbCx4PWQ7aWYoayE9PXgpe3c9QmQ7dj1cIm9uTW91c2VMZWF2ZVwiO3U9XCJvbk1vdXNlRW50ZXJcIjt0PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdz1UZCx2PVwib25Qb2ludGVyTGVhdmVcIix1PVwib25Qb2ludGVyRW50ZXJcIix0PVwicG9pbnRlclwiO3o9bnVsbD09az9oOnVlKGspO3E9bnVsbD09eD9oOnVlKHgpO2g9bmV3IHcodix0K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9ejtoLnJlbGF0ZWRUYXJnZXQ9cTt2PW51bGw7d2MoZSk9PT1kJiYodz1uZXcgdyh1LHQrXCJlbnRlclwiLHgsYyxlKSx3LnRhcmdldD1xLHcucmVsYXRlZFRhcmdldD16LHY9dyk7ej12O2lmKGsmJngpYjp7dz1rO3U9eDt0PTA7Zm9yKHE9dztxO3E9Z2YocSkpdCsrO3E9MDtmb3Iodj11O3Y7dj1nZih2KSlxKys7Zm9yKDswPHQtcTspdz1nZih3KSx0LS07Zm9yKDswPHEtdDspdT1cbmdmKHUpLHEtLTtmb3IoO3QtLTspe2lmKHc9PT11fHxudWxsIT09dSYmdz09PXUuYWx0ZXJuYXRlKWJyZWFrIGI7dz1nZih3KTt1PWdmKHUpfXc9bnVsbH1lbHNlIHc9bnVsbDtudWxsIT09ayYmaGYoZyxoLGssdywhMSk7bnVsbCE9PXgmJm51bGwhPT16JiZoZihnLHoseCx3LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBKPXZlO2Vsc2UgaWYobWUoaCkpaWYod2UpSj1GZTtlbHNle0o9RGU7dmFyIEs9Q2V9ZWxzZShrPWgubm9kZU5hbWUpJiZcImlucHV0XCI9PT1rLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1oLnR5cGV8fFwicmFkaW9cIj09PWgudHlwZSkmJihKPUVlKTtpZihKJiYoSj1KKGEsZCkpKXtuZShnLEosYyxlKTticmVhayBhfUsmJksoYSxoLGQpO1wiZm9jdXNvdXRcIj09PWEmJihLPWguX3dyYXBwZXJTdGF0ZSkmJlxuSy5jb250cm9sbGVkJiZcIm51bWJlclwiPT09aC50eXBlJiZiYihoLFwibnVtYmVyXCIsaC52YWx1ZSl9Sz1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZShLKXx8XCJ0cnVlXCI9PT1LLmNvbnRlbnRFZGl0YWJsZSlRZT1LLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgUTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6TD1cIm9uQ29tcG9zaXRpb25FbmRcIjticmVhayBiO1xuY2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6TD1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifUw9dm9pZCAwfWVsc2UgaWU/Z2UoYSxjKSYmKEw9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtMJiYoZGUmJlwia29cIiE9PWMubG9jYWxlJiYoaWV8fFwib25Db21wb3NpdGlvblN0YXJ0XCIhPT1MP1wib25Db21wb3NpdGlvbkVuZFwiPT09TCYmaWUmJihRPW5kKCkpOihrZD1lLGxkPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGllPSEwKSksSz1vZShkLEwpLDA8Sy5sZW5ndGgmJihMPW5ldyBMZChMLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6TCxsaXN0ZW5lcnM6S30pLFE/TC5kYXRhPVE6KFE9aGUoYyksbnVsbCE9PVEmJihMLmRhdGE9USkpKSk7aWYoUT1jZT9qZShhLGMpOmtlKGEsYykpZD1vZShkLFwib25CZWZvcmVJbnB1dFwiKSwwPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXG5cImJlZm9yZWlucHV0XCIsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6ZSxsaXN0ZW5lcnM6ZH0pLGUuZGF0YT1RKX1zZShnLGIpfSl9ZnVuY3Rpb24gZWYoYSxiLGMpe3JldHVybntpbnN0YW5jZTphLGxpc3RlbmVyOmIsY3VycmVudFRhcmdldDpjfX1mdW5jdGlvbiBvZShhLGIpe2Zvcih2YXIgYz1iK1wiQ2FwdHVyZVwiLGQ9W107bnVsbCE9PWE7KXt2YXIgZT1hLGY9ZS5zdGF0ZU5vZGU7NT09PWUudGFnJiZudWxsIT09ZiYmKGU9ZixmPU9iKGEsYyksbnVsbCE9ZiYmZC51bnNoaWZ0KGVmKGEsZixlKSksZj1PYihhLGIpLG51bGwhPWYmJmQucHVzaChlZihhLGYsZSkpKTthPWEucmV0dXJufXJldHVybiBkfWZ1bmN0aW9uIGdmKGEpe2lmKG51bGw9PT1hKXJldHVybiBudWxsO2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBoZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPU9iKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KGVmKGMsayxoKSkpOmV8fChrPU9iKGMsZiksbnVsbCE9ayYmZy5wdXNoKGVmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9ZnVuY3Rpb24gamYoKXt9dmFyIGtmPW51bGwsbGY9bnVsbDtmdW5jdGlvbiBtZihhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBuZihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIG9mPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHBmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBxZihhKXsxPT09YS5ub2RlVHlwZT9hLnRleHRDb250ZW50PVwiXCI6OT09PWEubm9kZVR5cGUmJihhPWEuYm9keSxudWxsIT1hJiYoYS50ZXh0Q29udGVudD1cIlwiKSl9XG5mdW5jdGlvbiByZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1mdW5jdGlvbiBzZihhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiJFwiPT09Y3x8XCIkIVwiPT09Y3x8XCIkP1wiPT09Yyl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2VcIi8kXCI9PT1jJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgdGY9MDtmdW5jdGlvbiB1ZihhKXtyZXR1cm57JCR0eXBlb2Y6R2EsdG9TdHJpbmc6YSx2YWx1ZU9mOmF9fXZhciB2Zj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx3Zj1cIl9fcmVhY3RGaWJlciRcIit2Zix4Zj1cIl9fcmVhY3RQcm9wcyRcIit2ZixmZj1cIl9fcmVhY3RDb250YWluZXIkXCIrdmYseWY9XCJfX3JlYWN0RXZlbnRzJFwiK3ZmO1xuZnVuY3Rpb24gd2MoYSl7dmFyIGI9YVt3Zl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbZmZdfHxjW3dmXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPXNmKGEpO251bGwhPT1hOyl7aWYoYz1hW3dmXSlyZXR1cm4gYzthPXNmKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbd2ZdfHxhW2ZmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHkoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbeGZdfHxudWxsfVxuZnVuY3Rpb24gJGUoYSl7dmFyIGI9YVt5Zl07dm9pZCAwPT09YiYmKGI9YVt5Zl09bmV3IFNldCk7cmV0dXJuIGJ9dmFyIHpmPVtdLEFmPS0xO2Z1bmN0aW9uIEJmKGEpe3JldHVybntjdXJyZW50OmF9fWZ1bmN0aW9uIEgoYSl7MD5BZnx8KGEuY3VycmVudD16ZltBZl0semZbQWZdPW51bGwsQWYtLSl9ZnVuY3Rpb24gSShhLGIpe0FmKys7emZbQWZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQ2Y9e30sTT1CZihDZiksTj1CZighMSksRGY9Q2Y7XG5mdW5jdGlvbiBFZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIENmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEZmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gR2YoKXtIKE4pO0goTSl9ZnVuY3Rpb24gSGYoYSxiLGMpe2lmKE0uY3VycmVudCE9PUNmKXRocm93IEVycm9yKHkoMTY4KSk7SShNLGIpO0koTixjKX1cbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IoeSgxMDgsUmEoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbSh7fSxjLGQpfWZ1bmN0aW9uIEpmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxDZjtEZj1NLmN1cnJlbnQ7SShNLGEpO0koTixOLmN1cnJlbnQpO3JldHVybiEwfWZ1bmN0aW9uIEtmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih5KDE2OSkpO2M/KGE9SWYoYSxiLERmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChOKSxIKE0pLEkoTSxhKSk6SChOKTtJKE4sYyl9XG52YXIgTGY9bnVsbCxNZj1udWxsLE5mPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LE9mPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxQZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLFFmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsUmY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsU2Y9ci51bnN0YWJsZV9ub3csVGY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxVZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFZmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksV2Y9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxYZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFlmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFpmPXt9LCRmPXZvaWQgMCE9PVJmP1JmOmZ1bmN0aW9uKCl7fSxhZz1udWxsLGJnPW51bGwsY2c9ITEsZGc9U2YoKSxPPTFFND5kZz9TZjpmdW5jdGlvbigpe3JldHVybiBTZigpLWRnfTtcbmZ1bmN0aW9uIGVnKCl7c3dpdGNoKFRmKCkpe2Nhc2UgVWY6cmV0dXJuIDk5O2Nhc2UgVmY6cmV0dXJuIDk4O2Nhc2UgV2Y6cmV0dXJuIDk3O2Nhc2UgWGY6cmV0dXJuIDk2O2Nhc2UgWWY6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBVZjtjYXNlIDk4OnJldHVybiBWZjtjYXNlIDk3OnJldHVybiBXZjtjYXNlIDk2OnJldHVybiBYZjtjYXNlIDk1OnJldHVybiBZZjtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBnZyhhLGIpe2E9ZmcoYSk7cmV0dXJuIE5mKGEsYil9ZnVuY3Rpb24gaGcoYSxiLGMpe2E9ZmcoYSk7cmV0dXJuIE9mKGEsYixjKX1mdW5jdGlvbiBpZygpe2lmKG51bGwhPT1iZyl7dmFyIGE9Ymc7Ymc9bnVsbDtQZihhKX1qZygpfVxuZnVuY3Rpb24gamcoKXtpZighY2cmJm51bGwhPT1hZyl7Y2c9ITA7dmFyIGE9MDt0cnl7dmFyIGI9YWc7Z2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO2FnPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PWFnJiYoYWc9YWcuc2xpY2UoYSsxKSksT2YoVWYsaWcpLGM7fWZpbmFsbHl7Y2c9ITF9fX12YXIga2c9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gbGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1tKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIG1nPUJmKG51bGwpLG5nPW51bGwsb2c9bnVsbCxwZz1udWxsO2Z1bmN0aW9uIHFnKCl7cGc9b2c9bmc9bnVsbH1cbmZ1bmN0aW9uIHJnKGEpe3ZhciBiPW1nLmN1cnJlbnQ7SChtZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBzZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZigoYS5jaGlsZExhbmVzJmIpPT09YilpZihudWxsPT09Y3x8KGMuY2hpbGRMYW5lcyZiKT09PWIpYnJlYWs7ZWxzZSBjLmNoaWxkTGFuZXN8PWI7ZWxzZSBhLmNoaWxkTGFuZXN8PWIsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHRnKGEsYil7bmc9YTtwZz1vZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKDAhPT0oYS5sYW5lcyZiKSYmKHVnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHZnKGEsYil7aWYocGchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXBnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1vZyl7aWYobnVsbD09PW5nKXRocm93IEVycm9yKHkoMzA4KSk7b2c9YjtuZy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIG9nPW9nLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB3Zz0hMTtmdW5jdGlvbiB4ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB5ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB6ZyhhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1mdW5jdGlvbiBBZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIEJnKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBDZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3dnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG49YS5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe249bi51cGRhdGVRdWV1ZTt2YXIgQT1uLmxhc3RCYXNlVXBkYXRlO0EhPT1nJiYobnVsbD09PUE/bi5maXJzdEJhc2VVcGRhdGU9bDpBLm5leHQ9bCxuLmxhc3RCYXNlVXBkYXRlPWspfX1pZihudWxsIT09Zil7QT1lLmJhc2VTdGF0ZTtnPTA7bj1sPWs9bnVsbDtkb3toPWYubGFuZTt2YXIgcD1mLmV2ZW50VGltZTtpZigoZCZoKT09PWgpe251bGwhPT1uJiYobj1uLm5leHQ9e2V2ZW50VGltZTpwLGxhbmU6MCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBDPWEseD1mO2g9YjtwPWM7c3dpdGNoKHgudGFnKXtjYXNlIDE6Qz14LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEMpe0E9Qy5jYWxsKHAsQSxoKTticmVhayBhfUE9QzticmVhayBhO2Nhc2UgMzpDLmZsYWdzPUMuZmxhZ3MmLTQwOTd8NjQ7Y2FzZSAwOkM9eC5wYXlsb2FkO2g9XCJmdW5jdGlvblwiPT09dHlwZW9mIEM/Qy5jYWxsKHAsQSxoKTpDO2lmKG51bGw9PT1ofHx2b2lkIDA9PT1oKWJyZWFrIGE7QT1tKHt9LEEsaCk7YnJlYWsgYTtjYXNlIDI6d2c9ITB9fW51bGwhPT1mLmNhbGxiYWNrJiYoYS5mbGFnc3w9MzIsaD1lLmVmZmVjdHMsbnVsbD09PWg/ZS5lZmZlY3RzPVtmXTpoLnB1c2goZikpfWVsc2UgcD17ZXZlbnRUaW1lOnAsbGFuZTpoLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW4/KGw9bj1wLGs9QSk6bj1uLm5leHQ9cCxnfD1oO2Y9Zi5uZXh0O2lmKG51bGw9PT1cbmYpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2UgZj1oLm5leHQsaC5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT1oLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09biYmKGs9QSk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bjtEZ3w9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPUF9fWZ1bmN0aW9uIEVnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcih5KDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIEZnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gR2coYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm0oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEtnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1piKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9SGcoKSxkPUlnKGEpLGU9emcoYyxkKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1cbmIpO0FnKGEsZSk7SmcoYSxkLGMpfX07ZnVuY3Rpb24gTGcoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSmUoYyxkKXx8IUplKGUsZik6ITB9XG5mdW5jdGlvbiBNZyhhLGIsYyl7dmFyIGQ9ITEsZT1DZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj12ZyhmKTooZT1GZihiKT9EZjpNLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9FZihhLGUpOkNmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9S2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBPZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUZnO3hnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9dmcoZik6KGY9RmYoYik/RGY6TS5jdXJyZW50LGUuY29udGV4dD1FZihhLGYpKTtDZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoR2coYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksQ2coYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NCl9dmFyIFBnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBRZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHkoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IoeSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RmcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IoeSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IoeSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFJnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHkoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7fVxuZnVuY3Rpb24gU2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5mbGFncz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1UZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFncz0yLFxuYyk6ZDtiLmZsYWdzPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1VZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1RZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VmcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG5XZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WGcoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBBKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1VZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYz1WZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1RZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgdGE6cmV0dXJuIGI9V2coYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKFBnKGIpfHxMYShiKSlyZXR1cm4gYj1YZyhiLFxuYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXVhP24oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSB0YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihQZyhjKXx8TGEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bihhLGIsYyxkLG51bGwpO1JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxcbm51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT11YT9uKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSB0YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihQZyhkKXx8TGEoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbihiLGEsZCxlLG51bGwpO1JnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsdT1nLHo9Zz0wLHE9bnVsbDtudWxsIT09dSYmejxoLmxlbmd0aDt6Kyspe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIG49cChlLHUsaFt6XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT1cbm4uYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKG4sZyx6KTtudWxsPT09dD9sPW46dC5zaWJsaW5nPW47dD1uO3U9cX1pZih6PT09aC5sZW5ndGgpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoO3o8aC5sZW5ndGg7eisrKXU9QShlLGhbel0sayksbnVsbCE9PXUmJihnPWYodSxnLHopLG51bGw9PT10P2w9dTp0LnNpYmxpbmc9dSx0PXUpO3JldHVybiBsfWZvcih1PWQoZSx1KTt6PGgubGVuZ3RoO3orKylxPUModSxlLHosaFt6XSxrKSxudWxsIT09cSYmKGEmJm51bGwhPT1xLmFsdGVybmF0ZSYmdS5kZWxldGUobnVsbD09PXEua2V5P3o6cS5rZXkpLGc9ZihxLGcseiksbnVsbD09PXQ/bD1xOnQuc2libGluZz1xLHQ9cSk7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiB3KGUsZyxoLGspe3ZhciBsPUxhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHkoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09XG5oKXRocm93IEVycm9yKHkoMTUxKSk7Zm9yKHZhciB0PWw9bnVsbCx1PWcsej1nPTAscT1udWxsLG49aC5uZXh0KCk7bnVsbCE9PXUmJiFuLmRvbmU7eisrLG49aC5uZXh0KCkpe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIHc9cChlLHUsbi52YWx1ZSxrKTtpZihudWxsPT09dyl7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHUpO2c9Zih3LGcseik7bnVsbD09PXQ/bD13OnQuc2libGluZz13O3Q9dzt1PXF9aWYobi5kb25lKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDshbi5kb25lO3orKyxuPWgubmV4dCgpKW49QShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO3JldHVybiBsfWZvcih1PWQoZSx1KTshbi5kb25lO3orKyxuPWgubmV4dCgpKW49Qyh1LGUseixuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZcbnUuZGVsZXRlKG51bGw9PT1uLmtleT96Om4ua2V5KSxnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXVhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHNhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09dWEpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtcbmQ9ZShrLGYucHJvcHMpO2QucmVmPVFnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09dWE/KGQ9WGcoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVZnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVFnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB0YTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1cbldnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVVnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKFBnKGYpKXJldHVybiB4KGEsZCxmLGgpO2lmKExhKGYpKXJldHVybiB3KGEsZCxmLGgpO2wmJlJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDIyOmNhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGhyb3cgRXJyb3IoeSgxNTIsUmEoYS50eXBlKXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWWc9U2coITApLFpnPVNnKCExKSwkZz17fSxhaD1CZigkZyksYmg9QmYoJGcpLGNoPUJmKCRnKTtcbmZ1bmN0aW9uIGRoKGEpe2lmKGE9PT0kZyl0aHJvdyBFcnJvcih5KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGVoKGEsYil7SShjaCxiKTtJKGJoLGEpO0koYWgsJGcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bWIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPW1iKGIsYSl9SChhaCk7SShhaCxiKX1mdW5jdGlvbiBmaCgpe0goYWgpO0goYmgpO0goY2gpfWZ1bmN0aW9uIGdoKGEpe2RoKGNoLmN1cnJlbnQpO3ZhciBiPWRoKGFoLmN1cnJlbnQpO3ZhciBjPW1iKGIsYS50eXBlKTtiIT09YyYmKEkoYmgsYSksSShhaCxjKSl9ZnVuY3Rpb24gaGgoYSl7YmguY3VycmVudD09PWEmJihIKGFoKSxIKGJoKSl9dmFyIFA9QmYoMCk7XG5mdW5jdGlvbiBpaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBqaD1udWxsLGtoPW51bGwsbGg9ITE7XG5mdW5jdGlvbiBtaChhLGIpe3ZhciBjPW5oKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmZsYWdzPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBvaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcGgoYSl7aWYobGgpe3ZhciBiPWtoO2lmKGIpe3ZhciBjPWI7aWYoIW9oKGEsYikpe2I9cmYoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFvaChhLGIpKXthLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MjtsaD0hMTtqaD1hO3JldHVybn1taChqaCxjKX1qaD1hO2toPXJmKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MixsaD0hMSxqaD1hfX1mdW5jdGlvbiBxaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47amg9YX1cbmZ1bmN0aW9uIHJoKGEpe2lmKGEhPT1qaClyZXR1cm4hMTtpZighbGgpcmV0dXJuIHFoKGEpLGxoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhbmYoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWtoO2I7KW1oKGEsYiksYj1yZihiLm5leHRTaWJsaW5nKTtxaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHkoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIvJFwiPT09Yyl7aWYoMD09PWIpe2toPXJmKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2VcIiRcIiE9PWMmJlwiJCFcIiE9PWMmJlwiJD9cIiE9PWN8fGIrK31hPWEubmV4dFNpYmxpbmd9a2g9bnVsbH19ZWxzZSBraD1qaD9yZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIHNoKCl7a2g9amg9bnVsbDtsaD0hMX12YXIgdGg9W107ZnVuY3Rpb24gdWgoKXtmb3IodmFyIGE9MDthPHRoLmxlbmd0aDthKyspdGhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDt0aC5sZW5ndGg9MH12YXIgdmg9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcix3aD1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyx4aD0wLFI9bnVsbCxTPW51bGwsVD1udWxsLHloPSExLHpoPSExO2Z1bmN0aW9uIEFoKCl7dGhyb3cgRXJyb3IoeSgzMjEpKTt9ZnVuY3Rpb24gQmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIENoKGEsYixjLGQsZSxmKXt4aD1mO1I9YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO3ZoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/RGg6RWg7YT1jKGQsZSk7aWYoemgpe2Y9MDtkb3t6aD0hMTtpZighKDI1PmYpKXRocm93IEVycm9yKHkoMzAxKSk7Zis9MTtUPVM9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7dmguY3VycmVudD1GaDthPWMoZCxlKX13aGlsZSh6aCl9dmguY3VycmVudD1HaDtiPW51bGwhPT1TJiZudWxsIT09Uy5uZXh0O3hoPTA7VD1TPVI9bnVsbDt5aD0hMTtpZihiKXRocm93IEVycm9yKHkoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gSGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWE7cmV0dXJuIFR9XG5mdW5jdGlvbiBJaCgpe2lmKG51bGw9PT1TKXt2YXIgYT1SLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1TLm5leHQ7dmFyIGI9bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlOlQubmV4dDtpZihudWxsIT09YilUPWIsUz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeSgzMTApKTtTPWE7YT17bWVtb2l6ZWRTdGF0ZTpTLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOlMuYmFzZVN0YXRlLGJhc2VRdWV1ZTpTLmJhc2VRdWV1ZSxxdWV1ZTpTLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hfXJldHVybiBUfWZ1bmN0aW9uIEpoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gS2goYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1TLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsubGFuZTtpZigoeGgmbCk9PT1sKW51bGwhPT1oJiYoaD1oLm5leHQ9e2xhbmU6MCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2Vsc2V7dmFyIG49e2xhbmU6bCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLFxuZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW4sZj1kKTpoPWgubmV4dD1uO1IubGFuZXN8PWw7RGd8PWx9az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7SGUoZCxiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIExoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtIZShmLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24gTWgoYSxiLGMpe3ZhciBkPWIuX2dldFZlcnNpb247ZD1kKGIuX3NvdXJjZSk7dmFyIGU9Yi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeTtpZihudWxsIT09ZSlhPWU9PT1kO2Vsc2UgaWYoYT1hLm11dGFibGVSZWFkTGFuZXMsYT0oeGgmYSk9PT1hKWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9ZCx0aC5wdXNoKGIpO2lmKGEpcmV0dXJuIGMoYi5fc291cmNlKTt0aC5wdXNoKGIpO3Rocm93IEVycm9yKHkoMzUwKSk7fVxuZnVuY3Rpb24gTmgoYSxiLGMsZCl7dmFyIGU9VTtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih5KDM0OSkpO3ZhciBmPWIuX2dldFZlcnNpb24sZz1mKGIuX3NvdXJjZSksaD12aC5jdXJyZW50LGs9aC51c2VTdGF0ZShmdW5jdGlvbigpe3JldHVybiBNaChlLGIsYyl9KSxsPWtbMV0sbj1rWzBdO2s9VDt2YXIgQT1hLm1lbW9pemVkU3RhdGUscD1BLnJlZnMsQz1wLmdldFNuYXBzaG90LHg9QS5zb3VyY2U7QT1BLnN1YnNjcmliZTt2YXIgdz1SO2EubWVtb2l6ZWRTdGF0ZT17cmVmczpwLHNvdXJjZTpiLHN1YnNjcmliZTpkfTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3AuZ2V0U25hcHNob3Q9YztwLnNldFNuYXBzaG90PWw7dmFyIGE9ZihiLl9zb3VyY2UpO2lmKCFIZShnLGEpKXthPWMoYi5fc291cmNlKTtIZShuLGEpfHwobChhKSxhPUlnKHcpLGUubXV0YWJsZVJlYWRMYW5lc3w9YSZlLnBlbmRpbmdMYW5lcyk7YT1lLm11dGFibGVSZWFkTGFuZXM7ZS5lbnRhbmdsZWRMYW5lc3w9YTtmb3IodmFyIGQ9XG5lLmVudGFuZ2xlbWVudHMsaD1hOzA8aDspe3ZhciBrPTMxLVZjKGgpLHY9MTw8aztkW2tdfD1hO2gmPX52fX19LFtjLGIsZF0pO2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIGQoYi5fc291cmNlLGZ1bmN0aW9uKCl7dmFyIGE9cC5nZXRTbmFwc2hvdCxjPXAuc2V0U25hcHNob3Q7dHJ5e2MoYShiLl9zb3VyY2UpKTt2YXIgZD1JZyh3KTtlLm11dGFibGVSZWFkTGFuZXN8PWQmZS5wZW5kaW5nTGFuZXN9Y2F0Y2gocSl7YyhmdW5jdGlvbigpe3Rocm93IHE7fSl9fSl9LFtiLGRdKTtIZShDLGMpJiZIZSh4LGIpJiZIZShBLGQpfHwoYT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTpufSxhLmRpc3BhdGNoPWw9T2guYmluZChudWxsLFIsYSksay5xdWV1ZT1hLGsuYmFzZVF1ZXVlPW51bGwsbj1NaChlLGIsYyksay5tZW1vaXplZFN0YXRlPWsuYmFzZVN0YXRlPW4pO3JldHVybiBufVxuZnVuY3Rpb24gUGgoYSxiLGMpe3ZhciBkPUloKCk7cmV0dXJuIE5oKGQsYSxiLGMpfWZ1bmN0aW9uIFFoKGEpe3ZhciBiPUhoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gUmgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ui51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxSLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIFNoKGEpe3ZhciBiPUhoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9ZnVuY3Rpb24gVGgoKXtyZXR1cm4gSWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIFVoKGEsYixjLGQpe3ZhciBlPUhoKCk7Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIFZoKGEsYixjLGQpe3ZhciBlPUloKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PVMpe3ZhciBnPVMubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmQmgoZCxnLmRlcHMpKXtSaChiLGMsZixkKTtyZXR1cm59fVIuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLGYsZCl9ZnVuY3Rpb24gV2goYSxiKXtyZXR1cm4gVWgoNTE2LDQsYSxiKX1mdW5jdGlvbiBYaChhLGIpe3JldHVybiBWaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFZoKDQsMixhLGIpfWZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19XG5mdW5jdGlvbiAkaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFZoKDQsMixaaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBhaSgpe31mdW5jdGlvbiBiaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBjaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGRpKGEsYil7dmFyIGM9ZWcoKTtnZyg5OD5jPzk4OmMsZnVuY3Rpb24oKXthKCEwKX0pO2dnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBjPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXthKCExKSxiKCl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWN9fSl9XG5mdW5jdGlvbiBPaChhLGIsYyl7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9e2xhbmU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIucGVuZGluZztudWxsPT09Zz9mLm5leHQ9ZjooZi5uZXh0PWcubmV4dCxnLm5leHQ9Zik7Yi5wZW5kaW5nPWY7Zz1hLmFsdGVybmF0ZTtpZihhPT09Unx8bnVsbCE9PWcmJmc9PT1SKXpoPXloPSEwO2Vsc2V7aWYoMD09PWEubGFuZXMmJihudWxsPT09Z3x8MD09PWcubGFuZXMpJiYoZz1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWcpKXRyeXt2YXIgaD1iLmxhc3RSZW5kZXJlZFN0YXRlLGs9ZyhoLGMpO2YuZWFnZXJSZWR1Y2VyPWc7Zi5lYWdlclN0YXRlPWs7aWYoSGUoayxoKSlyZXR1cm59Y2F0Y2gobCl7fWZpbmFsbHl7fUpnKGEsZSxkKX19XG52YXIgR2g9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOkFoLHVzZUNvbnRleHQ6QWgsdXNlRWZmZWN0OkFoLHVzZUltcGVyYXRpdmVIYW5kbGU6QWgsdXNlTGF5b3V0RWZmZWN0OkFoLHVzZU1lbW86QWgsdXNlUmVkdWNlcjpBaCx1c2VSZWY6QWgsdXNlU3RhdGU6QWgsdXNlRGVidWdWYWx1ZTpBaCx1c2VEZWZlcnJlZFZhbHVlOkFoLHVzZVRyYW5zaXRpb246QWgsdXNlTXV0YWJsZVNvdXJjZTpBaCx1c2VPcGFxdWVJZGVudGlmaWVyOkFoLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRGg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7SGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6V2gsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFVoKDQsMixaaC5iaW5kKG51bGwsXG5iLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVWgoNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1IaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpTaCx1c2VTdGF0ZTpRaCx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9UWgoYSksYz1iWzBdLGQ9YlsxXTtXaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247XG53aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9UWgoITEpLGI9YVswXTthPWRpLmJpbmQobnVsbCxhWzFdKTtTaChhKTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtkLm1lbW9pemVkU3RhdGU9e3JlZnM6e2dldFNuYXBzaG90OmIsc2V0U25hcHNob3Q6bnVsbH0sc291cmNlOmEsc3Vic2NyaWJlOmN9O3JldHVybiBOaChkLGEsYixjKX0sdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe2lmKGxoKXt2YXIgYT0hMSxiPXVmKGZ1bmN0aW9uKCl7YXx8KGE9ITAsYyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSkpO3Rocm93IEVycm9yKHkoMzU1KSk7fSksYz1RaChiKVsxXTswPT09KFIubW9kZSYyKSYmKFIuZmxhZ3N8PTUxNixSaCg1LGZ1bmN0aW9uKCl7YyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSl9LFxudm9pZCAwLG51bGwpKTtyZXR1cm4gYn1iPVwicjpcIisodGYrKykudG9TdHJpbmcoMzYpO1FoKGIpO3JldHVybiBifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEVoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6S2gsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUtoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9S2goSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxGaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOkxoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBMaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1MaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUxoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBMaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sZWk9cmEuUmVhY3RDdXJyZW50T3duZXIsdWc9ITE7ZnVuY3Rpb24gZmkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9aZyhiLG51bGwsYyxkKTpZZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBnaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dGcoYixlKTtkPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhamkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsa2koYSxiLGcsZCxlLGYpO2E9VmcoYy50eXBlLG51bGwsZCxiLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKDA9PT0oZSZmKSYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpKZSxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBoaShhLGIsZik7Yi5mbGFnc3w9MTthPVRnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24ga2koYSxiLGMsZCxlLGYpe2lmKG51bGwhPT1hJiZKZShhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYpaWYodWc9ITEsMCE9PShmJmUpKTAhPT0oYS5mbGFncyYxNjM4NCkmJih1Zz0hMCk7ZWxzZSByZXR1cm4gYi5sYW5lcz1hLmxhbmVzLGhpKGEsYixmKTtyZXR1cm4gbGkoYSxiLGMsZCxmKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQuY2hpbGRyZW4sZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtpZihcImhpZGRlblwiPT09ZC5tb2RlfHxcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixjKTtlbHNlIGlmKDAhPT0oYyYxMDczNzQxODI0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLG51bGwhPT1mP2YuYmFzZUxhbmVzOmMpO2Vsc2UgcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YX0sbmkoYixhKSxudWxsO2Vsc2UgbnVsbCE9PWY/KGQ9Zi5iYXNlTGFuZXN8YyxiLm1lbW9pemVkU3RhdGU9bnVsbCk6ZD1jLG5pKGIsZCk7ZmkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBvaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD0xMjh9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlKXt2YXIgZj1GZihjKT9EZjpNLmN1cnJlbnQ7Zj1FZihiLGYpO3RnKGIsZSk7Yz1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUpe2lmKEZmKGMpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7dGcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksTWcoYixjLGQpLE9nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXZnKGwpOihsPUZmKGMpP0RmOk0uY3VycmVudCxsPUVmKGIsbCkpO3ZhciBuPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZOZyhiLGcsZCxsKTt3Zz0hMTt2YXIgcD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHxwIT09a3x8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG4mJihHZyhiLGMsbixkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9d2d8fExnKGIsYyxoLGQscCxrLGwpKT8oQXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO3lnKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6bGcoYi50eXBlLGgpO2cucHJvcHM9bDtBPWIucGVuZGluZ1Byb3BzO3A9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9dmcoayk6KGs9RmYoYyk/RGY6TS5jdXJyZW50LGs9RWYoYixrKSk7dmFyIEM9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG49XCJmdW5jdGlvblwiPT09dHlwZW9mIEN8fFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1BfHxwIT09aykmJk5nKGIsZyxkLGspO3dnPSExO3A9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7aCE9PUF8fHAhPT14fHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyYmKEdnKGIsYyxDLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobD13Z3x8TGcoYixjLGwsZCxwLHgsaykpPyhufHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fFxuaD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxkPSExKX1yZXR1cm4gcWkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gcWkoYSxiLGMsZCxlLGYpe29pKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJktmKGIsYywhMSksaGkoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7ZWkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5mbGFnc3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1ZZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVlnKGIsbnVsbCxoLGYpKTpmaShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZLZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHJpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/SGYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmSGYoYSxiLmNvbnRleHQsITEpO2VoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBzaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5TGFuZTowfTtcbmZ1bmN0aW9uIHRpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPVAuY3VycmVudCxmPSExLGc7KGc9MCE9PShiLmZsYWdzJjY0KSl8fChnPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7Zz8oZj0hMCxiLmZsYWdzJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1kLmZhbGxiYWNrfHwhMD09PWQudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChlfD0xKTtJKFAsZSYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZC5mYWxsYmFjayYmcGgoYik7YT1kLmNoaWxkcmVuO2U9ZC5mYWxsYmFjaztpZihmKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LGIubWVtb2l6ZWRTdGF0ZT1zaSxhO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgZC51bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LFxuYi5tZW1vaXplZFN0YXRlPXNpLGIubGFuZXM9MzM1NTQ0MzIsYTtjPXZpKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmF9LGIubW9kZSxjLG51bGwpO2MucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9Y31pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXtpZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9OntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWlmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306XG57YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1hLm1vZGUsZj1hLmNoaWxkO2I9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpifTswPT09KGUmMikmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1iKTpmPXZpKGIsZSwwLG51bGwpO2M9WGcoYyxlLGQsbnVsbCk7Zi5yZXR1cm49YTtjLnJldHVybj1hO2Yuc2libGluZz1jO2EuY2hpbGQ9ZjtyZXR1cm4gY31cbmZ1bmN0aW9uIHhpKGEsYixjLGQpe3ZhciBlPWEuY2hpbGQ7YT1lLnNpYmxpbmc7Yz1UZyhlLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmN9KTswPT09KGIubW9kZSYyKSYmKGMubGFuZXM9ZCk7Yy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGEubmV4dEVmZmVjdD1udWxsLGEuZmxhZ3M9OCxiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1hKTtyZXR1cm4gYi5jaGlsZD1jfVxuZnVuY3Rpb24gd2koYSxiLGMsZCxlKXt2YXIgZj1iLm1vZGUsZz1hLmNoaWxkO2E9Zy5zaWJsaW5nO3ZhciBoPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Y307MD09PShmJjIpJiZiLmNoaWxkIT09Zz8oYz1iLmNoaWxkLGMuY2hpbGRMYW5lcz0wLGMucGVuZGluZ1Byb3BzPWgsZz1jLmxhc3RFZmZlY3QsbnVsbCE9PWc/KGIuZmlyc3RFZmZlY3Q9Yy5maXJzdEVmZmVjdCxiLmxhc3RFZmZlY3Q9ZyxnLm5leHRFZmZlY3Q9bnVsbCk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbCk6Yz1UZyhnLGgpO251bGwhPT1hP2Q9VGcoYSxkKTooZD1YZyhkLGYsZSxudWxsKSxkLmZsYWdzfD0yKTtkLnJldHVybj1iO2MucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yi5jaGlsZD1jO3JldHVybiBkfWZ1bmN0aW9uIHlpKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO3NnKGEucmV0dXJuLGIpfVxuZnVuY3Rpb24gemkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIEFpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7ZmkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1QLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnlpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXlpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoUCxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt6aShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1paChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9emkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOnppKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBoaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7RGd8PWIubGFuZXM7aWYoMCE9PShjJmIuY2hpbGRMYW5lcykpe2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih5KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1UZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9VGcoYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1yZXR1cm4gbnVsbH12YXIgQmksQ2ksRGksRWk7XG5CaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Q2k9ZnVuY3Rpb24oKXt9O1xuRGk9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO2RoKGFoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9WWEoYSxlKTtkPVlhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGUpO2Q9ZWIoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplPW0oe30sZSx7dmFsdWU6dm9pZCAwfSk7ZD1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZT1nYihhLGUpO2Q9Z2IoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGUub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1qZil9dmIoYyxkKTt2YXIgZztjPW51bGw7Zm9yKGwgaW4gZSlpZighZC5oYXNPd25Qcm9wZXJ0eShsKSYmZS5oYXNPd25Qcm9wZXJ0eShsKSYmbnVsbCE9ZVtsXSlpZihcInN0eWxlXCI9PT1cbmwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiYoY3x8KGM9e30pLGNbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWwmJlwiY2hpbGRyZW5cIiE9PWwmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2gobCxudWxsKSk7Zm9yKGwgaW4gZCl7dmFyIGs9ZFtsXTtoPW51bGwhPWU/ZVtsXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShsKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1sKWlmKGgpe2ZvcihnIGluIGgpIWguaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChjfHwoYz17fSksY1tnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmhbZ10hPT1rW2ddJiYoY3x8XG4oYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkcoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTpcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09R2E/ay50b1N0cmluZygpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixcbmMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtFaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtmdW5jdGlvbiBGaShhLGIpe2lmKCFsaClzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gR2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7ZD1iLnN0YXRlTm9kZTtkLnBlbmRpbmdDb250ZXh0JiYoZC5jb250ZXh0PWQucGVuZGluZ0NvbnRleHQsZC5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpcmgoYik/Yi5mbGFnc3w9NDpkLmh5ZHJhdGV8fChiLmZsYWdzfD0yNTYpO0NpKGIpO3JldHVybiBudWxsO2Nhc2UgNTpoaChiKTt2YXIgZT1kaChjaC5jdXJyZW50KTtjPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGkoYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09XG5iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO3JldHVybiBudWxsfWE9ZGgoYWguY3VycmVudCk7aWYocmgoYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2Rbd2ZdPWI7ZFt4Zl09Zjtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixkKTtHKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPFhlLmxlbmd0aDthKyspRyhYZVthXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZCk7RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoZCxmKSxHKFwiaW52YWxpZFwiLGQpfXZiKGMsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWYuaGFzT3duUHJvcGVydHkoZykmJihlPWZbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGU/ZC50ZXh0Q29udGVudCE9PWUmJihhPVtcImNoaWxkcmVuXCIsZV0pOlwibnVtYmVyXCI9PT10eXBlb2YgZSYmZC50ZXh0Q29udGVudCE9PVwiXCIrZSYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2VdKTpjYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9ZSYmXCJvblNjcm9sbFwiPT09ZyYmRyhcInNjcm9sbFwiLGQpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoZCk7Y2IoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShkKTtqYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGQub25jbGljaz1cbmpmKX1kPWE7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O2E9PT1rYi5odG1sJiYoYT1sYihjKSk7YT09PWtiLmh0bWw/XCJzY3JpcHRcIj09PWM/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChjLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW3dmXT1iO2FbeGZdPWQ7QmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9d2IoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixhKTtHKFwiY2xvc2VcIixhKTtcbmU9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxYZS5sZW5ndGg7ZSsrKUcoWGVbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsYSk7RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1cbmdiKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztkZWZhdWx0OmU9ZH12YihjLGUpO3ZhciBoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/dGIoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJm9iKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1jfHxcIlwiIT09aykmJnBiKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZwYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGNhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkcoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZxYShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2NiKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShhKTtqYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrU2EoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9mYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmZmIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1qZil9bWYoYyxkKSYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKUVpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO1xuYz1kaChjaC5jdXJyZW50KTtkaChhaC5jdXJyZW50KTtyaChiKT8oZD1iLnN0YXRlTm9kZSxjPWIubWVtb2l6ZWRQcm9wcyxkW3dmXT1iLGQubm9kZVZhbHVlIT09YyYmKGIuZmxhZ3N8PTQpKTooZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbd2ZdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7Yz0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJnJoKGIpOmM9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZihkJiYhYyYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KFAuY3VycmVudCYxKSkwPT09ViYmKFY9Myk7ZWxzZXtpZigwPT09Vnx8Mz09PVYpVj1cbjQ7bnVsbD09PVV8fDA9PT0oRGcmMTM0MjE3NzI3KSYmMD09PShIaSYxMzQyMTc3MjcpfHxJaShVLFcpfWlmKGR8fGMpYi5mbGFnc3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksQ2koYiksbnVsbD09PWEmJmNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYiksbnVsbDtjYXNlIDE3OnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAxOTpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Y9MCE9PShiLmZsYWdzJjY0KTtnPWQucmVuZGVyaW5nO2lmKG51bGw9PT1nKWlmKGYpRmkoZCwhMSk7ZWxzZXtpZigwIT09Vnx8bnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9aWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTY0O0ZpKGQsITEpO2Y9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKGIudXBkYXRlUXVldWU9ZixiLmZsYWdzfD00KTtcbm51bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7ZD1jO2ZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KWY9YyxhPWQsZi5mbGFncyY9MixmLm5leHRFZmZlY3Q9bnVsbCxmLmZpcnN0RWZmZWN0PW51bGwsZi5sYXN0RWZmZWN0PW51bGwsZz1mLmFsdGVybmF0ZSxudWxsPT09Zz8oZi5jaGlsZExhbmVzPTAsZi5sYW5lcz1hLGYuY2hpbGQ9bnVsbCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLFxuZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztJKFAsUC5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1hLnNpYmxpbmd9bnVsbCE9PWQudGFpbCYmTygpPkppJiYoYi5mbGFnc3w9NjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKX1lbHNle2lmKCFmKWlmKGE9aWgoZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTY0LGY9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEZpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFsaClyZXR1cm4gYj1iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKk8oKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5KaSYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD1cbjY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMik7ZC5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGQubGFzdD1nKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9TygpLGMuc2libGluZz1udWxsLGI9UC5jdXJyZW50LEkoUCxmP2ImMXwyOmImMSksYyk6bnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUhPT0obnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSkmJlwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIiE9PWQubW9kZSYmKGIuZmxhZ3N8PTQpLG51bGx9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBMaShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpGZihhLnR5cGUpJiZHZigpO3ZhciBiPWEuZmxhZ3M7cmV0dXJuIGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7Yj1hLmZsYWdzO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IoeSgyODUpKTthLmZsYWdzPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBoaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoUCksYj1hLmZsYWdzLGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChQKSxudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGEpLG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBNaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1RYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZX19ZnVuY3Rpb24gTmkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE9pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFBpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1FpfHwoUWk9ITAsUmk9ZCk7TmkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBTaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7TmkoYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVRpP1RpPW5ldyBTZXQoW3RoaXNdKTpUaS5hZGQodGhpcyksTmkoYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9dmFyIFVpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O1xuZnVuY3Rpb24gVmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7V2koYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfWZ1bmN0aW9uIFhpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmZsYWdzJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6bGcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmIuZmxhZ3MmMjU2JiZxZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTtyZXR1cm47Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBZaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97aWYoMz09PShhLnRhZyYzKSl7dmFyIGQ9YS5jcmVhdGU7YS5kZXN0cm95PWQoKX1hPWEubmV4dH13aGlsZShhIT09Yil9Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97dmFyIGU9YTtkPWUubmV4dDtlPWUudGFnOzAhPT0oZSY0KSYmMCE9PShlJjEpJiYoWmkoYyxhKSwkaShjLGEpKTthPWR9d2hpbGUoYSE9PWIpfXJldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtjLmZsYWdzJjQmJihudWxsPT09Yj9hLmNvbXBvbmVudERpZE1vdW50KCk6KGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6bGcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyksYS5jb21wb25lbnREaWRVcGRhdGUoZCxcbmIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKSkpO2I9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmRWcoYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1FZyhjLGIsYSl9cmV0dXJuO2Nhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmZsYWdzJjQmJm1mKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmQ2MoYykpKSk7XG5yZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpjYXNlIDIzOmNhc2UgMjQ6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gYWooYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZD1kLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnNldFByb3BlcnR5P2Quc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6ZC5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNiKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKCgyMyE9PWMudGFnJiYyNCE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHxjPT09YSkmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09XG5hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gYmooYSxiKXtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtNZi5vbkNvbW1pdEZpYmVyVW5tb3VudChMZixiKX1jYXRjaChmKXt9c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBjPWE9YS5uZXh0O2Rve3ZhciBkPWMsZT1kLmRlc3Ryb3k7ZD1kLnRhZztpZih2b2lkIDAhPT1lKWlmKDAhPT0oZCY0KSlaaShiLGMpO2Vsc2V7ZD1iO3RyeXtlKCl9Y2F0Y2goZil7V2koZCxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWEpfWJyZWFrO2Nhc2UgMTpWaShiKTthPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXthLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxhLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxhLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7V2koYixcbmYpfWJyZWFrO2Nhc2UgNTpWaShiKTticmVhaztjYXNlIDQ6Y2ooYSxiKX19ZnVuY3Rpb24gZGooYSl7YS5hbHRlcm5hdGU9bnVsbDthLmNoaWxkPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnJldHVybj1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBlaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIGZqKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKGVqKGIpKWJyZWFrIGE7Yj1iLnJldHVybn10aHJvdyBFcnJvcih5KDE2MCkpO312YXIgYz1iO2I9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDE2MSkpO31jLmZsYWdzJjE2JiYocGIoYixcIlwiKSxjLmZsYWdzJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8ZWooYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5mbGFncyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PVxuYy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZmxhZ3MmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9naihhLGMsYik6aGooYSxjLGIpfVxuZnVuY3Rpb24gZ2ooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPWpmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspZ2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gaGooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihoaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWhqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGNqKGEsYil7Zm9yKHZhciBjPWIsZD0hMSxlLGY7Oyl7aWYoIWQpe2Q9Yy5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1kKXRocm93IEVycm9yKHkoMTYwKSk7ZT1kLnN0YXRlTm9kZTtzd2l0Y2goZC50YWcpe2Nhc2UgNTpmPSExO2JyZWFrIGE7Y2FzZSAzOmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYTtjYXNlIDQ6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhfWQ9ZC5yZXR1cm59ZD0hMH1pZig1PT09Yy50YWd8fDY9PT1jLnRhZyl7YTpmb3IodmFyIGc9YSxoPWMsaz1oOzspaWYoYmooZyxrKSxudWxsIT09ay5jaGlsZCYmNCE9PWsudGFnKWsuY2hpbGQucmV0dXJuPWssaz1rLmNoaWxkO2Vsc2V7aWYoaz09PWgpYnJlYWsgYTtmb3IoO251bGw9PT1rLnNpYmxpbmc7KXtpZihudWxsPT09ay5yZXR1cm58fGsucmV0dXJuPT09aClicmVhayBhO2s9ay5yZXR1cm59ay5zaWJsaW5nLnJldHVybj1rLnJldHVybjtrPWsuc2libGluZ31mPyhnPWUsaD1jLnN0YXRlTm9kZSxcbjg9PT1nLm5vZGVUeXBlP2cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoKTpnLnJlbW92ZUNoaWxkKGgpKTplLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1jLnRhZyl7aWYobnVsbCE9PWMuY2hpbGQpe2U9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztmPSEwO2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKGJqKGEsYyksbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJuOzQ9PT1jLnRhZyYmKGQ9ITEpfWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gaWooYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOnZhciBjPWIudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG8gMz09PShkLnRhZyYzKSYmKGE9ZC5kZXN0cm95LGQuZGVzdHJveT12b2lkIDAsdm9pZCAwIT09YSYmYSgpKSxkPWQubmV4dDt3aGlsZShkIT09Yyl9cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OmM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7ZD1iLm1lbW9pemVkUHJvcHM7dmFyIGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbeGZdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJiRhKGMsZCk7d2IoYSxlKTtiPXdiKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPVxuMil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP3RiKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/cGIoYyxoKTpxYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6YWIoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGY9ZC52YWx1ZSxudWxsIT1mP2ZiKGMsISFkLm11bHRpcGxlLGYsITEpOmEhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9mYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6ZmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1cbmIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmM9Yi5zdGF0ZU5vZGU7Yy5oeWRyYXRlJiYoYy5oeWRyYXRlPSExLENjKGMuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGwhPT1iLm1lbW9pemVkU3RhdGUmJihqaj1PKCksYWooYi5jaGlsZCwhMCkpO2tqKGIpO3JldHVybjtjYXNlIDE5OmtqKGIpO3JldHVybjtjYXNlIDE3OnJldHVybjtjYXNlIDIzOmNhc2UgMjQ6YWooYixudWxsIT09Yi5tZW1vaXplZFN0YXRlKTtyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9ZnVuY3Rpb24ga2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgVWkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1sai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIG1qKGEsYil7cmV0dXJuIG51bGwhPT1hJiYoYT1hLm1lbW9pemVkU3RhdGUsbnVsbD09PWF8fG51bGwhPT1hLmRlaHlkcmF0ZWQpPyhiPWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YiYmbnVsbD09PWIuZGVoeWRyYXRlZCk6ITF9dmFyIG5qPU1hdGguY2VpbCxvaj1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHBqPXJhLlJlYWN0Q3VycmVudE93bmVyLFg9MCxVPW51bGwsWT1udWxsLFc9MCxxaj0wLHJqPUJmKDApLFY9MCxzaj1udWxsLHRqPTAsRGc9MCxIaT0wLHVqPTAsdmo9bnVsbCxqaj0wLEppPUluZmluaXR5O2Z1bmN0aW9uIHdqKCl7Smk9TygpKzUwMH12YXIgWj1udWxsLFFpPSExLFJpPW51bGwsVGk9bnVsbCx4aj0hMSx5aj1udWxsLHpqPTkwLEFqPVtdLEJqPVtdLENqPW51bGwsRGo9MCxFaj1udWxsLEZqPS0xLEdqPTAsSGo9MCxJaj1udWxsLEpqPSExO2Z1bmN0aW9uIEhnKCl7cmV0dXJuIDAhPT0oWCY0OCk/TygpOi0xIT09Rmo/Rmo6Rmo9TygpfVxuZnVuY3Rpb24gSWcoYSl7YT1hLm1vZGU7aWYoMD09PShhJjIpKXJldHVybiAxO2lmKDA9PT0oYSY0KSlyZXR1cm4gOTk9PT1lZygpPzE6MjswPT09R2omJihHaj10aik7aWYoMCE9PWtnLnRyYW5zaXRpb24pezAhPT1IaiYmKEhqPW51bGwhPT12aj92ai5wZW5kaW5nTGFuZXM6MCk7YT1Hajt2YXIgYj00MTg2MTEyJn5IajtiJj0tYjswPT09YiYmKGE9NDE4NjExMiZ+YSxiPWEmLWEsMD09PWImJihiPTgxOTIpKTtyZXR1cm4gYn1hPWVnKCk7MCE9PShYJjQpJiY5OD09PWE/YT1YYygxMixHaik6KGE9U2MoYSksYT1YYyhhLEdqKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZyhhLGIsYyl7aWYoNTA8RGopdGhyb3cgRGo9MCxFaj1udWxsLEVycm9yKHkoMTg1KSk7YT1LaihhLGIpO2lmKG51bGw9PT1hKXJldHVybiBudWxsOyRjKGEsYixjKTthPT09VSYmKEhpfD1iLDQ9PT1WJiZJaShhLFcpKTt2YXIgZD1lZygpOzE9PT1iPzAhPT0oWCY4KSYmMD09PShYJjQ4KT9MaihhKTooTWooYSxjKSwwPT09WCYmKHdqKCksaWcoKSkpOigwPT09KFgmNCl8fDk4IT09ZCYmOTkhPT1kfHwobnVsbD09PUNqP0NqPW5ldyBTZXQoW2FdKTpDai5hZGQoYSkpLE1qKGEsYykpO3ZqPWF9ZnVuY3Rpb24gS2ooYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfVxuZnVuY3Rpb24gTWooYSxiKXtmb3IodmFyIGM9YS5jYWxsYmFja05vZGUsZD1hLnN1c3BlbmRlZExhbmVzLGU9YS5waW5nZWRMYW5lcyxmPWEuZXhwaXJhdGlvblRpbWVzLGc9YS5wZW5kaW5nTGFuZXM7MDxnOyl7dmFyIGg9MzEtVmMoZyksaz0xPDxoLGw9ZltoXTtpZigtMT09PWwpe2lmKDA9PT0oayZkKXx8MCE9PShrJmUpKXtsPWI7UmMoayk7dmFyIG49RjtmW2hdPTEwPD1uP2wrMjUwOjY8PW4/bCs1RTM6LTF9fWVsc2UgbDw9YiYmKGEuZXhwaXJlZExhbmVzfD1rKTtnJj1+a31kPVVjKGEsYT09PVU/VzowKTtiPUY7aWYoMD09PWQpbnVsbCE9PWMmJihjIT09WmYmJlBmKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTApO2Vsc2V7aWYobnVsbCE9PWMpe2lmKGEuY2FsbGJhY2tQcmlvcml0eT09PWIpcmV0dXJuO2MhPT1aZiYmUGYoYyl9MTU9PT1iPyhjPUxqLmJpbmQobnVsbCxhKSxudWxsPT09YWc/KGFnPVtjXSxiZz1PZihVZixqZykpOmFnLnB1c2goYyksXG5jPVpmKToxND09PWI/Yz1oZyg5OSxMai5iaW5kKG51bGwsYSkpOihjPVRjKGIpLGM9aGcoYyxOai5iaW5kKG51bGwsYSkpKTthLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIE5qKGEpe0ZqPS0xO0hqPUdqPTA7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBiPWEuY2FsbGJhY2tOb2RlO2lmKE9qKCkmJmEuY2FsbGJhY2tOb2RlIT09YilyZXR1cm4gbnVsbDt2YXIgYz1VYyhhLGE9PT1VP1c6MCk7aWYoMD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9Yzt2YXIgZT1YO1h8PTE2O3ZhciBmPVBqKCk7aWYoVSE9PWF8fFchPT1kKXdqKCksUWooYSxkKTtkbyB0cnl7UmooKTticmVha31jYXRjaChoKXtTaihhLGgpfXdoaWxlKDEpO3FnKCk7b2ouY3VycmVudD1mO1g9ZTtudWxsIT09WT9kPTA6KFU9bnVsbCxXPTAsZD1WKTtpZigwIT09KHRqJkhpKSlRaihhLDApO2Vsc2UgaWYoMCE9PWQpezI9PT1kJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGM9V2MoYSksMCE9PWMmJihkPVRqKGEsYykpKTtpZigxPT09ZCl0aHJvdyBiPXNqLFFqKGEsMCksSWkoYSxjKSxNaihhLE8oKSksYjthLmZpbmlzaGVkV29yaz1cbmEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWM7c3dpdGNoKGQpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IoeSgzNDUpKTtjYXNlIDI6VWooYSk7YnJlYWs7Y2FzZSAzOklpKGEsYyk7aWYoKGMmNjI5MTQ1NjApPT09YyYmKGQ9amorNTAwLU8oKSwxMDxkKSl7aWYoMCE9PVVjKGEsMCkpYnJlYWs7ZT1hLnN1c3BlbmRlZExhbmVzO2lmKChlJmMpIT09Yyl7SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxkKTticmVha31VaihhKTticmVhaztjYXNlIDQ6SWkoYSxjKTtpZigoYyY0MTg2MTEyKT09PWMpYnJlYWs7ZD1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxjOyl7dmFyIGc9MzEtVmMoYyk7Zj0xPDxnO2c9ZFtnXTtnPmUmJihlPWcpO2MmPX5mfWM9ZTtjPU8oKS1jO2M9KDEyMD5jPzEyMDo0ODA+Yz80ODA6MTA4MD5jPzEwODA6MTkyMD5jPzE5MjA6M0UzPmM/M0UzOjQzMjA+XG5jPzQzMjA6MTk2MCpuaihjLzE5NjApKS1jO2lmKDEwPGMpe2EudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksYyk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA1OlVqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMjkpKTt9fU1qKGEsTygpKTtyZXR1cm4gYS5jYWxsYmFja05vZGU9PT1iP05qLmJpbmQobnVsbCxhKTpudWxsfWZ1bmN0aW9uIElpKGEsYil7YiY9fnVqO2ImPX5IaTthLnN1c3BlbmRlZExhbmVzfD1iO2EucGluZ2VkTGFuZXMmPX5iO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yjspe3ZhciBjPTMxLVZjKGIpLGQ9MTw8YzthW2NdPS0xO2ImPX5kfX1cbmZ1bmN0aW9uIExqKGEpe2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTtPaigpO2lmKGE9PT1VJiYwIT09KGEuZXhwaXJlZExhbmVzJlcpKXt2YXIgYj1XO3ZhciBjPVRqKGEsYik7MCE9PSh0aiZIaSkmJihiPVVjKGEsYiksYz1UaihhLGIpKX1lbHNlIGI9VWMoYSwwKSxjPVRqKGEsYik7MCE9PWEudGFnJiYyPT09YyYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxiPVdjKGEpLDAhPT1iJiYoYz1UaihhLGIpKSk7aWYoMT09PWMpdGhyb3cgYz1zaixRaihhLDApLElpKGEsYiksTWooYSxPKCkpLGM7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtVaihhKTtNaihhLE8oKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBWaigpe2lmKG51bGwhPT1Dail7dmFyIGE9Q2o7Q2o9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSl7YS5leHBpcmVkTGFuZXN8PTI0JmEucGVuZGluZ0xhbmVzO01qKGEsTygpKX0pfWlnKCl9ZnVuY3Rpb24gV2ooYSxiKXt2YXIgYz1YO1h8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gWGooYSxiKXt2YXIgYz1YO1gmPS0yO1h8PTg7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gbmkoYSxiKXtJKHJqLHFqKTtxanw9Yjt0anw9Yn1mdW5jdGlvbiBLaSgpe3FqPXJqLmN1cnJlbnQ7SChyail9XG5mdW5jdGlvbiBRaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxwZihjKSk7aWYobnVsbCE9PVkpZm9yKGM9WS5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZHZigpO2JyZWFrO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2JyZWFrO2Nhc2UgNTpoaChkKTticmVhaztjYXNlIDQ6ZmgoKTticmVhaztjYXNlIDEzOkgoUCk7YnJlYWs7Y2FzZSAxOTpIKFApO2JyZWFrO2Nhc2UgMTA6cmcoZCk7YnJlYWs7Y2FzZSAyMzpjYXNlIDI0OktpKCl9Yz1jLnJldHVybn1VPWE7WT1UZyhhLmN1cnJlbnQsbnVsbCk7Vz1xaj10aj1iO1Y9MDtzaj1udWxsO3VqPUhpPURnPTB9XG5mdW5jdGlvbiBTaihhLGIpe2Rve3ZhciBjPVk7dHJ5e3FnKCk7dmguY3VycmVudD1HaDtpZih5aCl7Zm9yKHZhciBkPVIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9eWg9ITF9eGg9MDtUPVM9Uj1udWxsO3poPSExO3BqLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtWPTE7c2o9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1XO2guZmxhZ3N8PTIwNDg7aC5maXJzdEVmZmVjdD1oLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rO2lmKDA9PT0oaC5tb2RlJjIpKXt2YXIgbj1oLmFsdGVybmF0ZTtuPyhoLnVwZGF0ZVF1ZXVlPW4udXBkYXRlUXVldWUsaC5tZW1vaXplZFN0YXRlPW4ubWVtb2l6ZWRTdGF0ZSxoLmxhbmVzPW4ubGFuZXMpOlxuKGgudXBkYXRlUXVldWU9bnVsbCxoLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIEE9MCE9PShQLmN1cnJlbnQmMSkscD1nO2Rve3ZhciBDO2lmKEM9MTM9PT1wLnRhZyl7dmFyIHg9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT14KUM9bnVsbCE9PXguZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciB3PXAubWVtb2l6ZWRQcm9wcztDPXZvaWQgMD09PXcuZmFsbGJhY2s/ITE6ITAhPT13LnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOkE/ITE6ITB9fWlmKEMpe3ZhciB6PXAudXBkYXRlUXVldWU7aWYobnVsbD09PXope3ZhciB1PW5ldyBTZXQ7dS5hZGQobCk7cC51cGRhdGVRdWV1ZT11fWVsc2Ugei5hZGQobCk7aWYoMD09PShwLm1vZGUmMikpe3AuZmxhZ3N8PTY0O2guZmxhZ3N8PTE2Mzg0O2guZmxhZ3MmPS0yOTgxO2lmKDE9PT1oLnRhZylpZihudWxsPT09aC5hbHRlcm5hdGUpaC50YWc9MTc7ZWxzZXt2YXIgdD16ZygtMSwxKTt0LnRhZz0yO0FnKGgsdCl9aC5sYW5lc3w9MTticmVhayBhfWs9XG52b2lkIDA7aD1iO3ZhciBxPWYucGluZ0NhY2hlO251bGw9PT1xPyhxPWYucGluZ0NhY2hlPW5ldyBPaSxrPW5ldyBTZXQscS5zZXQobCxrKSk6KGs9cS5nZXQobCksdm9pZCAwPT09ayYmKGs9bmV3IFNldCxxLnNldChsLGspKSk7aWYoIWsuaGFzKGgpKXtrLmFkZChoKTt2YXIgdj1Zai5iaW5kKG51bGwsZixsLGgpO2wudGhlbih2LHYpfXAuZmxhZ3N8PTQwOTY7cC5sYW5lcz1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7az1FcnJvcigoUmEoaC50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiKX01IT09ViYmKFY9Mik7az1NaShrLGgpO3A9XG5nO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOmY9aztwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEo9UGkocCxmLGIpO0JnKHAsSik7YnJlYWsgYTtjYXNlIDE6Zj1rO3ZhciBLPXAudHlwZSxRPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5mbGFncyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgSy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1RJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgUS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhRKSkpKXtwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEw9U2kocCxmLGIpO0JnKHAsTCk7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WmooYyl9Y2F0Y2godmEpe2I9dmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIFBqKCl7dmFyIGE9b2ouY3VycmVudDtvai5jdXJyZW50PUdoO3JldHVybiBudWxsPT09YT9HaDphfWZ1bmN0aW9uIFRqKGEsYil7dmFyIGM9WDtYfD0xNjt2YXIgZD1QaigpO1U9PT1hJiZXPT09Ynx8UWooYSxiKTtkbyB0cnl7YWsoKTticmVha31jYXRjaChlKXtTaihhLGUpfXdoaWxlKDEpO3FnKCk7WD1jO29qLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcih5KDI2MSkpO1U9bnVsbDtXPTA7cmV0dXJuIFZ9ZnVuY3Rpb24gYWsoKXtmb3IoO251bGwhPT1ZOyliayhZKX1mdW5jdGlvbiBSaigpe2Zvcig7bnVsbCE9PVkmJiFRZigpOyliayhZKX1mdW5jdGlvbiBiayhhKXt2YXIgYj1jayhhLmFsdGVybmF0ZSxhLHFqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/WmooYSk6WT1iO3BqLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFpqKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMjA0OCkpe2M9R2koYyxiLHFqKTtpZihudWxsIT09Yyl7WT1jO3JldHVybn1jPWI7aWYoMjQhPT1jLnRhZyYmMjMhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8MCE9PShxaiYxMDczNzQxODI0KXx8MD09PShjLm1vZGUmNCkpe2Zvcih2YXIgZD0wLGU9Yy5jaGlsZDtudWxsIT09ZTspZHw9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZT1lLnNpYmxpbmc7Yy5jaGlsZExhbmVzPWR9bnVsbCE9PWEmJjA9PT0oYS5mbGFncyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxudWxsIT09Yi5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QpLDE8Yi5mbGFncyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iOmEuZmlyc3RFZmZlY3Q9YixhLmxhc3RFZmZlY3Q9YikpfWVsc2V7Yz1MaShiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MjA0NztZPWM7cmV0dXJufW51bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmZsYWdzfD0yMDQ4KX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVYmJihWPTUpfWZ1bmN0aW9uIFVqKGEpe3ZhciBiPWVnKCk7Z2coOTksZGsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZGsoYSxiKXtkbyBPaigpO3doaWxlKG51bGwhPT15aik7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih5KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7dmFyIGQ9Yy5sYW5lc3xjLmNoaWxkTGFuZXMsZT1kLGY9YS5wZW5kaW5nTGFuZXMmfmU7YS5wZW5kaW5nTGFuZXM9ZTthLnN1c3BlbmRlZExhbmVzPTA7YS5waW5nZWRMYW5lcz0wO2EuZXhwaXJlZExhbmVzJj1lO2EubXV0YWJsZVJlYWRMYW5lcyY9ZTthLmVudGFuZ2xlZExhbmVzJj1lO2U9YS5lbnRhbmdsZW1lbnRzO2Zvcih2YXIgZz1hLmV2ZW50VGltZXMsaD1hLmV4cGlyYXRpb25UaW1lczswPGY7KXt2YXIgaz0zMS1WYyhmKSxsPTE8PGs7ZVtrXT0wO2dba109LTE7aFtrXT0tMTtmJj1+bH1udWxsIT09XG5DaiYmMD09PShkJjI0KSYmQ2ouaGFzKGEpJiZDai5kZWxldGUoYSk7YT09PVUmJihZPVU9bnVsbCxXPTApOzE8Yy5mbGFncz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGQ9Yy5maXJzdEVmZmVjdCk6ZD1jOmQ9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZCl7ZT1YO1h8PTMyO3BqLmN1cnJlbnQ9bnVsbDtrZj1mZDtnPU5lKCk7aWYoT2UoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTppZihoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdywobD1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKSkmJjAhPT1sLnJhbmdlQ291bnQpe2g9bC5hbmNob3JOb2RlO2Y9bC5hbmNob3JPZmZzZXQ7az1sLmZvY3VzTm9kZTtsPWwuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaCh2YSl7aD1udWxsO1xuYnJlYWsgYX12YXIgbj0wLEE9LTEscD0tMSxDPTAseD0wLHc9Zyx6PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt3IT09aHx8MCE9PWYmJjMhPT13Lm5vZGVUeXBlfHwoQT1uK2YpO3chPT1rfHwwIT09bCYmMyE9PXcubm9kZVR5cGV8fChwPW4rbCk7Mz09PXcubm9kZVR5cGUmJihuKz13Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT13LmZpcnN0Q2hpbGQpKWJyZWFrO3o9dzt3PXV9Zm9yKDs7KXtpZih3PT09ZylicmVhayBiO3o9PT1oJiYrK0M9PT1mJiYoQT1uKTt6PT09ayYmKyt4PT09bCYmKHA9bik7aWYobnVsbCE9PSh1PXcubmV4dFNpYmxpbmcpKWJyZWFrO3c9ejt6PXcucGFyZW50Tm9kZX13PXV9aD0tMT09PUF8fC0xPT09cD9udWxsOntzdGFydDpBLGVuZDpwfX1lbHNlIGg9bnVsbDtoPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9bnVsbDtsZj17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtJaj1udWxsO0pqPSExO1o9ZDtkbyB0cnl7ZWsoKX1jYXRjaCh2YSl7aWYobnVsbD09PVxuWil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtJaj1udWxsO1o9ZDtkbyB0cnl7Zm9yKGc9YTtudWxsIT09Wjspe3ZhciB0PVouZmxhZ3M7dCYxNiYmcGIoWi5zdGF0ZU5vZGUsXCJcIik7aWYodCYxMjgpe3ZhciBxPVouYWx0ZXJuYXRlO2lmKG51bGwhPT1xKXt2YXIgdj1xLnJlZjtudWxsIT09diYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB2P3YobnVsbCk6di5jdXJyZW50PW51bGwpfX1zd2l0Y2godCYxMDM4KXtjYXNlIDI6ZmooWik7Wi5mbGFncyY9LTM7YnJlYWs7Y2FzZSA2OmZqKFopO1ouZmxhZ3MmPS0zO2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgMTAyNDpaLmZsYWdzJj0tMTAyNTticmVhaztjYXNlIDEwMjg6Wi5mbGFncyY9LTEwMjU7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA0OmlqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgODpoPVo7Y2ooZyxoKTt2YXIgSj1oLmFsdGVybmF0ZTtkaihoKTtudWxsIT09XG5KJiZkaihKKX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO3Y9bGY7cT1OZSgpO3Q9di5mb2N1c2VkRWxlbTtnPXYuc2VsZWN0aW9uUmFuZ2U7aWYocSE9PXQmJnQmJnQub3duZXJEb2N1bWVudCYmTWUodC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0KSl7bnVsbCE9PWcmJk9lKHQpJiYocT1nLnN0YXJ0LHY9Zy5lbmQsdm9pZCAwPT09diYmKHY9cSksXCJzZWxlY3Rpb25TdGFydFwiaW4gdD8odC5zZWxlY3Rpb25TdGFydD1xLHQuc2VsZWN0aW9uRW5kPU1hdGgubWluKHYsdC52YWx1ZS5sZW5ndGgpKToodj0ocT10Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmcS5kZWZhdWx0Vmlld3x8d2luZG93LHYuZ2V0U2VsZWN0aW9uJiYodj12LmdldFNlbGVjdGlvbigpLGg9dC50ZXh0Q29udGVudC5sZW5ndGgsSj1NYXRoLm1pbihnLnN0YXJ0LGgpLGc9dm9pZCAwPT09XG5nLmVuZD9KOk1hdGgubWluKGcuZW5kLGgpLCF2LmV4dGVuZCYmSj5nJiYoaD1nLGc9SixKPWgpLGg9TGUodCxKKSxmPUxlKHQsZyksaCYmZiYmKDEhPT12LnJhbmdlQ291bnR8fHYuYW5jaG9yTm9kZSE9PWgubm9kZXx8di5hbmNob3JPZmZzZXQhPT1oLm9mZnNldHx8di5mb2N1c05vZGUhPT1mLm5vZGV8fHYuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkmJihxPXEuY3JlYXRlUmFuZ2UoKSxxLnNldFN0YXJ0KGgubm9kZSxoLm9mZnNldCksdi5yZW1vdmVBbGxSYW5nZXMoKSxKPmc/KHYuYWRkUmFuZ2UocSksdi5leHRlbmQoZi5ub2RlLGYub2Zmc2V0KSk6KHEuc2V0RW5kKGYubm9kZSxmLm9mZnNldCksdi5hZGRSYW5nZShxKSkpKSkpO3E9W107Zm9yKHY9dDt2PXYucGFyZW50Tm9kZTspMT09PXYubm9kZVR5cGUmJnEucHVzaCh7ZWxlbWVudDp2LGxlZnQ6di5zY3JvbGxMZWZ0LHRvcDp2LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0LmZvY3VzJiZ0LmZvY3VzKCk7Zm9yKHQ9XG4wO3Q8cS5sZW5ndGg7dCsrKXY9cVt0XSx2LmVsZW1lbnQuc2Nyb2xsTGVmdD12LmxlZnQsdi5lbGVtZW50LnNjcm9sbFRvcD12LnRvcH1mZD0hIWtmO2xmPWtmPW51bGw7YS5jdXJyZW50PWM7Wj1kO2RvIHRyeXtmb3IodD1hO251bGwhPT1aOyl7dmFyIEs9Wi5mbGFncztLJjM2JiZZaSh0LFouYWx0ZXJuYXRlLFopO2lmKEsmMTI4KXtxPXZvaWQgMDt2YXIgUT1aLnJlZjtpZihudWxsIT09USl7dmFyIEw9Wi5zdGF0ZU5vZGU7c3dpdGNoKFoudGFnKXtjYXNlIDU6cT1MO2JyZWFrO2RlZmF1bHQ6cT1MfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBRP1EocSk6US5jdXJyZW50PXF9fVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7Wj1udWxsOyRmKCk7WD1lfWVsc2UgYS5jdXJyZW50PWM7aWYoeGopeGo9ITEseWo9YSx6aj1iO2Vsc2UgZm9yKFo9ZDtudWxsIT09WjspYj1cbloubmV4dEVmZmVjdCxaLm5leHRFZmZlY3Q9bnVsbCxaLmZsYWdzJjgmJihLPVosSy5zaWJsaW5nPW51bGwsSy5zdGF0ZU5vZGU9bnVsbCksWj1iO2Q9YS5wZW5kaW5nTGFuZXM7MD09PWQmJihUaT1udWxsKTsxPT09ZD9hPT09RWo/RGorKzooRGo9MCxFaj1hKTpEaj0wO2M9Yy5zdGF0ZU5vZGU7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyUm9vdCl0cnl7TWYub25Db21taXRGaWJlclJvb3QoTGYsYyx2b2lkIDAsNjQ9PT0oYy5jdXJyZW50LmZsYWdzJjY0KSl9Y2F0Y2godmEpe31NaihhLE8oKSk7aWYoUWkpdGhyb3cgUWk9ITEsYT1SaSxSaT1udWxsLGE7aWYoMCE9PShYJjgpKXJldHVybiBudWxsO2lnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBlaygpe2Zvcig7bnVsbCE9PVo7KXt2YXIgYT1aLmFsdGVybmF0ZTtKanx8bnVsbD09PUlqfHwoMCE9PShaLmZsYWdzJjgpP2RjKFosSWopJiYoSmo9ITApOjEzPT09Wi50YWcmJm1qKGEsWikmJmRjKFosSWopJiYoSmo9ITApKTt2YXIgYj1aLmZsYWdzOzAhPT0oYiYyNTYpJiZYaShhLFopOzA9PT0oYiY1MTIpfHx4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKTtaPVoubmV4dEVmZmVjdH19ZnVuY3Rpb24gT2ooKXtpZig5MCE9PXpqKXt2YXIgYT05Nzx6aj85Nzp6ajt6aj05MDtyZXR1cm4gZ2coYSxmayl9cmV0dXJuITF9ZnVuY3Rpb24gJGkoYSxiKXtBai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9ZnVuY3Rpb24gWmkoYSxiKXtCai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9XG5mdW5jdGlvbiBmaygpe2lmKG51bGw9PT15ailyZXR1cm4hMTt2YXIgYT15ajt5aj1udWxsO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMzEpKTt2YXIgYj1YO1h8PTMyO3ZhciBjPUJqO0JqPVtdO2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7dmFyIGU9Y1tkXSxmPWNbZCsxXSxnPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKXRyeXtnKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1jPUFqO0FqPVtdO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKz0yKXtlPWNbZF07Zj1jW2QrMV07dHJ5e3ZhciBoPWUuY3JlYXRlO2UuZGVzdHJveT1oKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1mb3IoaD1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWg7KWE9aC5uZXh0RWZmZWN0LGgubmV4dEVmZmVjdD1udWxsLGguZmxhZ3MmOCYmKGguc2libGluZz1cbm51bGwsaC5zdGF0ZU5vZGU9bnVsbCksaD1hO1g9YjtpZygpO3JldHVybiEwfWZ1bmN0aW9uIGdrKGEsYixjKXtiPU1pKGMsYik7Yj1QaShhLGIsMSk7QWcoYSxiKTtiPUhnKCk7YT1LaihhLDEpO251bGwhPT1hJiYoJGMoYSwxLGIpLE1qKGEsYikpfVxuZnVuY3Rpb24gV2koYSxiKXtpZigzPT09YS50YWcpZ2soYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtnayhjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpe2E9TWkoYixhKTt2YXIgZT1TaShjLGEsMSk7QWcoYyxlKTtlPUhnKCk7Yz1LaihjLDEpO2lmKG51bGwhPT1jKSRjKGMsMSxlKSxNaihjLGUpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXRyeXtkLmNvbXBvbmVudERpZENhdGNoKGIsYSl9Y2F0Y2goZil7fWJyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIFlqKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1IZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztVPT09YSYmKFcmYyk9PT1jJiYoND09PVZ8fDM9PT1WJiYoVyY2MjkxNDU2MCk9PT1XJiY1MDA+TygpLWpqP1FqKGEsMCk6dWp8PWMpO01qKGEsYil9ZnVuY3Rpb24gbGooYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1hLm1vZGUsMD09PShiJjIpP2I9MTowPT09KGImNCk/Yj05OT09PWVnKCk/MToyOigwPT09R2omJihHaj10aiksYj1ZYyg2MjkxNDU2MCZ+R2opLDA9PT1iJiYoYj00MTk0MzA0KSkpO2M9SGcoKTthPUtqKGEsYik7bnVsbCE9PWEmJigkYyhhLGIsYyksTWooYSxjKSl9dmFyIGNrO1xuY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIubGFuZXM7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fE4uY3VycmVudCl1Zz0hMDtlbHNlIGlmKDAhPT0oYyZkKSl1Zz0wIT09KGEuZmxhZ3MmMTYzODQpPyEwOiExO2Vsc2V7dWc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6cmkoYik7c2goKTticmVhaztjYXNlIDU6Z2goYik7YnJlYWs7Y2FzZSAxOkZmKGIudHlwZSkmJkpmKGIpO2JyZWFrO2Nhc2UgNDplaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7dmFyIGU9Yi50eXBlLl9jb250ZXh0O0kobWcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiB0aShhLGIsYyk7SShQLFAuY3VycmVudCYxKTtiPWhpKGEsYixjKTtyZXR1cm4gbnVsbCE9PVxuYj9iLnNpYmxpbmc6bnVsbH1JKFAsUC5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmNjQpKXtpZihkKXJldHVybiBBaShhLGIsYyk7Yi5mbGFnc3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtJKFAsUC5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBiLmxhbmVzPTAsbWkoYSxiLGMpfXJldHVybiBoaShhLGIsYyl9ZWxzZSB1Zz0hMTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsTS5jdXJyZW50KTt0ZyhiLGMpO2U9Q2gobnVsbCxiLGQsYSxlLGMpO2IuZmxhZ3N8PTE7aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEZmKGQpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt4ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmR2coYixkLGcsYSk7ZS51cGRhdGVyPUtnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbHM9YjtPZyhiLGQsYSxjKTtiPXFpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLGZpKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTthOntudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTtcbmE9Yi5wZW5kaW5nUHJvcHM7Zj1lLl9pbml0O2U9ZihlLl9wYXlsb2FkKTtiLnR5cGU9ZTtmPWIudGFnPWhrKGUpO2E9bGcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9bGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPXBpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9Z2kobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1paShudWxsLGIsZSxsZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHkoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSkscGkoYSxiLGQsZSxjKTtjYXNlIDM6cmkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih5KDI4MikpO1xuZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lnKGEsYik7Q2coYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlzaCgpLGI9aGkoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihmPWUuaHlkcmF0ZSlraD1yZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGpoPWIsZj1saD0hMDtpZihmKXthPWUubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YTtpZihudWxsIT1hKWZvcihlPTA7ZTxhLmxlbmd0aDtlKz0yKWY9YVtlXSxmLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWFbZSsxXSx0aC5wdXNoKGYpO2M9WmcoYixudWxsLGQsYyk7Zm9yKGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8MTAyNCxjPWMuc2libGluZ31lbHNlIGZpKGEsYixkLGMpLHNoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZ2goYiksbnVsbD09PWEmJlxucGgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixuZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmbmYoZCxmKSYmKGIuZmxhZ3N8PTE2KSxvaShhLGIpLGZpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmcGgoYiksbnVsbDtjYXNlIDEzOnJldHVybiB0aShhLGIsYyk7Y2FzZSA0OnJldHVybiBlaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1ZZyhiLG51bGwsZCxjKTpmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksZ2koYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKG1nLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9SGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIU4uY3VycmVudCl7Yj1oaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1cbmsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD16ZygtMSxjJi1jKSxsLnRhZz0yLEFnKGgsbCkpO2gubGFuZXN8PWM7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmKGwubGFuZXN8PWMpO3NnKGgucmV0dXJuLGMpO2subGFuZXN8PWM7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z31maShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix0ZyhiLGMpLGU9dmcoZSxcbmYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5mbGFnc3w9MSxmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bGcoZSxiLnBlbmRpbmdQcm9wcyksZj1sZyhlLnR5cGUsZiksaWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGtpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLGIudGFnPTEsRmYoZCk/KGE9ITAsSmYoYikpOmE9ITEsdGcoYixjKSxNZyhiLGQsZSksT2coYixkLGUsYykscWkobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBBaShhLGIsYyk7Y2FzZSAyMzpyZXR1cm4gbWkoYSxiLGMpO2Nhc2UgMjQ6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO1xufTtmdW5jdGlvbiBpayhhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZmxhZ3M9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gbmgoYSxiLGMsZCl7cmV0dXJuIG5ldyBpayhhLGIsYyxkKX1mdW5jdGlvbiBqaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gaGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGppKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1BYSlyZXR1cm4gMTE7aWYoYT09PURhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFRnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9bmgoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVmcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWppKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHVhOnJldHVybiBYZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIEhhOmc9ODtlfD0xNjticmVhaztjYXNlIHdhOmc9ODtlfD0xO2JyZWFrO2Nhc2UgeGE6cmV0dXJuIGE9bmgoMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT14YSxhLnR5cGU9eGEsYS5sYW5lcz1mLGE7Y2FzZSBCYTpyZXR1cm4gYT1uaCgxMyxjLGIsZSksYS50eXBlPUJhLGEuZWxlbWVudFR5cGU9QmEsYS5sYW5lcz1mLGE7Y2FzZSBDYTpyZXR1cm4gYT1uaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1DYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiB2aShjLGUsZixiKTtjYXNlIEphOnJldHVybiBhPW5oKDI0LGMsYixlKSxhLmVsZW1lbnRUeXBlPUphLGEubGFuZXM9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHlhOmc9MTA7YnJlYWsgYTtjYXNlIHphOmc9OTticmVhayBhO2Nhc2UgQWE6Zz0xMTticmVhayBhO2Nhc2UgRGE6Zz0xNDticmVhayBhO2Nhc2UgRWE6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIEZhOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih5KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPW5oKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gWGcoYSxiLGMsZCl7YT1uaCg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gdmkoYSxiLGMsZCl7YT1uaCgyMyxhLGQsYik7YS5lbGVtZW50VHlwZT1JYTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVWcoYSxiLGMpe2E9bmgoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gV2coYSxiLGMpe2I9bmgoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBqayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz1aYygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz1aYygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz1aYygwKTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9bnVsbH1cbmZ1bmN0aW9uIGtrKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6dGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBsayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1IZygpLGc9SWcoZSk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxzO2I6e2lmKFpiKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHkoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoRmYoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih5KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihGZihrKSl7Yz1JZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1DZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXpnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PVxuZCYmKGIuY2FsbGJhY2s9ZCk7QWcoZSxiKTtKZyhlLGcsZik7cmV0dXJuIGd9ZnVuY3Rpb24gbWsoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBuayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gb2soYSxiKXtuayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmbmsoYSxiKX1mdW5jdGlvbiBwaygpe3JldHVybiBudWxsfVxuZnVuY3Rpb24gcWsoYSxiLGMpe3ZhciBkPW51bGwhPWMmJm51bGwhPWMuaHlkcmF0aW9uT3B0aW9ucyYmYy5oeWRyYXRpb25PcHRpb25zLm11dGFibGVTb3VyY2VzfHxudWxsO2M9bmV3IGprKGEsYixudWxsIT1jJiYhMD09PWMuaHlkcmF0ZSk7Yj1uaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7Yy5jdXJyZW50PWI7Yi5zdGF0ZU5vZGU9Yzt4ZyhiKTthW2ZmXT1jLmN1cnJlbnQ7Y2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO2lmKGQpZm9yKGE9MDthPGQubGVuZ3RoO2ErKyl7Yj1kW2FdO3ZhciBlPWIuX2dldFZlcnNpb247ZT1lKGIuX3NvdXJjZSk7bnVsbD09Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhP2MubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1bYixlXTpjLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEucHVzaChiLGUpfXRoaXMuX2ludGVybmFsUm9vdD1jfVxucWsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtsayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtxay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztsayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbZmZdPW51bGx9KX07ZnVuY3Rpb24gcmsoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVxuZnVuY3Rpb24gc2soYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBxayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHRrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7aC5jYWxsKGEpfX1sayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXNrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2suY2FsbChhKX19WGooZnVuY3Rpb24oKXtsayhiLGcsYSxlKX0pfXJldHVybiBtayhnKX1lYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNCxiKTtvayhhLDQpfX07ZmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDY3MTA4ODY0LGIpO29rKGEsNjcxMDg4NjQpfX07XG5nYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpLGM9SWcoYSk7SmcoYSxjLGIpO29rKGEsYyl9fTtoYz1mdW5jdGlvbihhLGIpe3JldHVybiBiKCl9O1xueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjphYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IoeSg5MCkpO1dhKGQpO2FiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1XajtcbkhiPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9WDtYfD00O3RyeXtyZXR1cm4gZ2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7WD1mLDA9PT1YJiYod2ooKSxpZygpKX19O0liPWZ1bmN0aW9uKCl7MD09PShYJjQ5KSYmKFZqKCksT2ooKSl9O0piPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtYfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fTtmdW5jdGlvbiB1ayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiBrayhhLGIsbnVsbCxjKX12YXIgdms9e0V2ZW50czpbQ2IsdWUsRGIsRWIsRmIsT2ose2N1cnJlbnQ6ITF9XX0sd2s9e2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTcuMC4xXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciB4az17YnVuZGxlVHlwZTp3ay5idW5kbGVUeXBlLHZlcnNpb246d2sudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOndrLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6d2sucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWNjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3ay5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG5wayxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHlrPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZigheWsuaXNEaXNhYmxlZCYmeWsuc3VwcG9ydHNGaWJlcil0cnl7TGY9eWsuaW5qZWN0KHhrKSxNZj15a31jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dms7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9dWs7XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHkoMTg4KSk7dGhyb3cgRXJyb3IoeSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1jYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O2V4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtpZigwIT09KGMmNDgpKXJldHVybiBhKGIpO1h8PTE7dHJ5e2lmKGEpcmV0dXJuIGdnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1g9YyxpZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITAsYyl9O1xuZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMSxjKX07ZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFyayhhKSl0aHJvdyBFcnJvcih5KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWGooZnVuY3Rpb24oKXt0ayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbZmZdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1XajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiB1ayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXJrKGMpKXRocm93IEVycm9yKHkoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IoeSgzOCkpO3JldHVybiB0ayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zLCBvcHRpb25zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucyAmJiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4yMC4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX1cbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciB0PW51bGwsdT1udWxsLHc9ZnVuY3Rpb24oKXtpZihudWxsIT09dCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0KCEwLGEpO3Q9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHcsMCksYjt9fTtmPWZ1bmN0aW9uKGEpe251bGwhPT10P3NldFRpbWVvdXQoZiwwLGEpOih0PWEsc2V0VGltZW91dCh3LDApKX07Zz1mdW5jdGlvbihhLGIpe3U9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHUpfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2s9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgeD13aW5kb3cuc2V0VGltZW91dCx5PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgej1cbndpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB6JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKX12YXIgQT0hMSxCPW51bGwsQz0tMSxEPTUsRT0wO2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49XG5FfTtrPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpEPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgRj1uZXcgTWVzc2FnZUNoYW5uZWwsRz1GLnBvcnQyO0YucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYobnVsbCE9PUIpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7RT1hK0Q7dHJ5e0IoITAsYSk/Ry5wb3N0TWVzc2FnZShudWxsKTooQT0hMSxCPW51bGwpfWNhdGNoKGIpe3Rocm93IEcucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQT0hMX07Zj1mdW5jdGlvbihhKXtCPWE7QXx8KEE9ITAsRy5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtDPVxueChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eShDKTtDPS0xfX1mdW5jdGlvbiBIKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEkoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEooYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIEsoYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SShuLGMpKXZvaWQgMCE9PXImJjA+SShyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SShyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSShhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTD1bXSxNPVtdLE49MSxPPW51bGwsUD0zLFE9ITEsUj0hMSxTPSExO1xuZnVuY3Rpb24gVChhKXtmb3IodmFyIGI9SihNKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKUsoTSk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlLKE0pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSChMLGIpO2Vsc2UgYnJlYWs7Yj1KKE0pfX1mdW5jdGlvbiBVKGEpe1M9ITE7VChhKTtpZighUilpZihudWxsIT09SihMKSlSPSEwLGYoVik7ZWxzZXt2YXIgYj1KKE0pO251bGwhPT1iJiZnKFUsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gVihhLGIpe1I9ITE7UyYmKFM9ITEsaCgpKTtRPSEwO3ZhciBjPVA7dHJ5e1QoYik7Zm9yKE89SihMKTtudWxsIT09TyYmKCEoTy5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQoKSk7KXt2YXIgZD1PLmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXtPLmNhbGxiYWNrPW51bGw7UD1PLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChPLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/Ty5jYWxsYmFjaz1lOk89PT1KKEwpJiZLKEwpO1QoYil9ZWxzZSBLKEwpO089SihMKX1pZihudWxsIT09Tyl2YXIgbT0hMDtlbHNle3ZhciBuPUooTSk7bnVsbCE9PW4mJmcoVSxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7Tz1udWxsLFA9YyxRPSExfX12YXIgVz1rO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7XG5leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1J8fFF8fChSPSEwLGYoVikpfTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFB9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSihMKX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVB9dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtQPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1XO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UDtQPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtQPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6TisrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsSChNLGEpLG51bGw9PT1KKEwpJiZhPT09SihNKSYmKFM/aCgpOlM9ITAsZyhVLGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxIKEwsYSksUnx8UXx8KFI9ITAsZihWKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1A9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCLCBjb21wYXJlLCBjb21wYXJlQ29udGV4dCkge1xuICB2YXIgcmV0ID0gY29tcGFyZSA/IGNvbXBhcmUuY2FsbChjb21wYXJlQ29udGV4dCwgb2JqQSwgb2JqQikgOiB2b2lkIDA7XG5cbiAgaWYgKHJldCAhPT0gdm9pZCAwKSB7XG4gICAgcmV0dXJuICEhcmV0O1xuICB9XG5cbiAgaWYgKG9iakEgPT09IG9iakIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gXCJvYmplY3RcIiB8fCAhb2JqQSB8fCB0eXBlb2Ygb2JqQiAhPT0gXCJvYmplY3RcIiB8fCAhb2JqQikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgYkhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5iaW5kKG9iakIpO1xuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IGtleXNBLmxlbmd0aDsgaWR4KyspIHtcbiAgICB2YXIga2V5ID0ga2V5c0FbaWR4XTtcblxuICAgIGlmICghYkhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdmFsdWVBID0gb2JqQVtrZXldO1xuICAgIHZhciB2YWx1ZUIgPSBvYmpCW2tleV07XG5cbiAgICByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCB2YWx1ZUEsIHZhbHVlQiwga2V5KSA6IHZvaWQgMDtcblxuICAgIGlmIChyZXQgPT09IGZhbHNlIHx8IChyZXQgPT09IHZvaWQgMCAmJiB2YWx1ZUEgIT09IHZhbHVlQikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IG1vZHVsZVsnZGVmYXVsdCddIDpcblx0XHQoKSA9PiBtb2R1bGU7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmYgPSB7fTtcbi8vIFRoaXMgZmlsZSBjb250YWlucyBvbmx5IHRoZSBlbnRyeSBjaHVuay5cbi8vIFRoZSBjaHVuayBsb2FkaW5nIGZ1bmN0aW9uIGZvciBhZGRpdGlvbmFsIGNodW5rc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5lID0gKGNodW5rSWQpID0+IHtcblx0cmV0dXJuIFByb21pc2UuYWxsKE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uZikucmVkdWNlKChwcm9taXNlcywga2V5KSA9PiB7XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5mW2tleV0oY2h1bmtJZCwgcHJvbWlzZXMpO1xuXHRcdHJldHVybiBwcm9taXNlcztcblx0fSwgW10pKTtcbn07IiwiLy8gVGhpcyBmdW5jdGlvbiBhbGxvdyB0byByZWZlcmVuY2UgYXN5bmMgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnUgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIFwiXCIgKyBjaHVua0lkICsgXCIuanNcIjtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0ODI2OiAwXG59O1xuXG5cbl9fd2VicGFja19yZXF1aXJlX18uZi5qID0gKGNodW5rSWQsIHByb21pc2VzKSA9PiB7XG5cdFx0Ly8gSlNPTlAgY2h1bmsgbG9hZGluZyBmb3IgamF2YXNjcmlwdFxuXHRcdHZhciBpbnN0YWxsZWRDaHVua0RhdGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSA/IGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA6IHVuZGVmaW5lZDtcblx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEgIT09IDApIHsgLy8gMCBtZWFucyBcImFscmVhZHkgaW5zdGFsbGVkXCIuXG5cblx0XHRcdC8vIGEgUHJvbWlzZSBtZWFucyBcImN1cnJlbnRseSBsb2FkaW5nXCIuXG5cdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcblx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYodHJ1ZSkgeyAvLyBhbGwgY2h1bmtzIGhhdmUgSlNcblx0XHRcdFx0XHQvLyBzZXR1cCBQcm9taXNlIGluIGNodW5rIGNhY2hlXG5cdFx0XHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSBbcmVzb2x2ZSwgcmVqZWN0XTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRwcm9taXNlcy5wdXNoKGluc3RhbGxlZENodW5rRGF0YVsyXSA9IHByb21pc2UpO1xuXG5cdFx0XHRcdFx0Ly8gc3RhcnQgY2h1bmsgbG9hZGluZ1xuXHRcdFx0XHRcdHZhciB1cmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLnUoY2h1bmtJZCk7XG5cdFx0XHRcdFx0Ly8gY3JlYXRlIGVycm9yIGJlZm9yZSBzdGFjayB1bndvdW5kIHRvIGdldCB1c2VmdWwgc3RhY2t0cmFjZSBsYXRlclxuXHRcdFx0XHRcdHZhciBlcnJvciA9IG5ldyBFcnJvcigpO1xuXHRcdFx0XHRcdHZhciBsb2FkaW5nRW5kZWQgPSAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpKSB7XG5cdFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcblx0XHRcdFx0XHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5tZXNzYWdlID0gJ0xvYWRpbmcgY2h1bmsgJyArIGNodW5rSWQgKyAnIGZhaWxlZC5cXG4oJyArIGVycm9yVHlwZSArICc6ICcgKyByZWFsU3JjICsgJyknO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLm5hbWUgPSAnQ2h1bmtMb2FkRXJyb3InO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IucmVxdWVzdCA9IHJlYWxTcmM7XG5cdFx0XHRcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhWzFdKGVycm9yKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkLCBcImNodW5rLVwiICsgY2h1bmtJZCwgY2h1bmtJZCk7XG5cdFx0XHRcdH0gZWxzZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuXHRcdFx0fVxuXHRcdH1cbn07XG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIGRlZmVycmVkIHN0YXJ0dXBcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSAocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24sIGRhdGEpID0+IHtcblx0dmFyIFtjaHVua0lkcywgbW9yZU1vZHVsZXMsIHJ1bnRpbWVdID0gZGF0YTtcblx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG5cdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuXHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuXHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuXHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcblx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcblx0XHR9XG5cdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcblx0fVxuXHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8obW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcblx0XHR9XG5cdH1cblx0aWYocnVudGltZSkgcnVudGltZShfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0aWYocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24pIHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKGRhdGEpO1xuXHR3aGlsZShyZXNvbHZlcy5sZW5ndGgpIHtcblx0XHRyZXNvbHZlcy5zaGlmdCgpKCk7XG5cdH1cblxufVxuXG52YXIgY2h1bmtMb2FkaW5nR2xvYmFsID0gc2VsZltcIndlYnBhY2tDaHVua3NscHUzXCJdID0gc2VsZltcIndlYnBhY2tDaHVua3NscHUzXCJdIHx8IFtdO1xuY2h1bmtMb2FkaW5nR2xvYmFsLmZvckVhY2god2VicGFja0pzb25wQ2FsbGJhY2suYmluZChudWxsLCAwKSk7XG5jaHVua0xvYWRpbmdHbG9iYWwucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2guYmluZChjaHVua0xvYWRpbmdHbG9iYWwpKTtcblxuLy8gbm8gZGVmZXJyZWQgc3RhcnR1cCIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vMDBfSGVhZGVyLmNzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjOGI5M2UxOWNkNmMxMzVmMTdjNDJmZTMzYjE5NWNkNy5wbmdcIjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgJy4vMDBfSGVhZGVyLmNzcyc7XHJcbmltcG9ydCBNYWluX3RpdGxlX2ltZyBmcm9tICcuLi9pbWcvbWFpbl90aXRsZS5wbmcnO1xyXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG4vKlxyXG4gICAgTWFpbiBQYWdlOiBUaGUgbW9zdCBiYXNpYyBmaXJzdCBwYWdlIG9mIFNMUFUgcHJvamVjdC5cclxuXHJcbiAgICB2YXJpYWJsZTpcclxuICAgICAgICBtYWluX3RpdGxlOiB0aGUgdGl0bGUgb2YgU0xQVS5cclxuICAgICAgICBtYWluX3N1YjogZGVzY3JpcHRpb24gb2YgU0xQVS5cclxuICAgICAgICBtYWluX2J0bl9nYW1lOiBwdXQgdGhpcyBidXR0b24gYW5kIHVzZXIgY2FuIG1ha2UgdGhlaXIgb3duIGdhbWUuXHJcblxyXG4gICAgICAgIHVzZXJfaWQ6IGlkZW50aWZpY2F0aW9uIG9mIHVzZXIuXHJcbiAgICAgICAgdXNlcl9zdGF0ZTogaWYgeW91IG1ha2UgYSBnYW1lLCB0aGlzIGlzIDAoY29uc3RydWN0b3IpLlxyXG4gICAgICAgICAgICAgICAgICAgIGlmIHlvdSBwbGF5IGEgZ2FtZSwgdGhpcyBpcyAxKGZyaWVuZCkuXHJcbiovXHJcblxyXG5jbGFzcyBIZWFkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICAgICAgICBtYWluX3RpdGxlOiBcIuyKrO2NvCBTTFBVXCIsXHJcbiAgICAgICAgICAgIG1haW5fdGl0bGVfaW1nOiA8aW1nXHJcbiAgICAgICAgICAgICAgICBhbHQ9XCJtYWluX3RpdGxlX2ltZ1wiXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtYWluX3RpdGxlX2ltZ1wiXHJcbiAgICAgICAgICAgICAgICBzcmM9e01haW5fdGl0bGVfaW1nfVxyXG4gICAgICAgICAgICAgICAgPjwvaW1nPixcclxuICAgICAgICAgICAgbWFpbl9zdWI6ICfqsozsnoTqsozsnoTqsozsnoTqsozsnoQhJyxcclxuICAgICAgICAgICAgbWFpbl9idG5fZ2FtZTogPGJ1dHRvbiBjbGFzc05hbWU9XCJidG5fZ2FtZVwiPmdvIGdhbWUhPC9idXR0b24+LFxyXG4gICAgICAgICAgICAvL3VzZXJfaWQ6XHJcbiAgICAgICAgICAgIHVzZXJfc3RhdGU6MCAgICAvLyAwOiBjb25zdHJ1Y3RvciwgMTogZnJpZW5kXHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuKFxyXG4gICAgICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxoMT57dGhpcy5zdGF0ZS5tYWluX3RpdGxlfTwvaDE+XHJcbiAgICAgICAgICAgICAgICAgICAgey8qdGhpcy5zdGF0ZS5tYWluX3RpdGxlX2ltZyovfVxyXG4gICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgPC9tYWluPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vMDBfTWFpbi5jc3NcIjtcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8sIGZyb20pIHtcbiAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCkgZnJvbSA9ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gKHRvICYmIHRvLnNwbGl0KCcvJykpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gKGZyb20gJiYgZnJvbS5zcGxpdCgnLycpKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuXG4gIGlmIChcbiAgICBtdXN0RW5kQWJzICYmXG4gICAgZnJvbVBhcnRzWzBdICE9PSAnJyAmJlxuICAgICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpXG4gIClcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7XG4iLCJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbnZhciBwcmVmaXggPSAnSW52YXJpYW50IGZhaWxlZCc7XG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gICAgaWYgKGNvbmRpdGlvbikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnZhcmlhbnQ7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwkJDEoYSwgYikge1xuICAgIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgdmFyIGJhc2VUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgdmFyIGhyZWYgPSAnJztcblxuICAgIGlmIChiYXNlVGFnICYmIGJhc2VUYWcuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG52YXIgY29tbW9uanNHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHt9O1xuXG5mdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcbiAgdmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG4gIHJldHVybiBjb21tb25qc0dsb2JhbFtrZXldID0gKGNvbW1vbmpzR2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufVxuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBnZXRVbmlxdWVJZCgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGhpcztcblxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8gPSBQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBoaXN0b3J5Q29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXItSGlzdG9yeVwiKTtcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0JDEgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0JDEoXCJSb3V0ZXJcIik7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVSb290TWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gUm91dGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxuICAgIH07IC8vIFRoaXMgaXMgYSBiaXQgb2YgYSBoYWNrLiBXZSBoYXZlIHRvIHN0YXJ0IGxpc3RlbmluZyBmb3IgbG9jYXRpb25cbiAgICAvLyBjaGFuZ2VzIGhlcmUgaW4gdGhlIGNvbnN0cnVjdG9yIGluIGNhc2UgdGhlcmUgYXJlIGFueSA8UmVkaXJlY3Q+c1xuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cbiAgICAvLyB0aGV5IG1vdW50IGFuZCBzaW5jZSBjRE0gZmlyZXMgaW4gY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMsIHdlIG1heVxuICAgIC8vIGdldCBhIG5ldyBsb2NhdGlvbiBiZWZvcmUgdGhlIDxSb3V0ZXI+IGlzIG1vdW50ZWQuXG5cbiAgICBfdGhpcy5faXNNb3VudGVkID0gZmFsc2U7XG4gICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XG5cbiAgICBpZiAoIXByb3BzLnN0YXRpY0NvbnRleHQpIHtcbiAgICAgIF90aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICAgIGlmIChfdGhpcy5faXNNb3VudGVkKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy51bmxpc3RlbikgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgIH1cbiAgICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KGhpc3RvcnlDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IHRoaXMucHJvcHMuaGlzdG9yeVxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghd2hlbiB8fCBjb250ZXh0LnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Vbm1vdW50OiBmdW5jdGlvbiBvblVubW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChfcmVmKSB7XG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgX3JlZiRwdXNoID0gX3JlZi5wdXNoLFxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcblxuICAgICAgICBpZiAoIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XG4gICAgICAgIH0pKSkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIHBhdGg6IG9wdGlvbnNcbiAgICB9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuICByZXR1cm4gcGF0aHMucmVkdWNlKGZ1bmN0aW9uIChtYXRjaGVkLCBwYXRoKSB7XG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XG4gIHZhciB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyh2YWx1ZSAhPT0gdW5kZWZpbmVkLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XG4gICAgICAhY29udGV4dCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQxLm1hdGNoO1xuXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IG1hdGNoXG4gICAgICB9KTtcblxuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXG4gICAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMucmVuZGVyOyAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvcHNcbiAgICAgIH0sIHByb3BzLm1hdGNoID8gY2hpbGRyZW4gPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogY2hpbGRyZW4gOiBjb21wb25lbnQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogcmVuZGVyID8gcmVuZGVyKHByb3BzKSA6IG51bGwgOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cblxudmFyIFN0YXRpY1JvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMkY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcyRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzJGNvbnRleHQ7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgICAgfSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICB2YXIgZWxlbWVudCwgbWF0Y2g7IC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cblxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcbiAgICAgICAgICBtYXRjaCA9IHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF9leHRlbmRzKHt9LCBjaGlsZC5wcm9wcywge1xuICAgICAgICAgICAgcGF0aDogcGF0aFxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcblxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8XCIgKyBkaXNwbGF5TmFtZSArIFwiIC8+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgY29udGV4dCwge1xuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQy5wcm9wVHlwZXMgPSB7XG4gICAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn1cblxudmFyIHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChoaXN0b3J5Q29udGV4dCk7XG59XG5mdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUxvY2F0aW9uKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCkubG9jYXRpb247XG59XG5mdW5jdGlvbiB1c2VQYXJhbXMoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VQYXJhbXMoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gbWF0Y2ggPyBtYXRjaC5wYXJhbXMgOiB7fTtcbn1cbmZ1bmN0aW9uIHVzZVJvdXRlTWF0Y2gocGF0aCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBwYXRoKSA6IG1hdGNoO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIGdsb2JhbCA9IHdpbmRvdztcbiAgICB2YXIga2V5ID0gXCJfX3JlYWN0X3JvdXRlcl9idWlsZF9fXCI7XG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XG4gICAgICBjanM6IFwiQ29tbW9uSlNcIixcbiAgICAgIGVzbTogXCJFUyBtb2R1bGVzXCIsXG4gICAgICB1bWQ6IFwiVU1EXCJcbiAgICB9O1xuXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XG4gICAgICB2YXIgaW5pdGlhbEJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbZ2xvYmFsW2tleV1dO1xuICAgICAgdmFyIHNlY29uZGFyeUJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbXCJlc21cIl07IC8vIFRPRE86IEFkZCBsaW5rIHRvIGFydGljbGUgdGhhdCBleHBsYWlucyBpbiBkZXRhaWwgaG93IHRvIGF2b2lkXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBsb2FkaW5nIHRoZSBcIiArIHNlY29uZGFyeUJ1aWxkTmFtZSArIFwiIGJ1aWxkIG9mIFJlYWN0IFJvdXRlciBcIiArIChcIm9uIGEgcGFnZSB0aGF0IGlzIGFscmVhZHkgcnVubmluZyB0aGUgXCIgKyBpbml0aWFsQnVpbGROYW1lICsgXCIgXCIpICsgXCJidWlsZCwgc28gdGhpbmdzIHdvbid0IHdvcmsgcmlnaHQuXCIpO1xuICAgIH1cblxuICAgIGdsb2JhbFtrZXldID0gXCJlc21cIjtcbiAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBoaXN0b3J5Q29udGV4dCBhcyBfX0hpc3RvcnlDb250ZXh0LCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci5qcy5tYXBcbiIsImltcG9ydCB7IFJvdXRlciwgX19Sb3V0ZXJDb250ZXh0LCBtYXRjaFBhdGggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24gfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgcmVzb2x2ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiByZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwiZnVuY3Rpb25cIiA/IHRvKGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG52YXIgbm9ybWFsaXplVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIG5vcm1hbGl6ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG5cbnZhciBmb3J3YXJkUmVmU2hpbSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcbiAgcmV0dXJuIEM7XG59O1xuXG52YXIgZm9yd2FyZFJlZiA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbnZhciBMaW5rQW5jaG9yID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICBuYXZpZ2F0ZSA9IF9yZWYubmF2aWdhdGUsXG4gICAgICBfb25DbGljayA9IF9yZWYub25DbGljayxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJpbm5lclJlZlwiLCBcIm5hdmlnYXRlXCIsIFwib25DbGlja1wiXSk7XG5cbiAgdmFyIHRhcmdldCA9IHJlc3QudGFyZ2V0O1xuXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKF9vbkNsaWNrKSBfb25DbGljayhldmVudCk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aHJvdyBleDtcbiAgICAgIH1cblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgIXRhcmdldCB8fCB0YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG5hdmlnYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgfSBlbHNlIHtcbiAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcbiAgfVxuICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXG5cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgcHJvcHMpO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTGlua0FuY2hvci5kaXNwbGF5TmFtZSA9IFwiTGlua0FuY2hvclwiO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxuXG52YXIgTGluayA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYyLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYyJGNvbXBvbmVudCA9IF9yZWYyLmNvbXBvbmVudCxcbiAgICAgIGNvbXBvbmVudCA9IF9yZWYyJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gTGlua0FuY2hvciA6IF9yZWYyJGNvbXBvbmVudCxcbiAgICAgIHJlcGxhY2UgPSBfcmVmMi5yZXBsYWNlLFxuICAgICAgdG8gPSBfcmVmMi50byxcbiAgICAgIGlubmVyUmVmID0gX3JlZjIuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImNvbXBvbmVudFwiLCBcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5O1xuICAgIHZhciBsb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pLCBjb250ZXh0LmxvY2F0aW9uKTtcbiAgICB2YXIgaHJlZiA9IGxvY2F0aW9uID8gaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKSA6IFwiXCI7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaHJlZjogaHJlZixcbiAgICAgIG5hdmlnYXRlOiBmdW5jdGlvbiBuYXZpZ2F0ZSgpIHtcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pO1xuICAgICAgICB2YXIgbWV0aG9kID0gcmVwbGFjZSA/IGhpc3RvcnkucmVwbGFjZSA6IGhpc3RvcnkucHVzaDtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH1cbiAgICB9KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpO1xuICB9KTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuZnVuY10pO1xuICB2YXIgcmVmVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGN1cnJlbnQ6IFByb3BUeXBlcy5hbnlcbiAgfSldKTtcbiAgTGluay5kaXNwbGF5TmFtZSA9IFwiTGlua1wiO1xuICBMaW5rLnByb3BUeXBlcyA9IHtcbiAgICBpbm5lclJlZjogcmVmVHlwZSxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IHRvVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBmb3J3YXJkUmVmU2hpbSQxID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmJDEgPSBSZWFjdC5mb3J3YXJkUmVmO1xuXG5pZiAodHlwZW9mIGZvcndhcmRSZWYkMSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmJDEgPSBmb3J3YXJkUmVmU2hpbSQxO1xufVxuXG5mdW5jdGlvbiBqb2luQ2xhc3NuYW1lcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGNsYXNzbmFtZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgY2xhc3NuYW1lc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5qb2luKFwiIFwiKTtcbn1cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cblxuXG52YXIgTmF2TGluayA9IGZvcndhcmRSZWYkMShmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBfcmVmJGFyaWFDdXJyZW50ID0gX3JlZltcImFyaWEtY3VycmVudFwiXSxcbiAgICAgIGFyaWFDdXJyZW50ID0gX3JlZiRhcmlhQ3VycmVudCA9PT0gdm9pZCAwID8gXCJwYWdlXCIgOiBfcmVmJGFyaWFDdXJyZW50LFxuICAgICAgX3JlZiRhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYkYWN0aXZlQ2xhc3NOYW1lID09PSB2b2lkIDAgPyBcImFjdGl2ZVwiIDogX3JlZiRhY3RpdmVDbGFzc05hbWUsXG4gICAgICBhY3RpdmVTdHlsZSA9IF9yZWYuYWN0aXZlU3R5bGUsXG4gICAgICBjbGFzc05hbWVQcm9wID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICBpc0FjdGl2ZVByb3AgPSBfcmVmLmlzQWN0aXZlLFxuICAgICAgbG9jYXRpb25Qcm9wID0gX3JlZi5sb2NhdGlvbixcbiAgICAgIHNlbnNpdGl2ZSA9IF9yZWYuc2Vuc2l0aXZlLFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic2Vuc2l0aXZlXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksIGN1cnJlbnRMb2NhdGlvbik7XG4gICAgdmFyIHBhdGggPSB0b0xvY2F0aW9uLnBhdGhuYW1lOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuXG4gICAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgICB2YXIgbWF0Y2ggPSBlc2NhcGVkUGF0aCA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgICAgZXhhY3Q6IGV4YWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmUsXG4gICAgICBzdHJpY3Q6IHN0cmljdFxuICAgIH0pIDogbnVsbDtcbiAgICB2YXIgaXNBY3RpdmUgPSAhIShpc0FjdGl2ZVByb3AgPyBpc0FjdGl2ZVByb3AobWF0Y2gsIGN1cnJlbnRMb2NhdGlvbikgOiBtYXRjaCk7XG4gICAgdmFyIGNsYXNzTmFtZSA9IGlzQWN0aXZlID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKSA6IGNsYXNzTmFtZVByb3A7XG4gICAgdmFyIHN0eWxlID0gaXNBY3RpdmUgPyBfZXh0ZW5kcyh7fSwgc3R5bGVQcm9wLCB7fSwgYWN0aXZlU3R5bGUpIDogc3R5bGVQcm9wO1xuXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe1xuICAgICAgXCJhcmlhLWN1cnJlbnRcIjogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQgfHwgbnVsbCxcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgc3R5bGU6IHN0eWxlLFxuICAgICAgdG86IHRvTG9jYXRpb25cbiAgICB9LCByZXN0KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSQxICE9PSBmb3J3YXJkUmVmJDEpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTmF2TGluay5kaXNwbGF5TmFtZSA9IFwiTmF2TGlua1wiO1xuICB2YXIgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIl0pO1xuICBOYXZMaW5rLnByb3BUeXBlcyA9IF9leHRlbmRzKHt9LCBMaW5rLnByb3BUeXBlcywge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50VHlwZSxcbiAgICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pO1xufVxuXG5leHBvcnQgeyBCcm93c2VyUm91dGVyLCBIYXNoUm91dGVyLCBMaW5rLCBOYXZMaW5rIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXItZG9tLmpzLm1hcFxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0ICcuLzAwX01haW4uY3NzJztcclxuaW1wb3J0IE1haW5fdGl0bGVfaW1nIGZyb20gJy4uL2ltZy9tYWluX3RpdGxlLnBuZyc7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuXHJcbi8qXHJcbiAgICBNYWluIFBhZ2U6IFRoZSBtb3N0IGJhc2ljIGZpcnN0IHBhZ2Ugb2YgU0xQVSBwcm9qZWN0LlxyXG5cclxuICAgIHZhcmlhYmxlOlxyXG4gICAgICAgIG1haW5fdGl0bGU6IHRoZSB0aXRsZSBvZiBTTFBVLlxyXG4gICAgICAgIG1haW5fc3ViOiBkZXNjcmlwdGlvbiBvZiBTTFBVLlxyXG4gICAgICAgIG1haW5fYnRuX2dhbWU6IHB1dCB0aGlzIGJ1dHRvbiBhbmQgdXNlciBjYW4gbWFrZSB0aGVpciBvd24gZ2FtZS5cclxuXHJcbiAgICAgICAgdXNlcl9pZDogaWRlbnRpZmljYXRpb24gb2YgdXNlci5cclxuICAgICAgICB1c2VyX3N0YXRlOiBpZiB5b3UgbWFrZSBhIGdhbWUsIHRoaXMgaXMgMChjb25zdHJ1Y3RvcikuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgeW91IHBsYXkgYSBnYW1lLCB0aGlzIGlzIDEoZnJpZW5kKS5cclxuKi9cclxuXHJcbmNsYXNzIE1haW4gZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICAgICAgICBtYWluX3RpdGxlOiBcIuyKrO2NvCBTTFBVXCIsXHJcbiAgICAgICAgICAgIG1haW5fdGl0bGVfaW1nOiA8aW1nXHJcbiAgICAgICAgICAgICAgICBhbHQ9XCJtYWluX3RpdGxlX2ltZ1wiXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtYWluX3RpdGxlX2ltZ1wiXHJcbiAgICAgICAgICAgICAgICBzcmM9e01haW5fdGl0bGVfaW1nfVxyXG4gICAgICAgICAgICAgICAgPjwvaW1nPixcclxuICAgICAgICAgICAgbWFpbl9zdWI6ICfqsozsnoTqsozsnoTqsozsnoTqsozsnoQhJyxcclxuICAgICAgICAgICAgbWFpbl9idG5fZ2FtZTogPGJ1dHRvbiBjbGFzc05hbWU9XCJidG5fZ2FtZVwiPmdvIGdhbWUhPC9idXR0b24+LFxyXG4gICAgICAgICAgICAvL3VzZXJfaWQ6XHJcbiAgICAgICAgICAgIHVzZXJfc3RhdGU6MCAgICAvLyAwOiBjb25zdHJ1Y3RvciwgMTogZnJpZW5kXHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuKFxyXG4gICAgICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJzdWJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aDI+e3RoaXMuc3RhdGUubWFpbl9zdWJ9PC9oMj5cclxuICAgICAgICAgICAgICAgICAgICA8aDM+e3RoaXMuc3RhdGUubWFpbl9zdWJ9PC9oMz5cclxuICAgICAgICAgICAgICAgICAgICA8aDQ+e3RoaXMuc3RhdGUubWFpbl9zdWJ9PC9oND5cclxuICAgICAgICAgICAgICAgICAgICA8aDU+e3RoaXMuc3RhdGUubWFpbl9zdWJ9PC9oNT5cclxuICAgICAgICAgICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImJ0blwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyAgIC8vMDogY29uc3RydWN0b3IsIDE6IGZyaWVuZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMCA6IDxMaW5rIHRvPVwiL2xvZ2luXCI+e3RoaXMuc3RhdGUubWFpbl9idG5fZ2FtZX08L0xpbms+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMSA6IDxMaW5rIHRvPVwiL3N0YXJ0XCI+e3RoaXMuc3RhdGUubWFpbl9idG5fZ2FtZX08L0xpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1bdGhpcy5zdGF0ZS51c2VyX3N0YXRlXSAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XHJcblxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgPC9tYWluPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNYWluOyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jbGFzcyBTdGFydCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICByZW5kZXIoKXtcclxuICAgICAgICByZXR1cm4oXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICA8aDE+c3RhcnQ8L2gxPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTdGFydDsiLCJpbXBvcnQgYXBpIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICAgICAgICBpbXBvcnQgY29udGVudCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLzAyX0xvZ2luLmNzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCAnLi8wMl9Mb2dpbi5jc3MnO1xyXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG4vKlxyXG4gICAgTG9naW4gUGFnZTogVGhlIHBhZ2UgdGhhdCB1c2VycyB3cml0ZSBkb3duIHRoZWlyIG5pY2tuYW1lXHJcbiAgICAgICAgICAgICAgICBhbmQgdGhlIHBhZ2Ugc2VuZCB0aGUgbmlja25hbWUgdG8gbmV4dCBNYWtlIFBhZ2UuXHJcblxyXG4gICAgdmFyaWFibGU6XHJcbiAgICAgICAgdXNlcl9pZDogdXNlcnMncyBuaWNrbmFtZVxyXG4gICAgICAgIGxvZ2luX3RpdGxlOiB0aGUgdGl0bGUgb2YgdGhpcyBwYWdlLlxyXG4gICAgICAgIGxvZ2luX2lucHV0OiB0aGUgYmxhbmsgZm9yIHVzZXJzIHRvIHdyaXRlIGRvd24gdGhlaXIgb3duIG5pY2tuYW1lLlxyXG4gICAgICAgIGxvZ2luX2J0bl9uZXh0OiB0aGUgYnV0dG9uIHRvIGdvIHRvIHRoZSBuZXh0IGNvdXJzZSgwM19NYWtlIFBhZ2UpLlxyXG4qL1xyXG5cclxuY2xhc3MgTG9naW4gZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLnN0YXRlPXtcclxuICAgICAgICAgICAgdXNlcl9pZDogJycsXHJcbiAgICAgICAgICAgIGxvZ2luX3RpdGxlOiBcIuydtOumhOydhCDsnoXroKXtlbTso7zshLjsmpRcIixcclxuICAgICAgICAgICAgbG9naW5faW5wdXQ6IDxpbnB1dCB0eXBlPVwidXNlcl9pZFwiIG5hbWU9XCJpZFwiPjwvaW5wdXQ+LFxyXG4gICAgICAgICAgICBsb2dpbl9idG5fbmV4dDogPGJ1dHRvbiBjbGFzc05hbWU9XCJidG5fbmV4dFwiPuuLpOydjDwvYnV0dG9uPixcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlRXZlbnQgPSAoZSkgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTsgLy8gcHJldmVudCByZWZyZXNoXHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dXNlcl9pZDplLnRhcmdldC5pZC52YWx1ZX0pOyAgICAvLyBzZXQgcmVhbCB1c2VyX2lkJ3MgdmFsdWUgKGZyb20gbG9naW5faW5wdXQpXHJcbiAgICAgICAgY29uc29sZS5sb2coZS50YXJnZXQuaWQudmFsdWUpO1xyXG4gICAgICAgIHRoaXMucHJvcHMub25TdWJtaXQoXHJcbiAgICAgICAgICAgIGUudGFyZ2V0LmlkLnZhbHVlXHJcbiAgICAgICAgKTtcclxuICAgICAgICAvL3Rlc3Q7XHJcbiAgICB9XHJcbi8qKiBcclxuICAgIHRlc3QoKXtcclxuICAgICAgICBmZXRjaChcIi9zcmMvRGlzbGF5L21ha2VcIix7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJwb3N0XCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6e1xyXG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICBpZDp0aGlzLnVzZXJfaWRcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuKiovXHJcbiAgICByZW5kZXIoKXtcclxuICAgICAgICByZXR1cm4oXHJcbiAgICAgICAgICAgIDxtYWluIGNsYXNzTmFtZT1cImxvZ2luXCI+XHJcbiAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmxvZ2luX3RpdGxlfVxyXG4gICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgICAgICAgICAgey8qIGZvcm06IHRvIGNvbnZleSB0aGUgdXNlcidzIGluZm9ybWF0aW9uIGluIFBPU1QgbWV0aG9kIHRvIDAzX01ha2UgUGFnZS4qL31cclxuICAgICAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXt0aGlzLmNoYW5nZUV2ZW50fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiaW5wdXRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmxvZ2luX2lucHV0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImJ0blwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qPExpbmsgdG89XCIvbWFrZVwiPnt0aGlzLnN0YXRlLmxvZ2luX2J0bl9uZXh0fTwvTGluaz4qL31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKnNob3cgdXNlcl9pZCovfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgdG89XCIvbG9naW5cIj57dGhpcy5zdGF0ZS5sb2dpbl9idG5fbmV4dH08L0xpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+e3RoaXMuc3RhdGUudXNlcl9pZH08L2gxPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPmhlbGxvPC9oMT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgICAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgICAgICA8L21haW4+XHJcbiAgICAgICAgKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMb2dpbjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG4vL2F4aW9z7J207Jqp7ZWY6riwXHJcblxyXG5cclxuY2xhc3MgTWFrZSBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICByZW5kZXIoKXtcclxuICAgICAgICByZXR1cm4oXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICA8aDE+bWFrZTwvaDE+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1ha2U7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgaG90IH0gZnJvbSAncmVhY3QtaG90LWxvYWRlcic7XHJcbmltcG9ydCBNYWluIGZyb20gJy4uL0Rpc3BsYXkvMDBfTWFpbic7XHJcbmltcG9ydCBTdGFydCBmcm9tICcuLi9EaXNwbGF5LzAxX1N0YXJ0JztcclxuaW1wb3J0IExvZ2luIGZyb20gJy4uL0Rpc3BsYXkvMDJfTG9naW4nO1xyXG5pbXBvcnQgTWFrZSBmcm9tICcuLi9EaXNwbGF5LzAzX01ha2UnO1xyXG5pbXBvcnQgUHJldmlldyBmcm9tICcuLi9EaXNwbGF5LzA0X1ByZXZpZXcnO1xyXG5cclxuaW1wb3J0IHtSb3V0ZSwgU3dpdGNoLCBIYXNoUm91dGVyIGFzIFJvdXRlcn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5jb25zdCBSb3V0ZXJzID0gKCkgPT4oXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIkFwcFwiPlxyXG4gICAgICB7XHJcbiAgICAgIDxSb3V0ZXI+XHJcbiAgICAgICAgPFN3aXRjaD5cclxuICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL1wiPjxNYWluPjwvTWFpbj48L1JvdXRlPlxyXG4gICAgICAgICAgPFJvdXRlIHBhdGg9XCIvbWFpblwiPjxNYWluPjwvTWFpbj48L1JvdXRlPlxyXG4gICAgICAgICAgPFJvdXRlIHBhdGg9XCIvc3RhcnRcIj48U3RhcnQ+PC9TdGFydD48L1JvdXRlPlxyXG4gICAgICAgICAgPFJvdXRlIHBhdGg9XCIvbG9naW5cIj48TG9naW4+PC9Mb2dpbj48L1JvdXRlPlxyXG4gICAgICAgICAgPFJvdXRlIHBhdGg9XCIvbWFrZVwiPjxNYWtlPjwvTWFrZT48L1JvdXRlPlxyXG4gICAgICAgICAgXHJcbiAgICAgICAgPC9Td2l0Y2g+XHJcbiAgICAgIDwvUm91dGVyPlxyXG4gICAgICB9XHJcbiAgICA8L2Rpdj5cclxuKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJvdXRlcnM7XHJcbiIsImZ1bmN0aW9uIHN0eWxpc19taW4gKFcpIHtcbiAgZnVuY3Rpb24gTShkLCBjLCBlLCBoLCBhKSB7XG4gICAgZm9yICh2YXIgbSA9IDAsIGIgPSAwLCB2ID0gMCwgbiA9IDAsIHEsIGcsIHggPSAwLCBLID0gMCwgaywgdSA9IGsgPSBxID0gMCwgbCA9IDAsIHIgPSAwLCBJID0gMCwgdCA9IDAsIEIgPSBlLmxlbmd0aCwgSiA9IEIgLSAxLCB5LCBmID0gJycsIHAgPSAnJywgRiA9ICcnLCBHID0gJycsIEM7IGwgPCBCOykge1xuICAgICAgZyA9IGUuY2hhckNvZGVBdChsKTtcbiAgICAgIGwgPT09IEogJiYgMCAhPT0gYiArIG4gKyB2ICsgbSAmJiAoMCAhPT0gYiAmJiAoZyA9IDQ3ID09PSBiID8gMTAgOiA0NyksIG4gPSB2ID0gbSA9IDAsIEIrKywgSisrKTtcblxuICAgICAgaWYgKDAgPT09IGIgKyBuICsgdiArIG0pIHtcbiAgICAgICAgaWYgKGwgPT09IEogJiYgKDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSksIDAgPCBmLnRyaW0oKS5sZW5ndGgpKSB7XG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgZiArPSBlLmNoYXJBdChsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBnID0gNTk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgIGYgPSBmLnRyaW0oKTtcbiAgICAgICAgICAgIHEgPSBmLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgICAgICBrID0gMTtcblxuICAgICAgICAgICAgZm9yICh0ID0gKytsOyBsIDwgQjspIHtcbiAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAxMjM6XG4gICAgICAgICAgICAgICAgICBrKys7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgICAgICAgICAgay0tO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgIGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodSA9IGwgKyAxOyB1IDwgSjsgKyt1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZS5jaGFyQ29kZUF0KHUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0MiA9PT0gZyAmJiA0MiA9PT0gZS5jaGFyQ29kZUF0KHUgLSAxKSAmJiBsICsgMiAhPT0gdSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0NyA9PT0gZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBsID0gdTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDkxOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgICAgIGcrKztcblxuICAgICAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgIGZvciAoOyBsKysgPCBKICYmIGUuY2hhckNvZGVBdChsKSAhPT0gZzspIHtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKDAgPT09IGspIGJyZWFrO1xuICAgICAgICAgICAgICBsKys7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGsgPSBlLnN1YnN0cmluZyh0LCBsKTtcbiAgICAgICAgICAgIDAgPT09IHEgJiYgKHEgPSAoZiA9IGYucmVwbGFjZShjYSwgJycpLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAocSkge1xuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSk7XG4gICAgICAgICAgICAgICAgZyA9IGYuY2hhckNvZGVBdCgxKTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgciA9IGM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByID0gTztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBrID0gTShjLCByLCBrLCBnLCBhICsgMSk7XG4gICAgICAgICAgICAgICAgdCA9IGsubGVuZ3RoO1xuICAgICAgICAgICAgICAgIDAgPCBBICYmIChyID0gWChPLCBmLCBJKSwgQyA9IEgoMywgaywgciwgYywgRCwgeiwgdCwgZywgYSwgaCksIGYgPSByLmpvaW4oJycpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHQgPSAoayA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChnID0gMCwgayA9ICcnKSk7XG4gICAgICAgICAgICAgICAgaWYgKDAgPCB0KSBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGRhLCBlYSk7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwNzpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShmYSwgJyQxICQyJyk7XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgayA9IDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKCdAJyArIGssIDMpID8gJ0Atd2Via2l0LScgKyBrICsgJ0AnICsgayA6ICdAJyArIGs7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArIGssIDExMiA9PT0gaCAmJiAoayA9IChwICs9IGssICcnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGsgPSAnJztcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIFgoYywgZiwgSSksIGssIGgsIGEgKyAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgRiArPSBrO1xuICAgICAgICAgICAgayA9IEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgZiA9ICgwIDwgciA/IGYucmVwbGFjZShOLCAnJykgOiBmKS50cmltKCk7XG4gICAgICAgICAgICBpZiAoMSA8ICh0ID0gZi5sZW5ndGgpKSBzd2l0Y2ggKDAgPT09IHUgJiYgKHEgPSBmLmNoYXJDb2RlQXQoMCksIDQ1ID09PSBxIHx8IDk2IDwgcSAmJiAxMjMgPiBxKSAmJiAodCA9IChmID0gZi5yZXBsYWNlKCcgJywgJzonKSkubGVuZ3RoKSwgMCA8IEEgJiYgdm9pZCAwICE9PSAoQyA9IEgoMSwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpKSAmJiAwID09PSAodCA9IChmID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGYgPSAnXFx4MDBcXHgwMCcpLCBxID0gZi5jaGFyQ29kZUF0KDApLCBnID0gZi5jaGFyQ29kZUF0KDEpLCBxKSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIGlmICgxMDUgPT09IGcgfHwgOTkgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgIEcgKz0gZiArIGUuY2hhckF0KGwpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgNTggIT09IGYuY2hhckNvZGVBdCh0IC0gMSkgJiYgKHAgKz0gUChmLCBxLCBnLCBmLmNoYXJDb2RlQXQoMikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICBjYXNlIDEzOlxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIDQ3ID09PSBiID8gYiA9IDAgOiAwID09PSAxICsgcSAmJiAxMDcgIT09IGggJiYgMCA8IGYubGVuZ3RoICYmIChyID0gMSwgZiArPSAnXFx4MDAnKTtcbiAgICAgICAgICAwIDwgQSAqIFkgJiYgSCgwLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCk7XG4gICAgICAgICAgeiA9IDE7XG4gICAgICAgICAgRCsrO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgNTk6XG4gICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgICAgICB6Kys7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB6Kys7XG4gICAgICAgICAgeSA9IGUuY2hhckF0KGwpO1xuXG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIG0gKyBiKSBzd2l0Y2ggKHgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgICAgICB5ID0gJyc7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAzMiAhPT0gZyAmJiAoeSA9ICcgJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcMCc7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFxmJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXHYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIChyID0gSSA9IDEsIHkgPSAnXFxmJyArIHkpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMDg6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0gKyBFICYmIDAgPCB1KSBzd2l0Y2ggKGwgLSB1KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgMTEyID09PSB4ICYmIDU4ID09PSBlLmNoYXJDb2RlQXQobCAtIDMpICYmIChFID0geCk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAxMTEgPT09IEsgJiYgKEUgPSBLKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmICh1ID0gbCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICYmIChyID0gMSwgeSArPSAnXFxyJyk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgMCA9PT0gYiAmJiAobiA9IG4gPT09IGcgPyAwIDogMCA9PT0gbiA/IGcgOiBuKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtKys7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkzOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbS0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIHYtLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0pIHtcbiAgICAgICAgICAgICAgICBpZiAoMCA9PT0gcSkgc3dpdGNoICgyICogeCArIDMgKiBLKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDUzMzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHEgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2Kys7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSArIHUgKyBrICYmIChrID0gMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgaWYgKCEoMCA8IG4gKyBtICsgdikpIHN3aXRjaCAoYikge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoMiAqIGcgKyAzICogZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDIzNTpcbiAgICAgICAgICAgICAgICAgICAgICBiID0gNDc7XG4gICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICAgICAgICAgICAgdCA9IGwsIGIgPSA0MjtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgNDcgPT09IGcgJiYgNDIgPT09IHggJiYgdCArIDIgIT09IGwgJiYgKDMzID09PSBlLmNoYXJDb2RlQXQodCArIDIpICYmIChwICs9IGUuc3Vic3RyaW5nKHQsIGwgKyAxKSksIHkgPSAnJywgYiA9IDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgMCA9PT0gYiAmJiAoZiArPSB5KTtcbiAgICAgIH1cblxuICAgICAgSyA9IHg7XG4gICAgICB4ID0gZztcbiAgICAgIGwrKztcbiAgICB9XG5cbiAgICB0ID0gcC5sZW5ndGg7XG5cbiAgICBpZiAoMCA8IHQpIHtcbiAgICAgIHIgPSBjO1xuICAgICAgaWYgKDAgPCBBICYmIChDID0gSCgyLCBwLCByLCBkLCBELCB6LCB0LCBoLCBhLCBoKSwgdm9pZCAwICE9PSBDICYmIDAgPT09IChwID0gQykubGVuZ3RoKSkgcmV0dXJuIEcgKyBwICsgRjtcbiAgICAgIHAgPSByLmpvaW4oJywnKSArICd7JyArIHAgKyAnfSc7XG5cbiAgICAgIGlmICgwICE9PSB3ICogRSkge1xuICAgICAgICAyICE9PSB3IHx8IEwocCwgMikgfHwgKEUgPSAwKTtcblxuICAgICAgICBzd2l0Y2ggKEUpIHtcbiAgICAgICAgICBjYXNlIDExMTpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoaGEsICc6LW1vei0kMScpICsgcDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTI6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKFEsICc6Oi13ZWJraXQtaW5wdXQtJDEnKSArIHAucmVwbGFjZShRLCAnOjotbW96LSQxJykgKyBwLnJlcGxhY2UoUSwgJzotbXMtaW5wdXQtJDEnKSArIHA7XG4gICAgICAgIH1cblxuICAgICAgICBFID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gRyArIHAgKyBGO1xuICB9XG5cbiAgZnVuY3Rpb24gWChkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLnRyaW0oKS5zcGxpdChpYSk7XG4gICAgYyA9IGg7XG4gICAgdmFyIGEgPSBoLmxlbmd0aCxcbiAgICAgICAgbSA9IGQubGVuZ3RoO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHZhciBiID0gMDtcblxuICAgICAgICBmb3IgKGQgPSAwID09PSBtID8gJycgOiBkWzBdICsgJyAnOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgY1tiXSA9IFooZCwgY1tiXSwgZSkudHJpbSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHZhciB2ID0gYiA9IDA7XG5cbiAgICAgICAgZm9yIChjID0gW107IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IG07ICsrbikge1xuICAgICAgICAgICAgY1t2KytdID0gWihkW25dICsgJyAnLCBoW2JdLCBlKS50cmltKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFooZCwgYywgZSkge1xuICAgIHZhciBoID0gYy5jaGFyQ29kZUF0KDApO1xuICAgIDMzID4gaCAmJiAoaCA9IChjID0gYy50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgc3dpdGNoIChoKSB7XG4gICAgICBjYXNlIDM4OlxuICAgICAgICByZXR1cm4gYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGNhc2UgNTg6XG4gICAgICAgIHJldHVybiBkLnRyaW0oKSArIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoMCA8IDEgKiBlICYmIDAgPCBjLmluZGV4T2YoJ1xcZicpKSByZXR1cm4gYy5yZXBsYWNlKEYsICg1OCA9PT0gZC5jaGFyQ29kZUF0KDApID8gJycgOiAnJDEnKSArIGQudHJpbSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZCArIGM7XG4gIH1cblxuICBmdW5jdGlvbiBQKGQsIGMsIGUsIGgpIHtcbiAgICB2YXIgYSA9IGQgKyAnOycsXG4gICAgICAgIG0gPSAyICogYyArIDMgKiBlICsgNCAqIGg7XG5cbiAgICBpZiAoOTQ0ID09PSBtKSB7XG4gICAgICBkID0gYS5pbmRleE9mKCc6JywgOSkgKyAxO1xuICAgICAgdmFyIGIgPSBhLnN1YnN0cmluZyhkLCBhLmxlbmd0aCAtIDEpLnRyaW0oKTtcbiAgICAgIGIgPSBhLnN1YnN0cmluZygwLCBkKS50cmltKCkgKyBiICsgJzsnO1xuICAgICAgcmV0dXJuIDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKGIsIDEpID8gJy13ZWJraXQtJyArIGIgKyBiIDogYjtcbiAgICB9XG5cbiAgICBpZiAoMCA9PT0gdyB8fCAyID09PSB3ICYmICFMKGEsIDEpKSByZXR1cm4gYTtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAxMDE1OlxuICAgICAgICByZXR1cm4gOTcgPT09IGEuY2hhckNvZGVBdCgxMCkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk1MTpcbiAgICAgICAgcmV0dXJuIDExNiA9PT0gYS5jaGFyQ29kZUF0KDMpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NjM6XG4gICAgICAgIHJldHVybiAxMTAgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMTAwOTpcbiAgICAgICAgaWYgKDEwMCAhPT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5Njk6XG4gICAgICBjYXNlIDk0MjpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5Nzg6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDE5OlxuICAgICAgY2FzZSA5ODM6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgODgzOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg4KSkgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcbiAgICAgICAgaWYgKDAgPCBhLmluZGV4T2YoJ2ltYWdlLXNldCgnLCAxMSkpIHJldHVybiBhLnJlcGxhY2UoamEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMjpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNCkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDUpKSB7XG4gICAgICAgICAgY2FzZSAxMDM6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LScgKyBhLnJlcGxhY2UoJy1ncm93JywgJycpICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2dyb3cnLCAncG9zaXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnc2hyaW5rJywgJ25lZ2F0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnYmFzaXMnLCAncHJlZmVycmVkLXNpemUnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTY0OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMjM6XG4gICAgICAgIGlmICg5OSAhPT0gYS5jaGFyQ29kZUF0KDgpKSBicmVhaztcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKGEuaW5kZXhPZignOicsIDE1KSkucmVwbGFjZSgnZmxleC0nLCAnJykucmVwbGFjZSgnc3BhY2UtYmV0d2VlbicsICdqdXN0aWZ5Jyk7XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtcGFjaycgKyBiICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtcGFjaycgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDA1OlxuICAgICAgICByZXR1cm4ga2EudGVzdChhKSA/IGEucmVwbGFjZShhYSwgJzotd2Via2l0LScpICsgYS5yZXBsYWNlKGFhLCAnOi1tb3otJykgKyBhIDogYTtcblxuICAgICAgY2FzZSAxZTM6XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZygxMykudHJpbSgpO1xuICAgICAgICBjID0gYi5pbmRleE9mKCctJykgKyAxO1xuXG4gICAgICAgIHN3aXRjaCAoYi5jaGFyQ29kZUF0KDApICsgYi5jaGFyQ29kZUF0KGMpKSB7XG4gICAgICAgICAgY2FzZSAyMjY6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0YicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIzMjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiLXJsJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAnbHInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAxNzpcbiAgICAgICAgaWYgKC0xID09PSBhLmluZGV4T2YoJ3N0aWNreScsIDkpKSBicmVhaztcblxuICAgICAgY2FzZSA5NzU6XG4gICAgICAgIGMgPSAoYSA9IGQpLmxlbmd0aCAtIDEwO1xuICAgICAgICBiID0gKDMzID09PSBhLmNoYXJDb2RlQXQoYykgPyBhLnN1YnN0cmluZygwLCBjKSA6IGEpLnN1YnN0cmluZyhkLmluZGV4T2YoJzonLCA3KSArIDEpLnRyaW0oKTtcblxuICAgICAgICBzd2l0Y2ggKG0gPSBiLmNoYXJDb2RlQXQoMCkgKyAoYi5jaGFyQ29kZUF0KDcpIHwgMCkpIHtcbiAgICAgICAgICBjYXNlIDIwMzpcbiAgICAgICAgICAgIGlmICgxMTEgPiBiLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGE7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjA3OlxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgKDEwMiA8IG0gPyAnaW5saW5lLScgOiAnJykgKyAnYm94JykgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYS5yZXBsYWNlKGIsICctbXMtJyArIGIgKyAnYm94JykgKyAnOycgKyBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGEgKyAnOyc7XG5cbiAgICAgIGNhc2UgOTM4OlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg1KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNikpIHtcbiAgICAgICAgICBjYXNlIDEwNTpcbiAgICAgICAgICAgIHJldHVybiBiID0gYS5yZXBsYWNlKCctaXRlbXMnLCAnJyksICctd2Via2l0LScgKyBhICsgJy13ZWJraXQtYm94LScgKyBiICsgJy1tcy1mbGV4LScgKyBiICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWl0ZW0tJyArIGEucmVwbGFjZShiYSwgJycpICsgYTtcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtbGluZS1wYWNrJyArIGEucmVwbGFjZSgnYWxpZ24tY29udGVudCcsICcnKS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3MzpcbiAgICAgIGNhc2UgOTg5OlxuICAgICAgICBpZiAoNDUgIT09IGEuY2hhckNvZGVBdCgzKSB8fCAxMjIgPT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMxOlxuICAgICAgY2FzZSA5NTM6XG4gICAgICAgIGlmICghMCA9PT0gbGEudGVzdChkKSkgcmV0dXJuIDExNSA9PT0gKGIgPSBkLnN1YnN0cmluZyhkLmluZGV4T2YoJzonKSArIDEpKS5jaGFyQ29kZUF0KDApID8gUChkLnJlcGxhY2UoJ3N0cmV0Y2gnLCAnZmlsbC1hdmFpbGFibGUnKSwgYywgZSwgaCkucmVwbGFjZSgnOmZpbGwtYXZhaWxhYmxlJywgJzpzdHJldGNoJykgOiBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgYS5yZXBsYWNlKGIsICctbW96LScgKyBiLnJlcGxhY2UoJ2ZpbGwtJywgJycpKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2MjpcbiAgICAgICAgaWYgKGEgPSAnLXdlYmtpdC0nICsgYSArICgxMDIgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctbXMtJyArIGEgOiAnJykgKyBhLCAyMTEgPT09IGUgKyBoICYmIDEwNSA9PT0gYS5jaGFyQ29kZUF0KDEzKSAmJiAwIDwgYS5pbmRleE9mKCd0cmFuc2Zvcm0nLCAxMCkpIHJldHVybiBhLnN1YnN0cmluZygwLCBhLmluZGV4T2YoJzsnLCAyNykgKyAxKS5yZXBsYWNlKG1hLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgIH1cblxuICAgIHJldHVybiBhO1xuICB9XG5cbiAgZnVuY3Rpb24gTChkLCBjKSB7XG4gICAgdmFyIGUgPSBkLmluZGV4T2YoMSA9PT0gYyA/ICc6JyA6ICd7JyksXG4gICAgICAgIGggPSBkLnN1YnN0cmluZygwLCAzICE9PSBjID8gZSA6IDEwKTtcbiAgICBlID0gZC5zdWJzdHJpbmcoZSArIDEsIGQubGVuZ3RoIC0gMSk7XG4gICAgcmV0dXJuIFIoMiAhPT0gYyA/IGggOiBoLnJlcGxhY2UobmEsICckMScpLCBlLCBjKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVhKGQsIGMpIHtcbiAgICB2YXIgZSA9IFAoYywgYy5jaGFyQ29kZUF0KDApLCBjLmNoYXJDb2RlQXQoMSksIGMuY2hhckNvZGVBdCgyKSk7XG4gICAgcmV0dXJuIGUgIT09IGMgKyAnOycgPyBlLnJlcGxhY2Uob2EsICcgb3IgKCQxKScpLnN1YnN0cmluZyg0KSA6ICcoJyArIGMgKyAnKSc7XG4gIH1cblxuICBmdW5jdGlvbiBIKGQsIGMsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpIHtcbiAgICBmb3IgKHZhciBnID0gMCwgeCA9IGMsIHc7IGcgPCBBOyArK2cpIHtcbiAgICAgIHN3aXRjaCAodyA9IFNbZ10uY2FsbChCLCBkLCB4LCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSkge1xuICAgICAgICBjYXNlIHZvaWQgMDpcbiAgICAgICAgY2FzZSAhMTpcbiAgICAgICAgY2FzZSAhMDpcbiAgICAgICAgY2FzZSBudWxsOlxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeCA9IHc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHggIT09IGMpIHJldHVybiB4O1xuICB9XG5cbiAgZnVuY3Rpb24gVChkKSB7XG4gICAgc3dpdGNoIChkKSB7XG4gICAgICBjYXNlIHZvaWQgMDpcbiAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgQSA9IFMubGVuZ3RoID0gMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZCkgU1tBKytdID0gZDtlbHNlIGlmICgnb2JqZWN0JyA9PT0gdHlwZW9mIGQpIGZvciAodmFyIGMgPSAwLCBlID0gZC5sZW5ndGg7IGMgPCBlOyArK2MpIHtcbiAgICAgICAgICBUKGRbY10pO1xuICAgICAgICB9IGVsc2UgWSA9ICEhZCB8IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIFQ7XG4gIH1cblxuICBmdW5jdGlvbiBVKGQpIHtcbiAgICBkID0gZC5wcmVmaXg7XG4gICAgdm9pZCAwICE9PSBkICYmIChSID0gbnVsbCwgZCA/ICdmdW5jdGlvbicgIT09IHR5cGVvZiBkID8gdyA9IDEgOiAodyA9IDIsIFIgPSBkKSA6IHcgPSAwKTtcbiAgICByZXR1cm4gVTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEIoZCwgYykge1xuICAgIHZhciBlID0gZDtcbiAgICAzMyA+IGUuY2hhckNvZGVBdCgwKSAmJiAoZSA9IGUudHJpbSgpKTtcbiAgICBWID0gZTtcbiAgICBlID0gW1ZdO1xuXG4gICAgaWYgKDAgPCBBKSB7XG4gICAgICB2YXIgaCA9IEgoLTEsIGMsIGUsIGUsIEQsIHosIDAsIDAsIDAsIDApO1xuICAgICAgdm9pZCAwICE9PSBoICYmICdzdHJpbmcnID09PSB0eXBlb2YgaCAmJiAoYyA9IGgpO1xuICAgIH1cblxuICAgIHZhciBhID0gTShPLCBlLCBjLCAwLCAwKTtcbiAgICAwIDwgQSAmJiAoaCA9IEgoLTIsIGEsIGUsIGUsIEQsIHosIGEubGVuZ3RoLCAwLCAwLCAwKSwgdm9pZCAwICE9PSBoICYmIChhID0gaCkpO1xuICAgIFYgPSAnJztcbiAgICBFID0gMDtcbiAgICB6ID0gRCA9IDE7XG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICB2YXIgY2EgPSAvXlxcMCsvZyxcbiAgICAgIE4gPSAvW1xcMFxcclxcZl0vZyxcbiAgICAgIGFhID0gLzogKi9nLFxuICAgICAga2EgPSAvem9vfGdyYS8sXG4gICAgICBtYSA9IC8oWyw6IF0pKHRyYW5zZm9ybSkvZyxcbiAgICAgIGlhID0gLyxcXHIrPy9nLFxuICAgICAgRiA9IC8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLFxuICAgICAgZmEgPSAvQChrXFx3KylcXHMqKFxcUyopXFxzKi8sXG4gICAgICBRID0gLzo6KHBsYWNlKS9nLFxuICAgICAgaGEgPSAvOihyZWFkLW9ubHkpL2csXG4gICAgICBHID0gL1tzdmhdXFx3Ky1bdGJscl17Mn0vLFxuICAgICAgZGEgPSAvXFwoXFxzKiguKilcXHMqXFwpL2csXG4gICAgICBvYSA9IC8oW1xcc1xcU10qPyk7L2csXG4gICAgICBiYSA9IC8tc2VsZnxmbGV4LS9nLFxuICAgICAgbmEgPSAvW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8sXG4gICAgICBsYSA9IC9zdHJldGNofDpcXHMqXFx3K1xcLSg/OmNvbnRlfGF2YWlsKS8sXG4gICAgICBqYSA9IC8oW14tXSkoaW1hZ2Utc2V0XFwoKS8sXG4gICAgICB6ID0gMSxcbiAgICAgIEQgPSAxLFxuICAgICAgRSA9IDAsXG4gICAgICB3ID0gMSxcbiAgICAgIE8gPSBbXSxcbiAgICAgIFMgPSBbXSxcbiAgICAgIEEgPSAwLFxuICAgICAgUiA9IG51bGwsXG4gICAgICBZID0gMCxcbiAgICAgIFYgPSAnJztcbiAgQi51c2UgPSBUO1xuICBCLnNldCA9IFU7XG4gIHZvaWQgMCAhPT0gVyAmJiBVKFcpO1xuICByZXR1cm4gQjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGlzX21pbjtcbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCJpbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIHJlYWN0UHJvcHNSZWdleCA9IC9eKChjaGlsZHJlbnxkYW5nZXJvdXNseVNldElubmVySFRNTHxrZXl8cmVmfGF1dG9Gb2N1c3xkZWZhdWx0VmFsdWV8ZGVmYXVsdENoZWNrZWR8aW5uZXJIVE1MfHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ3xzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmd8dmFsdWVMaW5rfGFjY2VwdHxhY2NlcHRDaGFyc2V0fGFjY2Vzc0tleXxhY3Rpb258YWxsb3d8YWxsb3dVc2VyTWVkaWF8YWxsb3dQYXltZW50UmVxdWVzdHxhbGxvd0Z1bGxTY3JlZW58YWxsb3dUcmFuc3BhcmVuY3l8YWx0fGFzeW5jfGF1dG9Db21wbGV0ZXxhdXRvUGxheXxjYXB0dXJlfGNlbGxQYWRkaW5nfGNlbGxTcGFjaW5nfGNoYWxsZW5nZXxjaGFyU2V0fGNoZWNrZWR8Y2l0ZXxjbGFzc0lEfGNsYXNzTmFtZXxjb2xzfGNvbFNwYW58Y29udGVudHxjb250ZW50RWRpdGFibGV8Y29udGV4dE1lbnV8Y29udHJvbHN8Y29udHJvbHNMaXN0fGNvb3Jkc3xjcm9zc09yaWdpbnxkYXRhfGRhdGVUaW1lfGRlY29kaW5nfGRlZmF1bHR8ZGVmZXJ8ZGlyfGRpc2FibGVkfGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlfGRvd25sb2FkfGRyYWdnYWJsZXxlbmNUeXBlfGZvcm18Zm9ybUFjdGlvbnxmb3JtRW5jVHlwZXxmb3JtTWV0aG9kfGZvcm1Ob1ZhbGlkYXRlfGZvcm1UYXJnZXR8ZnJhbWVCb3JkZXJ8aGVhZGVyc3xoZWlnaHR8aGlkZGVufGhpZ2h8aHJlZnxocmVmTGFuZ3xodG1sRm9yfGh0dHBFcXVpdnxpZHxpbnB1dE1vZGV8aW50ZWdyaXR5fGlzfGtleVBhcmFtc3xrZXlUeXBlfGtpbmR8bGFiZWx8bGFuZ3xsaXN0fGxvYWRpbmd8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpbmVydHxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8b258cmVzdWx0c3xzZWN1cml0eXx1bnNlbGVjdGFibGV8YWNjZW50SGVpZ2h0fGFjY3VtdWxhdGV8YWRkaXRpdmV8YWxpZ25tZW50QmFzZWxpbmV8YWxsb3dSZW9yZGVyfGFscGhhYmV0aWN8YW1wbGl0dWRlfGFyYWJpY0Zvcm18YXNjZW50fGF0dHJpYnV0ZU5hbWV8YXR0cmlidXRlVHlwZXxhdXRvUmV2ZXJzZXxhemltdXRofGJhc2VGcmVxdWVuY3l8YmFzZWxpbmVTaGlmdHxiYXNlUHJvZmlsZXxiYm94fGJlZ2lufGJpYXN8Ynl8Y2FsY01vZGV8Y2FwSGVpZ2h0fGNsaXB8Y2xpcFBhdGhVbml0c3xjbGlwUGF0aHxjbGlwUnVsZXxjb2xvckludGVycG9sYXRpb258Y29sb3JJbnRlcnBvbGF0aW9uRmlsdGVyc3xjb2xvclByb2ZpbGV8Y29sb3JSZW5kZXJpbmd8Y29udGVudFNjcmlwdFR5cGV8Y29udGVudFN0eWxlVHlwZXxjdXJzb3J8Y3h8Y3l8ZHxkZWNlbGVyYXRlfGRlc2NlbnR8ZGlmZnVzZUNvbnN0YW50fGRpcmVjdGlvbnxkaXNwbGF5fGRpdmlzb3J8ZG9taW5hbnRCYXNlbGluZXxkdXJ8ZHh8ZHl8ZWRnZU1vZGV8ZWxldmF0aW9ufGVuYWJsZUJhY2tncm91bmR8ZW5kfGV4cG9uZW50fGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWR8ZmlsbHxmaWxsT3BhY2l0eXxmaWxsUnVsZXxmaWx0ZXJ8ZmlsdGVyUmVzfGZpbHRlclVuaXRzfGZsb29kQ29sb3J8Zmxvb2RPcGFjaXR5fGZvY3VzYWJsZXxmb250RmFtaWx5fGZvbnRTaXplfGZvbnRTaXplQWRqdXN0fGZvbnRTdHJldGNofGZvbnRTdHlsZXxmb250VmFyaWFudHxmb250V2VpZ2h0fGZvcm1hdHxmcm9tfGZyfGZ4fGZ5fGcxfGcyfGdseXBoTmFtZXxnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbHxnbHlwaE9yaWVudGF0aW9uVmVydGljYWx8Z2x5cGhSZWZ8Z3JhZGllbnRUcmFuc2Zvcm18Z3JhZGllbnRVbml0c3xoYW5naW5nfGhvcml6QWR2WHxob3Jpek9yaWdpblh8aWRlb2dyYXBoaWN8aW1hZ2VSZW5kZXJpbmd8aW58aW4yfGludGVyY2VwdHxrfGsxfGsyfGszfGs0fGtlcm5lbE1hdHJpeHxrZXJuZWxVbml0TGVuZ3RofGtlcm5pbmd8a2V5UG9pbnRzfGtleVNwbGluZXN8a2V5VGltZXN8bGVuZ3RoQWRqdXN0fGxldHRlclNwYWNpbmd8bGlnaHRpbmdDb2xvcnxsaW1pdGluZ0NvbmVBbmdsZXxsb2NhbHxtYXJrZXJFbmR8bWFya2VyTWlkfG1hcmtlclN0YXJ0fG1hcmtlckhlaWdodHxtYXJrZXJVbml0c3xtYXJrZXJXaWR0aHxtYXNrfG1hc2tDb250ZW50VW5pdHN8bWFza1VuaXRzfG1hdGhlbWF0aWNhbHxtb2RlfG51bU9jdGF2ZXN8b2Zmc2V0fG9wYWNpdHl8b3BlcmF0b3J8b3JkZXJ8b3JpZW50fG9yaWVudGF0aW9ufG9yaWdpbnxvdmVyZmxvd3xvdmVybGluZVBvc2l0aW9ufG92ZXJsaW5lVGhpY2tuZXNzfHBhbm9zZTF8cGFpbnRPcmRlcnxwYXRoTGVuZ3RofHBhdHRlcm5Db250ZW50VW5pdHN8cGF0dGVyblRyYW5zZm9ybXxwYXR0ZXJuVW5pdHN8cG9pbnRlckV2ZW50c3xwb2ludHN8cG9pbnRzQXRYfHBvaW50c0F0WXxwb2ludHNBdFp8cHJlc2VydmVBbHBoYXxwcmVzZXJ2ZUFzcGVjdFJhdGlvfHByaW1pdGl2ZVVuaXRzfHJ8cmFkaXVzfHJlZlh8cmVmWXxyZW5kZXJpbmdJbnRlbnR8cmVwZWF0Q291bnR8cmVwZWF0RHVyfHJlcXVpcmVkRXh0ZW5zaW9uc3xyZXF1aXJlZEZlYXR1cmVzfHJlc3RhcnR8cmVzdWx0fHJvdGF0ZXxyeHxyeXxzY2FsZXxzZWVkfHNoYXBlUmVuZGVyaW5nfHNsb3BlfHNwYWNpbmd8c3BlY3VsYXJDb25zdGFudHxzcGVjdWxhckV4cG9uZW50fHNwZWVkfHNwcmVhZE1ldGhvZHxzdGFydE9mZnNldHxzdGREZXZpYXRpb258c3RlbWh8c3RlbXZ8c3RpdGNoVGlsZXN8c3RvcENvbG9yfHN0b3BPcGFjaXR5fHN0cmlrZXRocm91Z2hQb3NpdGlvbnxzdHJpa2V0aHJvdWdoVGhpY2tuZXNzfHN0cmluZ3xzdHJva2V8c3Ryb2tlRGFzaGFycmF5fHN0cm9rZURhc2hvZmZzZXR8c3Ryb2tlTGluZWNhcHxzdHJva2VMaW5lam9pbnxzdHJva2VNaXRlcmxpbWl0fHN0cm9rZU9wYWNpdHl8c3Ryb2tlV2lkdGh8c3VyZmFjZVNjYWxlfHN5c3RlbUxhbmd1YWdlfHRhYmxlVmFsdWVzfHRhcmdldFh8dGFyZ2V0WXx0ZXh0QW5jaG9yfHRleHREZWNvcmF0aW9ufHRleHRSZW5kZXJpbmd8dGV4dExlbmd0aHx0b3x0cmFuc2Zvcm18dTF8dTJ8dW5kZXJsaW5lUG9zaXRpb258dW5kZXJsaW5lVGhpY2tuZXNzfHVuaWNvZGV8dW5pY29kZUJpZGl8dW5pY29kZVJhbmdlfHVuaXRzUGVyRW18dkFscGhhYmV0aWN8dkhhbmdpbmd8dklkZW9ncmFwaGljfHZNYXRoZW1hdGljYWx8dmFsdWVzfHZlY3RvckVmZmVjdHx2ZXJzaW9ufHZlcnRBZHZZfHZlcnRPcmlnaW5YfHZlcnRPcmlnaW5ZfHZpZXdCb3h8dmlld1RhcmdldHx2aXNpYmlsaXR5fHdpZHRoc3x3b3JkU3BhY2luZ3x3cml0aW5nTW9kZXx4fHhIZWlnaHR8eDF8eDJ8eENoYW5uZWxTZWxlY3Rvcnx4bGlua0FjdHVhdGV8eGxpbmtBcmNyb2xlfHhsaW5rSHJlZnx4bGlua1JvbGV8eGxpbmtTaG93fHhsaW5rVGl0bGV8eGxpbmtUeXBlfHhtbEJhc2V8eG1sbnN8eG1sbnNYbGlua3x4bWxMYW5nfHhtbFNwYWNlfHl8eTF8eTJ8eUNoYW5uZWxTZWxlY3Rvcnx6fHpvb21BbmRQYW58Zm9yfGNsYXNzfGF1dG9mb2N1cyl8KChbRGRdW0FhXVtUdF1bQWFdfFtBYV1bUnJdW0lpXVtBYV18eCktLiopKSQvOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZmVlNjhhNGNkN2U2MDA5ZWY2MWQyM1xuXG52YXIgaW5kZXggPSBtZW1vaXplKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHJldHVybiByZWFjdFByb3BzUmVnZXgudGVzdChwcm9wKSB8fCBwcm9wLmNoYXJDb2RlQXQoMCkgPT09IDExMVxuICAvKiBvICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgxKSA9PT0gMTEwXG4gIC8qIG4gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDIpIDwgOTE7XG59XG4vKiBaKzEgKi9cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiIsImltcG9ydHt0eXBlT2YgYXMgZSxpc0VsZW1lbnQgYXMgdCxpc1ZhbGlkRWxlbWVudFR5cGUgYXMgbn1mcm9tXCJyZWFjdC1pc1wiO2ltcG9ydCByLHt1c2VTdGF0ZSBhcyBvLHVzZUNvbnRleHQgYXMgaSx1c2VNZW1vIGFzIHMsdXNlRWZmZWN0IGFzIGEsdXNlUmVmIGFzIGMsY3JlYXRlRWxlbWVudCBhcyB1LHVzZURlYnVnVmFsdWUgYXMgbCx1c2VMYXlvdXRFZmZlY3QgYXMgZH1mcm9tXCJyZWFjdFwiO2ltcG9ydCBoIGZyb21cInNoYWxsb3dlcXVhbFwiO2ltcG9ydCBwIGZyb21cIkBlbW90aW9uL3N0eWxpc1wiO2ltcG9ydCBmIGZyb21cIkBlbW90aW9uL3VuaXRsZXNzXCI7aW1wb3J0IG0gZnJvbVwiQGVtb3Rpb24vaXMtcHJvcC12YWxpZFwiO2ltcG9ydCB5IGZyb21cImhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzXCI7ZnVuY3Rpb24gdigpe3JldHVybih2PU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGc9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49W2VbMF1dLHI9MCxvPXQubGVuZ3RoO3I8bztyKz0xKW4ucHVzaCh0W3JdLGVbcisxXSk7cmV0dXJuIG59LFM9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJbb2JqZWN0IE9iamVjdF1cIj09PSh0LnRvU3RyaW5nP3QudG9TdHJpbmcoKTpPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpJiYhZSh0KX0sdz1PYmplY3QuZnJlZXplKFtdKSxFPU9iamVjdC5mcmVlemUoe30pO2Z1bmN0aW9uIGIoZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZX1mdW5jdGlvbiBfKGUpe3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwic3RyaW5nXCI9PXR5cGVvZiBlJiZlfHxlLmRpc3BsYXlOYW1lfHxlLm5hbWV8fFwiQ29tcG9uZW50XCJ9ZnVuY3Rpb24gTihlKXtyZXR1cm4gZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUuc3R5bGVkQ29tcG9uZW50SWR9dmFyIEE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJihwcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfQVRUUnx8cHJvY2Vzcy5lbnYuU0NfQVRUUil8fFwiZGF0YS1zdHlsZWRcIixDPVwiNS4yLjNcIixJPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJlwiSFRNTEVsZW1lbnRcImluIHdpbmRvdyxQPUJvb2xlYW4oXCJib29sZWFuXCI9PXR5cGVvZiBTQ19ESVNBQkxFX1NQRUVEWT9TQ19ESVNBQkxFX1NQRUVEWTpcInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmdm9pZCAwIT09cHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZJiZcIlwiIT09cHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZP1wiZmFsc2VcIiE9PXByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSYmcHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiZ2b2lkIDAhPT1wcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWSYmXCJcIiE9PXByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZP1wiZmFsc2VcIiE9PXByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZJiZwcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWTpcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WKSxPPXt9LFI9XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj97MTpcIkNhbm5vdCBjcmVhdGUgc3R5bGVkLWNvbXBvbmVudCBmb3IgY29tcG9uZW50OiAlcy5cXG5cXG5cIiwyOlwiQ2FuJ3QgY29sbGVjdCBzdHlsZXMgb25jZSB5b3UndmUgY29uc3VtZWQgYSBgU2VydmVyU3R5bGVTaGVldGAncyBzdHlsZXMhIGBTZXJ2ZXJTdHlsZVNoZWV0YCBpcyBhIG9uZSBvZmYgaW5zdGFuY2UgZm9yIGVhY2ggc2VydmVyLXNpZGUgcmVuZGVyIGN5Y2xlLlxcblxcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcmV1c2UgaXQgYWNyb3NzIHJlbmRlcnM/XFxuLSBBcmUgeW91IGFjY2lkZW50YWxseSBjYWxsaW5nIGNvbGxlY3RTdHlsZXMgdHdpY2U/XFxuXFxuXCIsMzpcIlN0cmVhbWluZyBTU1IgaXMgb25seSBzdXBwb3J0ZWQgaW4gYSBOb2RlLmpzIGVudmlyb25tZW50OyBQbGVhc2UgZG8gbm90IHRyeSB0byBjYWxsIHRoaXMgbWV0aG9kIGluIHRoZSBicm93c2VyLlxcblxcblwiLDQ6XCJUaGUgYFN0eWxlU2hlZXRNYW5hZ2VyYCBleHBlY3RzIGEgdmFsaWQgdGFyZ2V0IG9yIHNoZWV0IHByb3AhXFxuXFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIGNsaWVudCBhbmQgaXMgeW91ciB0YXJnZXQgZmFsc3k/XFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIHNlcnZlciBhbmQgaXMgdGhlIHNoZWV0IGZhbHN5P1xcblxcblwiLDU6XCJUaGUgY2xvbmUgbWV0aG9kIGNhbm5vdCBiZSB1c2VkIG9uIHRoZSBjbGllbnQhXFxuXFxuLSBBcmUgeW91IHJ1bm5pbmcgaW4gYSBjbGllbnQtbGlrZSBlbnZpcm9ubWVudCBvbiB0aGUgc2VydmVyP1xcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcnVuIFNTUiBvbiB0aGUgY2xpZW50P1xcblxcblwiLDY6XCJUcnlpbmcgdG8gaW5zZXJ0IGEgbmV3IHN0eWxlIHRhZywgYnV0IHRoZSBnaXZlbiBOb2RlIGlzIHVubW91bnRlZCFcXG5cXG4tIEFyZSB5b3UgdXNpbmcgYSBjdXN0b20gdGFyZ2V0IHRoYXQgaXNuJ3QgbW91bnRlZD9cXG4tIERvZXMgeW91ciBkb2N1bWVudCBub3QgaGF2ZSBhIHZhbGlkIGhlYWQgZWxlbWVudD9cXG4tIEhhdmUgeW91IGFjY2lkZW50YWxseSByZW1vdmVkIGEgc3R5bGUgdGFnIG1hbnVhbGx5P1xcblxcblwiLDc6J1RoZW1lUHJvdmlkZXI6IFBsZWFzZSByZXR1cm4gYW4gb2JqZWN0IGZyb20geW91ciBcInRoZW1lXCIgcHJvcCBmdW5jdGlvbiwgZS5nLlxcblxcbmBgYGpzXFxudGhlbWU9eygpID0+ICh7fSl9XFxuYGBgXFxuXFxuJyw4OidUaGVtZVByb3ZpZGVyOiBQbGVhc2UgbWFrZSB5b3VyIFwidGhlbWVcIiBwcm9wIGFuIG9iamVjdC5cXG5cXG4nLDk6XCJNaXNzaW5nIGRvY3VtZW50IGA8aGVhZD5gXFxuXFxuXCIsMTA6XCJDYW5ub3QgZmluZCBhIFN0eWxlU2hlZXQgaW5zdGFuY2UuIFVzdWFsbHkgdGhpcyBoYXBwZW5zIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSBjb3BpZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgbG9hZGVkIGF0IG9uY2UuIENoZWNrIG91dCB0aGlzIGlzc3VlIGZvciBob3cgdG8gdHJvdWJsZXNob290IGFuZCBmaXggdGhlIGNvbW1vbiBjYXNlcyB3aGVyZSB0aGlzIHNpdHVhdGlvbiBjYW4gaGFwcGVuOiBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvaXNzdWVzLzE5NDEjaXNzdWVjb21tZW50LTQxNzg2MjAyMVxcblxcblwiLDExOlwiX1RoaXMgZXJyb3Igd2FzIHJlcGxhY2VkIHdpdGggYSBkZXYtdGltZSB3YXJuaW5nLCBpdCB3aWxsIGJlIGRlbGV0ZWQgZm9yIHY0IGZpbmFsLl8gW2NyZWF0ZUdsb2JhbFN0eWxlXSByZWNlaXZlZCBjaGlsZHJlbiB3aGljaCB3aWxsIG5vdCBiZSByZW5kZXJlZC4gUGxlYXNlIHVzZSB0aGUgY29tcG9uZW50IHdpdGhvdXQgcGFzc2luZyBjaGlsZHJlbiBlbGVtZW50cy5cXG5cXG5cIiwxMjpcIkl0IHNlZW1zIHlvdSBhcmUgaW50ZXJwb2xhdGluZyBhIGtleWZyYW1lIGRlY2xhcmF0aW9uICglcykgaW50byBhbiB1bnRhZ2dlZCBzdHJpbmcuIFRoaXMgd2FzIHN1cHBvcnRlZCBpbiBzdHlsZWQtY29tcG9uZW50cyB2MywgYnV0IGlzIG5vdCBsb25nZXIgc3VwcG9ydGVkIGluIHY0IGFzIGtleWZyYW1lcyBhcmUgbm93IGluamVjdGVkIG9uLWRlbWFuZC4gUGxlYXNlIHdyYXAgeW91ciBzdHJpbmcgaW4gdGhlIGNzc1xcXFxgXFxcXGAgaGVscGVyIHdoaWNoIGVuc3VyZXMgdGhlIHN0eWxlcyBhcmUgaW5qZWN0ZWQgY29ycmVjdGx5LiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYXBpI2Nzc1xcblxcblwiLDEzOlwiJXMgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLlxcblxcblwiLDE0OidUaGVtZVByb3ZpZGVyOiBcInRoZW1lXCIgcHJvcCBpcyByZXF1aXJlZC5cXG5cXG4nLDE1OlwiQSBzdHlsaXMgcGx1Z2luIGhhcyBiZWVuIHN1cHBsaWVkIHRoYXQgaXMgbm90IG5hbWVkLiBXZSBuZWVkIGEgbmFtZSBmb3IgZWFjaCBwbHVnaW4gdG8gYmUgYWJsZSB0byBwcmV2ZW50IHN0eWxpbmcgY29sbGlzaW9ucyBiZXR3ZWVuIGRpZmZlcmVudCBzdHlsaXMgY29uZmlndXJhdGlvbnMgd2l0aGluIHRoZSBzYW1lIGFwcC4gQmVmb3JlIHlvdSBwYXNzIHlvdXIgcGx1Z2luIHRvIGA8U3R5bGVTaGVldE1hbmFnZXIgc3R5bGlzUGx1Z2lucz17W119PmAsIHBsZWFzZSBtYWtlIHN1cmUgZWFjaCBwbHVnaW4gaXMgdW5pcXVlbHktbmFtZWQsIGUuZy5cXG5cXG5gYGBqc1xcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbXBvcnRlZFBsdWdpbiwgJ25hbWUnLCB7IHZhbHVlOiAnc29tZS11bmlxdWUtbmFtZScgfSk7XFxuYGBgXFxuXFxuXCIsMTY6XCJSZWFjaGVkIHRoZSBsaW1pdCBvZiBob3cgbWFueSBzdHlsZWQgY29tcG9uZW50cyBtYXkgYmUgY3JlYXRlZCBhdCBncm91cCAlcy5cXG5Zb3UgbWF5IG9ubHkgY3JlYXRlIHVwIHRvIDEsMDczLDc0MSw4MjQgY29tcG9uZW50cy4gSWYgeW91J3JlIGNyZWF0aW5nIGNvbXBvbmVudHMgZHluYW1pY2FsbHksXFxuYXMgZm9yIGluc3RhbmNlIGluIHlvdXIgcmVuZGVyIG1ldGhvZCB0aGVuIHlvdSBtYXkgYmUgcnVubmluZyBpbnRvIHRoaXMgbGltaXRhdGlvbi5cXG5cXG5cIiwxNzpcIkNTU1N0eWxlU2hlZXQgY291bGQgbm90IGJlIGZvdW5kIG9uIEhUTUxTdHlsZUVsZW1lbnQuXFxuSGFzIHN0eWxlZC1jb21wb25lbnRzJyBzdHlsZSB0YWcgYmVlbiB1bm1vdW50ZWQgb3IgYWx0ZXJlZCBieSBhbm90aGVyIHNjcmlwdD9cXG5cIn06e307ZnVuY3Rpb24gRCgpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0sdD1bXSxuPTEscj1hcmd1bWVudHMubGVuZ3RoO248cjtuKz0xKXQucHVzaChuPDB8fGFyZ3VtZW50cy5sZW5ndGg8PW4/dm9pZCAwOmFyZ3VtZW50c1tuXSk7cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZT1lLnJlcGxhY2UoLyVbYS16XS8sdCl9KSksZX1mdW5jdGlvbiBqKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTt0aHJvd1wicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/bmV3IEVycm9yKFwiQW4gZXJyb3Igb2NjdXJyZWQuIFNlZSBodHRwczovL2dpdC5pby9KVUlhRSNcIitlK1wiIGZvciBtb3JlIGluZm9ybWF0aW9uLlwiKyhuLmxlbmd0aD4wP1wiIEFyZ3M6IFwiK24uam9pbihcIiwgXCIpOlwiXCIpKTpuZXcgRXJyb3IoRC5hcHBseSh2b2lkIDAsW1JbZV1dLmNvbmNhdChuKSkudHJpbSgpKX12YXIgVD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5ncm91cFNpemVzPW5ldyBVaW50MzJBcnJheSg1MTIpLHRoaXMubGVuZ3RoPTUxMix0aGlzLnRhZz1lfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmluZGV4T2ZHcm91cD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MCxuPTA7bjxlO24rKyl0Kz10aGlzLmdyb3VwU2l6ZXNbbl07cmV0dXJuIHR9LHQuaW5zZXJ0UnVsZXM9ZnVuY3Rpb24oZSx0KXtpZihlPj10aGlzLmdyb3VwU2l6ZXMubGVuZ3RoKXtmb3IodmFyIG49dGhpcy5ncm91cFNpemVzLHI9bi5sZW5ndGgsbz1yO2U+PW87KShvPDw9MSk8MCYmaigxNixcIlwiK2UpO3RoaXMuZ3JvdXBTaXplcz1uZXcgVWludDMyQXJyYXkobyksdGhpcy5ncm91cFNpemVzLnNldChuKSx0aGlzLmxlbmd0aD1vO2Zvcih2YXIgaT1yO2k8bztpKyspdGhpcy5ncm91cFNpemVzW2ldPTB9Zm9yKHZhciBzPXRoaXMuaW5kZXhPZkdyb3VwKGUrMSksYT0wLGM9dC5sZW5ndGg7YTxjO2ErKyl0aGlzLnRhZy5pbnNlcnRSdWxlKHMsdFthXSkmJih0aGlzLmdyb3VwU2l6ZXNbZV0rKyxzKyspfSx0LmNsZWFyR3JvdXA9ZnVuY3Rpb24oZSl7aWYoZTx0aGlzLmxlbmd0aCl7dmFyIHQ9dGhpcy5ncm91cFNpemVzW2VdLG49dGhpcy5pbmRleE9mR3JvdXAoZSkscj1uK3Q7dGhpcy5ncm91cFNpemVzW2VdPTA7Zm9yKHZhciBvPW47bzxyO28rKyl0aGlzLnRhZy5kZWxldGVSdWxlKG4pfX0sdC5nZXRHcm91cD1mdW5jdGlvbihlKXt2YXIgdD1cIlwiO2lmKGU+PXRoaXMubGVuZ3RofHwwPT09dGhpcy5ncm91cFNpemVzW2VdKXJldHVybiB0O2Zvcih2YXIgbj10aGlzLmdyb3VwU2l6ZXNbZV0scj10aGlzLmluZGV4T2ZHcm91cChlKSxvPXIrbixpPXI7aTxvO2krKyl0Kz10aGlzLnRhZy5nZXRSdWxlKGkpK1wiLyohc2MqL1xcblwiO3JldHVybiB0fSxlfSgpLGs9bmV3IE1hcCx4PW5ldyBNYXAsVj0xLEI9ZnVuY3Rpb24oZSl7aWYoay5oYXMoZSkpcmV0dXJuIGsuZ2V0KGUpO2Zvcig7eC5oYXMoVik7KVYrKzt2YXIgdD1WKys7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKCgwfHQpPDB8fHQ+MTw8MzApJiZqKDE2LFwiXCIrdCksay5zZXQoZSx0KSx4LnNldCh0LGUpLHR9LE09ZnVuY3Rpb24oZSl7cmV0dXJuIHguZ2V0KGUpfSx6PWZ1bmN0aW9uKGUsdCl7ay5zZXQoZSx0KSx4LnNldCh0LGUpfSxMPVwic3R5bGVbXCIrQSsnXVtkYXRhLXN0eWxlZC12ZXJzaW9uPVwiNS4yLjNcIl0nLEc9bmV3IFJlZ0V4cChcIl5cIitBKydcXFxcLmcoXFxcXGQrKVxcXFxbaWQ9XCIoW1xcXFx3XFxcXGQtXSspXCJcXFxcXS4qP1wiKFteXCJdKiknKSxGPWZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHIsbz1uLnNwbGl0KFwiLFwiKSxpPTAscz1vLmxlbmd0aDtpPHM7aSsrKShyPW9baV0pJiZlLnJlZ2lzdGVyTmFtZSh0LHIpfSxZPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXQuaW5uZXJIVE1MLnNwbGl0KFwiLyohc2MqL1xcblwiKSxyPVtdLG89MCxpPW4ubGVuZ3RoO288aTtvKyspe3ZhciBzPW5bb10udHJpbSgpO2lmKHMpe3ZhciBhPXMubWF0Y2goRyk7aWYoYSl7dmFyIGM9MHxwYXJzZUludChhWzFdLDEwKSx1PWFbMl07MCE9PWMmJih6KHUsYyksRihlLHUsYVszXSksZS5nZXRUYWcoKS5pbnNlcnRSdWxlcyhjLHIpKSxyLmxlbmd0aD0wfWVsc2Ugci5wdXNoKHMpfX19LHE9ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cuX193ZWJwYWNrX25vbmNlX18/d2luZG93Ll9fd2VicGFja19ub25jZV9fOm51bGx9LEg9ZnVuY3Rpb24oZSl7dmFyIHQ9ZG9jdW1lbnQuaGVhZCxuPWV8fHQscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIiksbz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5jaGlsZE5vZGVzLG49dC5sZW5ndGg7bj49MDtuLS0pe3ZhciByPXRbbl07aWYociYmMT09PXIubm9kZVR5cGUmJnIuaGFzQXR0cmlidXRlKEEpKXJldHVybiByfX0obiksaT12b2lkIDAhPT1vP28ubmV4dFNpYmxpbmc6bnVsbDtyLnNldEF0dHJpYnV0ZShBLFwiYWN0aXZlXCIpLHIuc2V0QXR0cmlidXRlKFwiZGF0YS1zdHlsZWQtdmVyc2lvblwiLFwiNS4yLjNcIik7dmFyIHM9cSgpO3JldHVybiBzJiZyLnNldEF0dHJpYnV0ZShcIm5vbmNlXCIscyksbi5pbnNlcnRCZWZvcmUocixpKSxyfSwkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt2YXIgdD10aGlzLmVsZW1lbnQ9SChlKTt0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpKSx0aGlzLnNoZWV0PWZ1bmN0aW9uKGUpe2lmKGUuc2hlZXQpcmV0dXJuIGUuc2hlZXQ7Zm9yKHZhciB0PWRvY3VtZW50LnN0eWxlU2hlZXRzLG49MCxyPXQubGVuZ3RoO248cjtuKyspe3ZhciBvPXRbbl07aWYoby5vd25lck5vZGU9PT1lKXJldHVybiBvfWooMTcpfSh0KSx0aGlzLmxlbmd0aD0wfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0Lmluc2VydFJ1bGU9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIHRoaXMuc2hlZXQuaW5zZXJ0UnVsZSh0LGUpLHRoaXMubGVuZ3RoKyssITB9Y2F0Y2goZSl7cmV0dXJuITF9fSx0LmRlbGV0ZVJ1bGU9ZnVuY3Rpb24oZSl7dGhpcy5zaGVldC5kZWxldGVSdWxlKGUpLHRoaXMubGVuZ3RoLS19LHQuZ2V0UnVsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnNoZWV0LmNzc1J1bGVzW2VdO3JldHVybiB2b2lkIDAhPT10JiZcInN0cmluZ1wiPT10eXBlb2YgdC5jc3NUZXh0P3QuY3NzVGV4dDpcIlwifSxlfSgpLFc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3ZhciB0PXRoaXMuZWxlbWVudD1IKGUpO3RoaXMubm9kZXM9dC5jaGlsZE5vZGVzLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe2lmKGU8PXRoaXMubGVuZ3RoJiZlPj0wKXt2YXIgbj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0KSxyPXRoaXMubm9kZXNbZV07cmV0dXJuIHRoaXMuZWxlbWVudC5pbnNlcnRCZWZvcmUobixyfHxudWxsKSx0aGlzLmxlbmd0aCsrLCEwfXJldHVybiExfSx0LmRlbGV0ZVJ1bGU9ZnVuY3Rpb24oZSl7dGhpcy5lbGVtZW50LnJlbW92ZUNoaWxkKHRoaXMubm9kZXNbZV0pLHRoaXMubGVuZ3RoLS19LHQuZ2V0UnVsZT1mdW5jdGlvbihlKXtyZXR1cm4gZTx0aGlzLmxlbmd0aD90aGlzLm5vZGVzW2VdLnRleHRDb250ZW50OlwiXCJ9LGV9KCksVT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5ydWxlcz1bXSx0aGlzLmxlbmd0aD0wfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0Lmluc2VydFJ1bGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZTw9dGhpcy5sZW5ndGgmJih0aGlzLnJ1bGVzLnNwbGljZShlLDAsdCksdGhpcy5sZW5ndGgrKywhMCl9LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLnJ1bGVzLnNwbGljZShlLDEpLHRoaXMubGVuZ3RoLS19LHQuZ2V0UnVsZT1mdW5jdGlvbihlKXtyZXR1cm4gZTx0aGlzLmxlbmd0aD90aGlzLnJ1bGVzW2VdOlwiXCJ9LGV9KCksSj1JLFg9e2lzU2VydmVyOiFJLHVzZUNTU09NSW5qZWN0aW9uOiFQfSxaPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7dm9pZCAwPT09ZSYmKGU9RSksdm9pZCAwPT09dCYmKHQ9e30pLHRoaXMub3B0aW9ucz12KHt9LFgse30sZSksdGhpcy5ncz10LHRoaXMubmFtZXM9bmV3IE1hcChuKSwhdGhpcy5vcHRpb25zLmlzU2VydmVyJiZJJiZKJiYoSj0hMSxmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChMKSxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgbz10W25dO28mJlwiYWN0aXZlXCIhPT1vLmdldEF0dHJpYnV0ZShBKSYmKFkoZSxvKSxvLnBhcmVudE5vZGUmJm8ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvKSl9fSh0aGlzKSl9ZS5yZWdpc3RlcklkPWZ1bmN0aW9uKGUpe3JldHVybiBCKGUpfTt2YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5yZWNvbnN0cnVjdFdpdGhPcHRpb25zPWZ1bmN0aW9uKHQsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPSEwKSxuZXcgZSh2KHt9LHRoaXMub3B0aW9ucyx7fSx0KSx0aGlzLmdzLG4mJnRoaXMubmFtZXN8fHZvaWQgMCl9LHQuYWxsb2NhdGVHU0luc3RhbmNlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmdzW2VdPSh0aGlzLmdzW2VdfHwwKSsxfSx0LmdldFRhZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRhZ3x8KHRoaXMudGFnPShuPSh0PXRoaXMub3B0aW9ucykuaXNTZXJ2ZXIscj10LnVzZUNTU09NSW5qZWN0aW9uLG89dC50YXJnZXQsZT1uP25ldyBVKG8pOnI/bmV3ICQobyk6bmV3IFcobyksbmV3IFQoZSkpKTt2YXIgZSx0LG4scixvfSx0Lmhhc05hbWVGb3JJZD1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLm5hbWVzLmhhcyhlKSYmdGhpcy5uYW1lcy5nZXQoZSkuaGFzKHQpfSx0LnJlZ2lzdGVyTmFtZT1mdW5jdGlvbihlLHQpe2lmKEIoZSksdGhpcy5uYW1lcy5oYXMoZSkpdGhpcy5uYW1lcy5nZXQoZSkuYWRkKHQpO2Vsc2V7dmFyIG49bmV3IFNldDtuLmFkZCh0KSx0aGlzLm5hbWVzLnNldChlLG4pfX0sdC5pbnNlcnRSdWxlcz1mdW5jdGlvbihlLHQsbil7dGhpcy5yZWdpc3Rlck5hbWUoZSx0KSx0aGlzLmdldFRhZygpLmluc2VydFJ1bGVzKEIoZSksbil9LHQuY2xlYXJOYW1lcz1mdW5jdGlvbihlKXt0aGlzLm5hbWVzLmhhcyhlKSYmdGhpcy5uYW1lcy5nZXQoZSkuY2xlYXIoKX0sdC5jbGVhclJ1bGVzPWZ1bmN0aW9uKGUpe3RoaXMuZ2V0VGFnKCkuY2xlYXJHcm91cChCKGUpKSx0aGlzLmNsZWFyTmFtZXMoZSl9LHQuY2xlYXJUYWc9ZnVuY3Rpb24oKXt0aGlzLnRhZz12b2lkIDB9LHQudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuZ2V0VGFnKCksbj10Lmxlbmd0aCxyPVwiXCIsbz0wO288bjtvKyspe3ZhciBpPU0obyk7aWYodm9pZCAwIT09aSl7dmFyIHM9ZS5uYW1lcy5nZXQoaSksYT10LmdldEdyb3VwKG8pO2lmKHZvaWQgMCE9PXMmJjAhPT1hLmxlbmd0aCl7dmFyIGM9QStcIi5nXCIrbysnW2lkPVwiJytpKydcIl0nLHU9XCJcIjt2b2lkIDAhPT1zJiZzLmZvckVhY2goKGZ1bmN0aW9uKGUpe2UubGVuZ3RoPjAmJih1Kz1lK1wiLFwiKX0pKSxyKz1cIlwiK2ErYysne2NvbnRlbnQ6XCInK3UrJ1wifS8qIXNjKi9cXG4nfX19cmV0dXJuIHJ9KHRoaXMpfSxlfSgpLEs9LyhhKShkKS9naSxRPWZ1bmN0aW9uKGUpe3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGUrKGU+MjU/Mzk6OTcpKX07ZnVuY3Rpb24gZWUoZSl7dmFyIHQsbj1cIlwiO2Zvcih0PU1hdGguYWJzKGUpO3Q+NTI7dD10LzUyfDApbj1RKHQlNTIpK247cmV0dXJuKFEodCU1MikrbikucmVwbGFjZShLLFwiJDEtJDJcIil9dmFyIHRlPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXQubGVuZ3RoO247KWU9MzMqZV50LmNoYXJDb2RlQXQoLS1uKTtyZXR1cm4gZX0sbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRlKDUzODEsZSl9O2Z1bmN0aW9uIHJlKGUpe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCs9MSl7dmFyIG49ZVt0XTtpZihiKG4pJiYhTihuKSlyZXR1cm4hMX1yZXR1cm4hMH12YXIgb2U9bmUoXCI1LjIuM1wiKSxpZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4pe3RoaXMucnVsZXM9ZSx0aGlzLnN0YXRpY1J1bGVzSWQ9XCJcIix0aGlzLmlzU3RhdGljPVwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJih2b2lkIDA9PT1ufHxuLmlzU3RhdGljKSYmcmUoZSksdGhpcy5jb21wb25lbnRJZD10LHRoaXMuYmFzZUhhc2g9dGUob2UsdCksdGhpcy5iYXNlU3R5bGU9bixaLnJlZ2lzdGVySWQodCl9cmV0dXJuIGUucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10aGlzLmNvbXBvbmVudElkLG89W107aWYodGhpcy5iYXNlU3R5bGUmJm8ucHVzaCh0aGlzLmJhc2VTdHlsZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhlLHQsbikpLHRoaXMuaXNTdGF0aWMmJiFuLmhhc2gpaWYodGhpcy5zdGF0aWNSdWxlc0lkJiZ0Lmhhc05hbWVGb3JJZChyLHRoaXMuc3RhdGljUnVsZXNJZCkpby5wdXNoKHRoaXMuc3RhdGljUnVsZXNJZCk7ZWxzZXt2YXIgaT1OZSh0aGlzLnJ1bGVzLGUsdCxuKS5qb2luKFwiXCIpLHM9ZWUodGUodGhpcy5iYXNlSGFzaCxpLmxlbmd0aCk+Pj4wKTtpZighdC5oYXNOYW1lRm9ySWQocixzKSl7dmFyIGE9bihpLFwiLlwiK3Msdm9pZCAwLHIpO3QuaW5zZXJ0UnVsZXMocixzLGEpfW8ucHVzaChzKSx0aGlzLnN0YXRpY1J1bGVzSWQ9c31lbHNle2Zvcih2YXIgYz10aGlzLnJ1bGVzLmxlbmd0aCx1PXRlKHRoaXMuYmFzZUhhc2gsbi5oYXNoKSxsPVwiXCIsZD0wO2Q8YztkKyspe3ZhciBoPXRoaXMucnVsZXNbZF07aWYoXCJzdHJpbmdcIj09dHlwZW9mIGgpbCs9aCxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYodT10ZSh1LGgrZCkpO2Vsc2UgaWYoaCl7dmFyIHA9TmUoaCxlLHQsbiksZj1BcnJheS5pc0FycmF5KHApP3Auam9pbihcIlwiKTpwO3U9dGUodSxmK2QpLGwrPWZ9fWlmKGwpe3ZhciBtPWVlKHU+Pj4wKTtpZighdC5oYXNOYW1lRm9ySWQocixtKSl7dmFyIHk9bihsLFwiLlwiK20sdm9pZCAwLHIpO3QuaW5zZXJ0UnVsZXMocixtLHkpfW8ucHVzaChtKX19cmV0dXJuIG8uam9pbihcIiBcIil9LGV9KCksc2U9L15cXHMqXFwvXFwvLiokL2dtLGFlPVtcIjpcIixcIltcIixcIi5cIixcIiNcIl07ZnVuY3Rpb24gY2UoZSl7dmFyIHQsbixyLG8saT12b2lkIDA9PT1lP0U6ZSxzPWkub3B0aW9ucyxhPXZvaWQgMD09PXM/RTpzLGM9aS5wbHVnaW5zLHU9dm9pZCAwPT09Yz93OmMsbD1uZXcgcChhKSxkPVtdLGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0KXtpZih0KXRyeXtlKHQrXCJ9XCIpfWNhdGNoKGUpe319cmV0dXJuIGZ1bmN0aW9uKG4scixvLGkscyxhLGMsdSxsLGQpe3N3aXRjaChuKXtjYXNlIDE6aWYoMD09PWwmJjY0PT09ci5jaGFyQ29kZUF0KDApKXJldHVybiBlKHIrXCI7XCIpLFwiXCI7YnJlYWs7Y2FzZSAyOmlmKDA9PT11KXJldHVybiByK1wiLyp8Ki9cIjticmVhaztjYXNlIDM6c3dpdGNoKHUpe2Nhc2UgMTAyOmNhc2UgMTEyOnJldHVybiBlKG9bMF0rciksXCJcIjtkZWZhdWx0OnJldHVybiByKygwPT09ZD9cIi8qfCovXCI6XCJcIil9Y2FzZS0yOnIuc3BsaXQoXCIvKnwqL31cIikuZm9yRWFjaCh0KX19fSgoZnVuY3Rpb24oZSl7ZC5wdXNoKGUpfSkpLGY9ZnVuY3Rpb24oZSxyLGkpe3JldHVybiAwPT09ciYmLTEhPT1hZS5pbmRleE9mKGlbbi5sZW5ndGhdKXx8aS5tYXRjaChvKT9lOlwiLlwiK3R9O2Z1bmN0aW9uIG0oZSxpLHMsYSl7dm9pZCAwPT09YSYmKGE9XCImXCIpO3ZhciBjPWUucmVwbGFjZShzZSxcIlwiKSx1PWkmJnM/cytcIiBcIitpK1wiIHsgXCIrYytcIiB9XCI6YztyZXR1cm4gdD1hLG49aSxyPW5ldyBSZWdFeHAoXCJcXFxcXCIrbitcIlxcXFxiXCIsXCJnXCIpLG89bmV3IFJlZ0V4cChcIihcXFxcXCIrbitcIlxcXFxiKXsyLH1cIiksbChzfHwhaT9cIlwiOmksdSl9cmV0dXJuIGwudXNlKFtdLmNvbmNhdCh1LFtmdW5jdGlvbihlLHQsbyl7Mj09PWUmJm8ubGVuZ3RoJiZvWzBdLmxhc3RJbmRleE9mKG4pPjAmJihvWzBdPW9bMF0ucmVwbGFjZShyLGYpKX0saCxmdW5jdGlvbihlKXtpZigtMj09PWUpe3ZhciB0PWQ7cmV0dXJuIGQ9W10sdH19XSkpLG0uaGFzaD11Lmxlbmd0aD91LnJlZHVjZSgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5uYW1lfHxqKDE1KSx0ZShlLHQubmFtZSl9KSw1MzgxKS50b1N0cmluZygpOlwiXCIsbX12YXIgdWU9ci5jcmVhdGVDb250ZXh0KCksbGU9dWUuQ29uc3VtZXIsZGU9ci5jcmVhdGVDb250ZXh0KCksaGU9KGRlLkNvbnN1bWVyLG5ldyBaKSxwZT1jZSgpO2Z1bmN0aW9uIGZlKCl7cmV0dXJuIGkodWUpfHxoZX1mdW5jdGlvbiBtZSgpe3JldHVybiBpKGRlKXx8cGV9ZnVuY3Rpb24geWUoZSl7dmFyIHQ9byhlLnN0eWxpc1BsdWdpbnMpLG49dFswXSxpPXRbMV0sYz1mZSgpLHU9cygoZnVuY3Rpb24oKXt2YXIgdD1jO3JldHVybiBlLnNoZWV0P3Q9ZS5zaGVldDplLnRhcmdldCYmKHQ9dC5yZWNvbnN0cnVjdFdpdGhPcHRpb25zKHt0YXJnZXQ6ZS50YXJnZXR9LCExKSksZS5kaXNhYmxlQ1NTT01JbmplY3Rpb24mJih0PXQucmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyh7dXNlQ1NTT01JbmplY3Rpb246ITF9KSksdH0pLFtlLmRpc2FibGVDU1NPTUluamVjdGlvbixlLnNoZWV0LGUudGFyZ2V0XSksbD1zKChmdW5jdGlvbigpe3JldHVybiBjZSh7b3B0aW9uczp7cHJlZml4OiFlLmRpc2FibGVWZW5kb3JQcmVmaXhlc30scGx1Z2luczpufSl9KSxbZS5kaXNhYmxlVmVuZG9yUHJlZml4ZXMsbl0pO3JldHVybiBhKChmdW5jdGlvbigpe2gobixlLnN0eWxpc1BsdWdpbnMpfHxpKGUuc3R5bGlzUGx1Z2lucyl9KSxbZS5zdHlsaXNQbHVnaW5zXSksci5jcmVhdGVFbGVtZW50KHVlLlByb3ZpZGVyLHt2YWx1ZTp1fSxyLmNyZWF0ZUVsZW1lbnQoZGUuUHJvdmlkZXIse3ZhbHVlOmx9LFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/ci5DaGlsZHJlbi5vbmx5KGUuY2hpbGRyZW4pOmUuY2hpbGRyZW4pKX12YXIgdmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dmFyIG49dGhpczt0aGlzLmluamVjdD1mdW5jdGlvbihlLHQpe3ZvaWQgMD09PXQmJih0PXBlKTt2YXIgcj1uLm5hbWUrdC5oYXNoO2UuaGFzTmFtZUZvcklkKG4uaWQscil8fGUuaW5zZXJ0UnVsZXMobi5pZCxyLHQobi5ydWxlcyxyLFwiQGtleWZyYW1lc1wiKSl9LHRoaXMudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gaigxMixTdHJpbmcobi5uYW1lKSl9LHRoaXMubmFtZT1lLHRoaXMuaWQ9XCJzYy1rZXlmcmFtZXMtXCIrZSx0aGlzLnJ1bGVzPXR9cmV0dXJuIGUucHJvdG90eXBlLmdldE5hbWU9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPXBlKSx0aGlzLm5hbWUrZS5oYXNofSxlfSgpLGdlPS8oW0EtWl0pLyxTZT0vKFtBLVpdKS9nLHdlPS9ebXMtLyxFZT1mdW5jdGlvbihlKXtyZXR1cm5cIi1cIitlLnRvTG93ZXJDYXNlKCl9O2Z1bmN0aW9uIGJlKGUpe3JldHVybiBnZS50ZXN0KGUpP2UucmVwbGFjZShTZSxFZSkucmVwbGFjZSh3ZSxcIi1tcy1cIik6ZX12YXIgX2U9ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWV8fCExPT09ZXx8XCJcIj09PWV9O2Z1bmN0aW9uIE5lKGUsbixyLG8pe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgaSxzPVtdLGE9MCxjPWUubGVuZ3RoO2E8YzthKz0xKVwiXCIhPT0oaT1OZShlW2FdLG4scixvKSkmJihBcnJheS5pc0FycmF5KGkpP3MucHVzaC5hcHBseShzLGkpOnMucHVzaChpKSk7cmV0dXJuIHN9aWYoX2UoZSkpcmV0dXJuXCJcIjtpZihOKGUpKXJldHVyblwiLlwiK2Uuc3R5bGVkQ29tcG9uZW50SWQ7aWYoYihlKSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YobD1lKXx8bC5wcm90b3R5cGUmJmwucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnR8fCFuKXJldHVybiBlO3ZhciB1PWUobik7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmdCh1KSYmY29uc29sZS53YXJuKF8oZSkrXCIgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLlwiKSxOZSh1LG4scixvKX12YXIgbDtyZXR1cm4gZSBpbnN0YW5jZW9mIHZlP3I/KGUuaW5qZWN0KHIsbyksZS5nZXROYW1lKG8pKTplOlMoZSk/ZnVuY3Rpb24gZSh0LG4pe3ZhciByLG8saT1bXTtmb3IodmFyIHMgaW4gdCl0Lmhhc093blByb3BlcnR5KHMpJiYhX2UodFtzXSkmJihTKHRbc10pP2kucHVzaC5hcHBseShpLGUodFtzXSxzKSk6Yih0W3NdKT9pLnB1c2goYmUocykrXCI6XCIsdFtzXSxcIjtcIik6aS5wdXNoKGJlKHMpK1wiOiBcIisocj1zLG51bGw9PShvPXRbc10pfHxcImJvb2xlYW5cIj09dHlwZW9mIG98fFwiXCI9PT1vP1wiXCI6XCJudW1iZXJcIiE9dHlwZW9mIG98fDA9PT1vfHxyIGluIGY/U3RyaW5nKG8pLnRyaW0oKTpvK1wicHhcIikrXCI7XCIpKTtyZXR1cm4gbj9bbitcIiB7XCJdLmNvbmNhdChpLFtcIn1cIl0pOml9KGUpOmUudG9TdHJpbmcoKX1mdW5jdGlvbiBBZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07cmV0dXJuIGIoZSl8fFMoZSk/TmUoZyh3LFtlXS5jb25jYXQobikpKTowPT09bi5sZW5ndGgmJjE9PT1lLmxlbmd0aCYmXCJzdHJpbmdcIj09dHlwZW9mIGVbMF0/ZTpOZShnKGUsbikpfXZhciBDZT0vaW52YWxpZCBob29rIGNhbGwvaSxJZT1uZXcgU2V0LFBlPWZ1bmN0aW9uKGUsdCl7aWYoXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVil7dmFyIG49XCJUaGUgY29tcG9uZW50IFwiK2UrKHQ/JyB3aXRoIHRoZSBpZCBvZiBcIicrdCsnXCInOlwiXCIpK1wiIGhhcyBiZWVuIGNyZWF0ZWQgZHluYW1pY2FsbHkuXFxuWW91IG1heSBzZWUgdGhpcyB3YXJuaW5nIGJlY2F1c2UgeW91J3ZlIGNhbGxlZCBzdHlsZWQgaW5zaWRlIGFub3RoZXIgY29tcG9uZW50LlxcblRvIHJlc29sdmUgdGhpcyBvbmx5IGNyZWF0ZSBuZXcgU3R5bGVkQ29tcG9uZW50cyBvdXRzaWRlIG9mIGFueSByZW5kZXIgbWV0aG9kIGFuZCBmdW5jdGlvbiBjb21wb25lbnQuXCI7dHJ5e2MoKSxJZS5oYXMobil8fChjb25zb2xlLndhcm4obiksSWUuYWRkKG4pKX1jYXRjaChlKXtDZS50ZXN0KGUubWVzc2FnZSkmJkllLmRlbGV0ZShuKX19fSxPZT1mdW5jdGlvbihlLHQsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPUUpLGUudGhlbWUhPT1uLnRoZW1lJiZlLnRoZW1lfHx0fHxuLnRoZW1lfSxSZT0vWyFcIiMkJSYnKCkqKywuLzo7PD0+P0BbXFxcXFxcXV5ge3x9fi1dKy9nLERlPS8oXi18LSQpL2c7ZnVuY3Rpb24gamUoZSl7cmV0dXJuIGUucmVwbGFjZShSZSxcIi1cIikucmVwbGFjZShEZSxcIlwiKX12YXIgVGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGVlKG5lKGUpPj4+MCl9O2Z1bmN0aW9uIGtlKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYoXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8ZS5jaGFyQXQoMCk9PT1lLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpKX12YXIgeGU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZXx8XCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lJiYhQXJyYXkuaXNBcnJheShlKX0sVmU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJfX3Byb3RvX19cIiE9PWUmJlwiY29uc3RydWN0b3JcIiE9PWUmJlwicHJvdG90eXBlXCIhPT1lfTtmdW5jdGlvbiBCZShlLHQsbil7dmFyIHI9ZVtuXTt4ZSh0KSYmeGUocik/TWUocix0KTplW25dPXR9ZnVuY3Rpb24gTWUoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO2Zvcih2YXIgbz0wLGk9bjtvPGkubGVuZ3RoO28rKyl7dmFyIHM9aVtvXTtpZih4ZShzKSlmb3IodmFyIGEgaW4gcylWZShhKSYmQmUoZSxzW2FdLGEpfXJldHVybiBlfXZhciB6ZT1yLmNyZWF0ZUNvbnRleHQoKSxMZT16ZS5Db25zdW1lcjtmdW5jdGlvbiBHZShlKXt2YXIgdD1pKHplKSxuPXMoKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuIGooMTQpO2lmKGIoZSkpe3ZhciBuPWUodCk7cmV0dXJuXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8bnVsbCE9PW4mJiFBcnJheS5pc0FycmF5KG4pJiZcIm9iamVjdFwiPT10eXBlb2Ygbj9uOmooNyl9cmV0dXJuIEFycmF5LmlzQXJyYXkoZSl8fFwib2JqZWN0XCIhPXR5cGVvZiBlP2ooOCk6dD92KHt9LHQse30sZSk6ZX0oZS50aGVtZSx0KX0pLFtlLnRoZW1lLHRdKTtyZXR1cm4gZS5jaGlsZHJlbj9yLmNyZWF0ZUVsZW1lbnQoemUuUHJvdmlkZXIse3ZhbHVlOm59LGUuY2hpbGRyZW4pOm51bGx9dmFyIEZlPXt9O2Z1bmN0aW9uIFllKGUsdCxuKXt2YXIgbz1OKGUpLHM9IWtlKGUpLGE9dC5hdHRycyxjPXZvaWQgMD09PWE/dzphLGQ9dC5jb21wb25lbnRJZCxoPXZvaWQgMD09PWQ/ZnVuY3Rpb24oZSx0KXt2YXIgbj1cInN0cmluZ1wiIT10eXBlb2YgZT9cInNjXCI6amUoZSk7RmVbbl09KEZlW25dfHwwKSsxO3ZhciByPW4rXCItXCIrVGUoXCI1LjIuM1wiK24rRmVbbl0pO3JldHVybiB0P3QrXCItXCIrcjpyfSh0LmRpc3BsYXlOYW1lLHQucGFyZW50Q29tcG9uZW50SWQpOmQscD10LmRpc3BsYXlOYW1lLGY9dm9pZCAwPT09cD9mdW5jdGlvbihlKXtyZXR1cm4ga2UoZSk/XCJzdHlsZWQuXCIrZTpcIlN0eWxlZChcIitfKGUpK1wiKVwifShlKTpwLGc9dC5kaXNwbGF5TmFtZSYmdC5jb21wb25lbnRJZD9qZSh0LmRpc3BsYXlOYW1lKStcIi1cIit0LmNvbXBvbmVudElkOnQuY29tcG9uZW50SWR8fGgsUz1vJiZlLmF0dHJzP0FycmF5LnByb3RvdHlwZS5jb25jYXQoZS5hdHRycyxjKS5maWx0ZXIoQm9vbGVhbik6YyxBPXQuc2hvdWxkRm9yd2FyZFByb3A7byYmZS5zaG91bGRGb3J3YXJkUHJvcCYmKEE9dC5zaG91bGRGb3J3YXJkUHJvcD9mdW5jdGlvbihuLHIpe3JldHVybiBlLnNob3VsZEZvcndhcmRQcm9wKG4scikmJnQuc2hvdWxkRm9yd2FyZFByb3AobixyKX06ZS5zaG91bGRGb3J3YXJkUHJvcCk7dmFyIEMsST1uZXcgaWUobixnLG8/ZS5jb21wb25lbnRTdHlsZTp2b2lkIDApLFA9SS5pc1N0YXRpYyYmMD09PWMubGVuZ3RoLE89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSx0LG4scil7dmFyIG89ZS5hdHRycyxzPWUuY29tcG9uZW50U3R5bGUsYT1lLmRlZmF1bHRQcm9wcyxjPWUuZm9sZGVkQ29tcG9uZW50SWRzLGQ9ZS5zaG91bGRGb3J3YXJkUHJvcCxoPWUuc3R5bGVkQ29tcG9uZW50SWQscD1lLnRhcmdldDtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZsKGgpO3ZhciBmPWZ1bmN0aW9uKGUsdCxuKXt2b2lkIDA9PT1lJiYoZT1FKTt2YXIgcj12KHt9LHQse3RoZW1lOmV9KSxvPXt9O3JldHVybiBuLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciB0LG4saSxzPWU7Zm9yKHQgaW4gYihzKSYmKHM9cyhyKSkscylyW3RdPW9bdF09XCJjbGFzc05hbWVcIj09PXQ/KG49b1t0XSxpPXNbdF0sbiYmaT9uK1wiIFwiK2k6bnx8aSk6c1t0XX0pKSxbcixvXX0oT2UodCxpKHplKSxhKXx8RSx0LG8pLHk9ZlswXSxnPWZbMV0sUz1mdW5jdGlvbihlLHQsbixyKXt2YXIgbz1mZSgpLGk9bWUoKSxzPXQ/ZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhFLG8saSk6ZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhuLG8saSk7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmbChzKSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYhdCYmciYmcihzKSxzfShzLHIseSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP2Uud2FyblRvb01hbnlDbGFzc2VzOnZvaWQgMCksdz1uLF89Zy4kYXN8fHQuJGFzfHxnLmFzfHx0LmFzfHxwLE49a2UoXyksQT1nIT09dD92KHt9LHQse30sZyk6dCxDPXt9O2Zvcih2YXIgSSBpbiBBKVwiJFwiIT09SVswXSYmXCJhc1wiIT09SSYmKFwiZm9yd2FyZGVkQXNcIj09PUk/Qy5hcz1BW0ldOihkP2QoSSxtKTohTnx8bShJKSkmJihDW0ldPUFbSV0pKTtyZXR1cm4gdC5zdHlsZSYmZy5zdHlsZSE9PXQuc3R5bGUmJihDLnN0eWxlPXYoe30sdC5zdHlsZSx7fSxnLnN0eWxlKSksQy5jbGFzc05hbWU9QXJyYXkucHJvdG90eXBlLmNvbmNhdChjLGgsUyE9PWg/UzpudWxsLHQuY2xhc3NOYW1lLGcuY2xhc3NOYW1lKS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIiksQy5yZWY9dyx1KF8sQyl9KEMsZSx0LFApfTtyZXR1cm4gTy5kaXNwbGF5TmFtZT1mLChDPXIuZm9yd2FyZFJlZihPKSkuYXR0cnM9UyxDLmNvbXBvbmVudFN0eWxlPUksQy5kaXNwbGF5TmFtZT1mLEMuc2hvdWxkRm9yd2FyZFByb3A9QSxDLmZvbGRlZENvbXBvbmVudElkcz1vP0FycmF5LnByb3RvdHlwZS5jb25jYXQoZS5mb2xkZWRDb21wb25lbnRJZHMsZS5zdHlsZWRDb21wb25lbnRJZCk6dyxDLnN0eWxlZENvbXBvbmVudElkPWcsQy50YXJnZXQ9bz9lLnRhcmdldDplLEMud2l0aENvbXBvbmVudD1mdW5jdGlvbihlKXt2YXIgcj10LmNvbXBvbmVudElkLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz17fSxpPU9iamVjdC5rZXlzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5kZXhPZihuKT49MHx8KG9bbl09ZVtuXSk7cmV0dXJuIG99KHQsW1wiY29tcG9uZW50SWRcIl0pLGk9ciYmcitcIi1cIisoa2UoZSk/ZTpqZShfKGUpKSk7cmV0dXJuIFllKGUsdih7fSxvLHthdHRyczpTLGNvbXBvbmVudElkOml9KSxuKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsXCJkZWZhdWx0UHJvcHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZvbGRlZERlZmF1bHRQcm9wc30sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX2ZvbGRlZERlZmF1bHRQcm9wcz1vP01lKHt9LGUuZGVmYXVsdFByb3BzLHQpOnR9fSksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKFBlKGYsZyksQy53YXJuVG9vTWFueUNsYXNzZXM9ZnVuY3Rpb24oZSx0KXt2YXIgbj17fSxyPSExO3JldHVybiBmdW5jdGlvbihvKXtpZighciYmKG5bb109ITAsT2JqZWN0LmtleXMobikubGVuZ3RoPj0yMDApKXt2YXIgaT10Pycgd2l0aCB0aGUgaWQgb2YgXCInK3QrJ1wiJzpcIlwiO2NvbnNvbGUud2FybihcIk92ZXIgMjAwIGNsYXNzZXMgd2VyZSBnZW5lcmF0ZWQgZm9yIGNvbXBvbmVudCBcIitlK2krXCIuXFxuQ29uc2lkZXIgdXNpbmcgdGhlIGF0dHJzIG1ldGhvZCwgdG9nZXRoZXIgd2l0aCBhIHN0eWxlIG9iamVjdCBmb3IgZnJlcXVlbnRseSBjaGFuZ2VkIHN0eWxlcy5cXG5FeGFtcGxlOlxcbiAgY29uc3QgQ29tcG9uZW50ID0gc3R5bGVkLmRpdi5hdHRycyhwcm9wcyA9PiAoe1xcbiAgICBzdHlsZToge1xcbiAgICAgIGJhY2tncm91bmQ6IHByb3BzLmJhY2tncm91bmQsXFxuICAgIH0sXFxuICB9KSlgd2lkdGg6IDEwMCU7YFxcblxcbiAgPENvbXBvbmVudCAvPlwiKSxyPSEwLG49e319fX0oZixnKSksQy50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiLlwiK0Muc3R5bGVkQ29tcG9uZW50SWR9LHMmJnkoQyxlLHthdHRyczohMCxjb21wb25lbnRTdHlsZTohMCxkaXNwbGF5TmFtZTohMCxmb2xkZWRDb21wb25lbnRJZHM6ITAsc2hvdWxkRm9yd2FyZFByb3A6ITAsc3R5bGVkQ29tcG9uZW50SWQ6ITAsdGFyZ2V0OiEwLHdpdGhDb21wb25lbnQ6ITB9KSxDfXZhciBxZT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24gZSh0LHIsbyl7aWYodm9pZCAwPT09byYmKG89RSksIW4ocikpcmV0dXJuIGooMSxTdHJpbmcocikpO3ZhciBpPWZ1bmN0aW9uKCl7cmV0dXJuIHQocixvLEFlLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpKX07cmV0dXJuIGkud2l0aENvbmZpZz1mdW5jdGlvbihuKXtyZXR1cm4gZSh0LHIsdih7fSxvLHt9LG4pKX0saS5hdHRycz1mdW5jdGlvbihuKXtyZXR1cm4gZSh0LHIsdih7fSxvLHthdHRyczpBcnJheS5wcm90b3R5cGUuY29uY2F0KG8uYXR0cnMsbikuZmlsdGVyKEJvb2xlYW4pfSkpfSxpfShZZSxlKX07W1wiYVwiLFwiYWJiclwiLFwiYWRkcmVzc1wiLFwiYXJlYVwiLFwiYXJ0aWNsZVwiLFwiYXNpZGVcIixcImF1ZGlvXCIsXCJiXCIsXCJiYXNlXCIsXCJiZGlcIixcImJkb1wiLFwiYmlnXCIsXCJibG9ja3F1b3RlXCIsXCJib2R5XCIsXCJiclwiLFwiYnV0dG9uXCIsXCJjYW52YXNcIixcImNhcHRpb25cIixcImNpdGVcIixcImNvZGVcIixcImNvbFwiLFwiY29sZ3JvdXBcIixcImRhdGFcIixcImRhdGFsaXN0XCIsXCJkZFwiLFwiZGVsXCIsXCJkZXRhaWxzXCIsXCJkZm5cIixcImRpYWxvZ1wiLFwiZGl2XCIsXCJkbFwiLFwiZHRcIixcImVtXCIsXCJlbWJlZFwiLFwiZmllbGRzZXRcIixcImZpZ2NhcHRpb25cIixcImZpZ3VyZVwiLFwiZm9vdGVyXCIsXCJmb3JtXCIsXCJoMVwiLFwiaDJcIixcImgzXCIsXCJoNFwiLFwiaDVcIixcImg2XCIsXCJoZWFkXCIsXCJoZWFkZXJcIixcImhncm91cFwiLFwiaHJcIixcImh0bWxcIixcImlcIixcImlmcmFtZVwiLFwiaW1nXCIsXCJpbnB1dFwiLFwiaW5zXCIsXCJrYmRcIixcImtleWdlblwiLFwibGFiZWxcIixcImxlZ2VuZFwiLFwibGlcIixcImxpbmtcIixcIm1haW5cIixcIm1hcFwiLFwibWFya1wiLFwibWFycXVlZVwiLFwibWVudVwiLFwibWVudWl0ZW1cIixcIm1ldGFcIixcIm1ldGVyXCIsXCJuYXZcIixcIm5vc2NyaXB0XCIsXCJvYmplY3RcIixcIm9sXCIsXCJvcHRncm91cFwiLFwib3B0aW9uXCIsXCJvdXRwdXRcIixcInBcIixcInBhcmFtXCIsXCJwaWN0dXJlXCIsXCJwcmVcIixcInByb2dyZXNzXCIsXCJxXCIsXCJycFwiLFwicnRcIixcInJ1YnlcIixcInNcIixcInNhbXBcIixcInNjcmlwdFwiLFwic2VjdGlvblwiLFwic2VsZWN0XCIsXCJzbWFsbFwiLFwic291cmNlXCIsXCJzcGFuXCIsXCJzdHJvbmdcIixcInN0eWxlXCIsXCJzdWJcIixcInN1bW1hcnlcIixcInN1cFwiLFwidGFibGVcIixcInRib2R5XCIsXCJ0ZFwiLFwidGV4dGFyZWFcIixcInRmb290XCIsXCJ0aFwiLFwidGhlYWRcIixcInRpbWVcIixcInRpdGxlXCIsXCJ0clwiLFwidHJhY2tcIixcInVcIixcInVsXCIsXCJ2YXJcIixcInZpZGVvXCIsXCJ3YnJcIixcImNpcmNsZVwiLFwiY2xpcFBhdGhcIixcImRlZnNcIixcImVsbGlwc2VcIixcImZvcmVpZ25PYmplY3RcIixcImdcIixcImltYWdlXCIsXCJsaW5lXCIsXCJsaW5lYXJHcmFkaWVudFwiLFwibWFya2VyXCIsXCJtYXNrXCIsXCJwYXRoXCIsXCJwYXR0ZXJuXCIsXCJwb2x5Z29uXCIsXCJwb2x5bGluZVwiLFwicmFkaWFsR3JhZGllbnRcIixcInJlY3RcIixcInN0b3BcIixcInN2Z1wiLFwidGV4dFwiLFwidHNwYW5cIl0uZm9yRWFjaCgoZnVuY3Rpb24oZSl7cWVbZV09cWUoZSl9KSk7dmFyIEhlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3RoaXMucnVsZXM9ZSx0aGlzLmNvbXBvbmVudElkPXQsdGhpcy5pc1N0YXRpYz1yZShlKSxaLnJlZ2lzdGVySWQodGhpcy5jb21wb25lbnRJZCsxKX12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5jcmVhdGVTdHlsZXM9ZnVuY3Rpb24oZSx0LG4scil7dmFyIG89cihOZSh0aGlzLnJ1bGVzLHQsbixyKS5qb2luKFwiXCIpLFwiXCIpLGk9dGhpcy5jb21wb25lbnRJZCtlO24uaW5zZXJ0UnVsZXMoaSxpLG8pfSx0LnJlbW92ZVN0eWxlcz1mdW5jdGlvbihlLHQpe3QuY2xlYXJSdWxlcyh0aGlzLmNvbXBvbmVudElkK2UpfSx0LnJlbmRlclN0eWxlcz1mdW5jdGlvbihlLHQsbixyKXtlPjImJloucmVnaXN0ZXJJZCh0aGlzLmNvbXBvbmVudElkK2UpLHRoaXMucmVtb3ZlU3R5bGVzKGUsbiksdGhpcy5jcmVhdGVTdHlsZXMoZSx0LG4scil9LGV9KCk7ZnVuY3Rpb24gJGUoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxvPTE7bzx0O28rKyluW28tMV09YXJndW1lbnRzW29dO3ZhciBzPUFlLmFwcGx5KHZvaWQgMCxbZV0uY29uY2F0KG4pKSxhPVwic2MtZ2xvYmFsLVwiK1RlKEpTT04uc3RyaW5naWZ5KHMpKSx1PW5ldyBIZShzLGEpO2Z1bmN0aW9uIGwoZSl7dmFyIHQ9ZmUoKSxuPW1lKCksbz1pKHplKSxsPWModC5hbGxvY2F0ZUdTSW5zdGFuY2UoYSkpLmN1cnJlbnQ7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmci5DaGlsZHJlbi5jb3VudChlLmNoaWxkcmVuKSYmY29uc29sZS53YXJuKFwiVGhlIGdsb2JhbCBzdHlsZSBjb21wb25lbnQgXCIrYStcIiB3YXMgZ2l2ZW4gY2hpbGQgSlNYLiBjcmVhdGVHbG9iYWxTdHlsZSBkb2VzIG5vdCByZW5kZXIgY2hpbGRyZW4uXCIpLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnMuc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGUmJi0xIT09ZS5pbmRleE9mKFwiQGltcG9ydFwiKX0pKSYmY29uc29sZS53YXJuKFwiUGxlYXNlIGRvIG5vdCB1c2UgQGltcG9ydCBDU1Mgc3ludGF4IGluIGNyZWF0ZUdsb2JhbFN0eWxlIGF0IHRoaXMgdGltZSwgYXMgdGhlIENTU09NIEFQSXMgd2UgdXNlIGluIHByb2R1Y3Rpb24gZG8gbm90IGhhbmRsZSBpdCB3ZWxsLiBJbnN0ZWFkLCB3ZSByZWNvbW1lbmQgdXNpbmcgYSBsaWJyYXJ5IHN1Y2ggYXMgcmVhY3QtaGVsbWV0IHRvIGluamVjdCBhIHR5cGljYWwgPGxpbms+IG1ldGEgdGFnIHRvIHRoZSBzdHlsZXNoZWV0LCBvciBzaW1wbHkgZW1iZWRkaW5nIGl0IG1hbnVhbGx5IGluIHlvdXIgaW5kZXguaHRtbCA8aGVhZD4gc2VjdGlvbiBmb3IgYSBzaW1wbGVyIGFwcC5cIiksZCgoZnVuY3Rpb24oKXtyZXR1cm4gaChsLGUsdCxvLG4pLGZ1bmN0aW9uKCl7cmV0dXJuIHUucmVtb3ZlU3R5bGVzKGwsdCl9fSksW2wsZSx0LG8sbl0pLG51bGx9ZnVuY3Rpb24gaChlLHQsbixyLG8pe2lmKHUuaXNTdGF0aWMpdS5yZW5kZXJTdHlsZXMoZSxPLG4sbyk7ZWxzZXt2YXIgaT12KHt9LHQse3RoZW1lOk9lKHQscixsLmRlZmF1bHRQcm9wcyl9KTt1LnJlbmRlclN0eWxlcyhlLGksbixvKX19cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmUGUoYSksci5tZW1vKGwpfWZ1bmN0aW9uIFdlKGUpe1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBuYXZpZ2F0b3ImJlwiUmVhY3ROYXRpdmVcIj09PW5hdmlnYXRvci5wcm9kdWN0JiZjb25zb2xlLndhcm4oXCJga2V5ZnJhbWVzYCBjYW5ub3QgYmUgdXNlZCBvbiBSZWFjdE5hdGl2ZSwgb25seSBvbiB0aGUgd2ViLiBUbyBkbyBhbmltYXRpb24gaW4gUmVhY3ROYXRpdmUgcGxlYXNlIHVzZSBBbmltYXRlZC5cIik7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3ZhciBvPUFlLmFwcGx5KHZvaWQgMCxbZV0uY29uY2F0KG4pKS5qb2luKFwiXCIpLGk9VGUobyk7cmV0dXJuIG5ldyB2ZShpLG8pfXZhciBVZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt2YXIgZT10aGlzO3RoaXMuX2VtaXRTaGVldENTUz1mdW5jdGlvbigpe3ZhciB0PWUuaW5zdGFuY2UudG9TdHJpbmcoKSxuPXEoKTtyZXR1cm5cIjxzdHlsZSBcIitbbiYmJ25vbmNlPVwiJytuKydcIicsQSsnPVwidHJ1ZVwiJywnZGF0YS1zdHlsZWQtdmVyc2lvbj1cIjUuMi4zXCInXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIikrXCI+XCIrdCtcIjwvc3R5bGU+XCJ9LHRoaXMuZ2V0U3R5bGVUYWdzPWZ1bmN0aW9uKCl7cmV0dXJuIGUuc2VhbGVkP2ooMik6ZS5fZW1pdFNoZWV0Q1NTKCl9LHRoaXMuZ2V0U3R5bGVFbGVtZW50PWZ1bmN0aW9uKCl7dmFyIHQ7aWYoZS5zZWFsZWQpcmV0dXJuIGooMik7dmFyIG49KCh0PXt9KVtBXT1cIlwiLHRbXCJkYXRhLXN0eWxlZC12ZXJzaW9uXCJdPVwiNS4yLjNcIix0LmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXtfX2h0bWw6ZS5pbnN0YW5jZS50b1N0cmluZygpfSx0KSxvPXEoKTtyZXR1cm4gbyYmKG4ubm9uY2U9byksW3IuY3JlYXRlRWxlbWVudChcInN0eWxlXCIsdih7fSxuLHtrZXk6XCJzYy0wLTBcIn0pKV19LHRoaXMuc2VhbD1mdW5jdGlvbigpe2Uuc2VhbGVkPSEwfSx0aGlzLmluc3RhbmNlPW5ldyBaKHtpc1NlcnZlcjohMH0pLHRoaXMuc2VhbGVkPSExfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmNvbGxlY3RTdHlsZXM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc2VhbGVkP2ooMik6ci5jcmVhdGVFbGVtZW50KHllLHtzaGVldDp0aGlzLmluc3RhbmNlfSxlKX0sdC5pbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW09ZnVuY3Rpb24oZSl7cmV0dXJuIGooMyl9LGV9KCksSmU9ZnVuY3Rpb24oZSl7dmFyIHQ9ci5mb3J3YXJkUmVmKChmdW5jdGlvbih0LG4pe3ZhciBvPWkoemUpLHM9ZS5kZWZhdWx0UHJvcHMsYT1PZSh0LG8scyk7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmdm9pZCAwPT09YSYmY29uc29sZS53YXJuKCdbd2l0aFRoZW1lXSBZb3UgYXJlIG5vdCB1c2luZyBhIFRoZW1lUHJvdmlkZXIgbm9yIHBhc3NpbmcgYSB0aGVtZSBwcm9wIG9yIGEgdGhlbWUgaW4gZGVmYXVsdFByb3BzIGluIGNvbXBvbmVudCBjbGFzcyBcIicrXyhlKSsnXCInKSxyLmNyZWF0ZUVsZW1lbnQoZSx2KHt9LHQse3RoZW1lOmEscmVmOm59KSl9KSk7cmV0dXJuIHkodCxlKSx0LmRpc3BsYXlOYW1lPVwiV2l0aFRoZW1lKFwiK18oZSkrXCIpXCIsdH0sWGU9ZnVuY3Rpb24oKXtyZXR1cm4gaSh6ZSl9LFplPXtTdHlsZVNoZWV0OlosbWFzdGVyU2hlZXQ6aGV9O1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBuYXZpZ2F0b3ImJlwiUmVhY3ROYXRpdmVcIj09PW5hdmlnYXRvci5wcm9kdWN0JiZjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHlvdSd2ZSBpbXBvcnRlZCAnc3R5bGVkLWNvbXBvbmVudHMnIG9uIFJlYWN0IE5hdGl2ZS5cXG5QZXJoYXBzIHlvdSdyZSBsb29raW5nIHRvIGltcG9ydCAnc3R5bGVkLWNvbXBvbmVudHMvbmF0aXZlJz9cXG5SZWFkIG1vcmUgYWJvdXQgdGhpcyBhdCBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9iYXNpY3MjcmVhY3QtbmF0aXZlXCIpLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwidGVzdFwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJih3aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXT13aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXXx8MCwxPT09d2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl0mJmNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgdGhlcmUgYXJlIHNldmVyYWwgaW5zdGFuY2VzIG9mICdzdHlsZWQtY29tcG9uZW50cycgaW5pdGlhbGl6ZWQgaW4gdGhpcyBhcHBsaWNhdGlvbi4gVGhpcyBtYXkgY2F1c2UgZHluYW1pYyBzdHlsZXMgdG8gbm90IHJlbmRlciBwcm9wZXJseSwgZXJyb3JzIGR1cmluZyB0aGUgcmVoeWRyYXRpb24gcHJvY2VzcywgYSBtaXNzaW5nIHRoZW1lIHByb3AsIGFuZCBtYWtlcyB5b3VyIGFwcGxpY2F0aW9uIGJpZ2dlciB3aXRob3V0IGdvb2QgcmVhc29uLlxcblxcblNlZSBodHRwczovL3MtYy5zaC8yQkFYemVkIGZvciBtb3JlIGluZm8uXCIpLHdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdKz0xKTtleHBvcnQgZGVmYXVsdCBxZTtleHBvcnR7VWUgYXMgU2VydmVyU3R5bGVTaGVldCxsZSBhcyBTdHlsZVNoZWV0Q29uc3VtZXIsdWUgYXMgU3R5bGVTaGVldENvbnRleHQseWUgYXMgU3R5bGVTaGVldE1hbmFnZXIsTGUgYXMgVGhlbWVDb25zdW1lcix6ZSBhcyBUaGVtZUNvbnRleHQsR2UgYXMgVGhlbWVQcm92aWRlcixaZSBhcyBfX1BSSVZBVEVfXywkZSBhcyBjcmVhdGVHbG9iYWxTdHlsZSxBZSBhcyBjc3MsTiBhcyBpc1N0eWxlZENvbXBvbmVudCxXZSBhcyBrZXlmcmFtZXMsWGUgYXMgdXNlVGhlbWUsQyBhcyB2ZXJzaW9uLEplIGFzIHdpdGhUaGVtZX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcy5tYXBcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XHJcbmltcG9ydCBIZWFkZXJzIGZyb20gJy4vRGlzcGxheS8wMF9IZWFkZXInXHJcbmltcG9ydCBSb3V0ZXJzIGZyb20gJy4vQ29tcG9uZW50cy9Sb3V0ZXJzJztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcblxyXG5jbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnR7XHJcbiAgcmVuZGVyKCl7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8TGF5b3V0PlxyXG4gICAgICAgIDxIZWFkZXJzIC8+XHJcbiAgICAgICAgPFJvdXRlcnMgLz5cclxuICAgICAgPC9MYXlvdXQ+XHJcbiAgICAgICAgXHJcbiAgICAgIFxyXG4gICAgKVxyXG4gIH1cclxufVxyXG5jb25zdCBMYXlvdXQgPSBzdHlsZWQuZGl2YFxyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG5gXHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcHA7IiwiY29uc3QgcmVwb3J0V2ViVml0YWxzID0gb25QZXJmRW50cnkgPT4ge1xuICBpZiAob25QZXJmRW50cnkgJiYgb25QZXJmRW50cnkgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgIGltcG9ydCgnd2ViLXZpdGFscycpLnRoZW4oKHsgZ2V0Q0xTLCBnZXRGSUQsIGdldEZDUCwgZ2V0TENQLCBnZXRUVEZCIH0pID0+IHtcbiAgICAgIGdldENMUyhvblBlcmZFbnRyeSk7XG4gICAgICBnZXRGSUQob25QZXJmRW50cnkpO1xuICAgICAgZ2V0RkNQKG9uUGVyZkVudHJ5KTtcbiAgICAgIGdldExDUChvblBlcmZFbnRyeSk7XG4gICAgICBnZXRUVEZCKG9uUGVyZkVudHJ5KTtcbiAgICB9KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVwb3J0V2ViVml0YWxzO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XHJcbmltcG9ydCBBcHAgZnJvbSAnLi9zcmMvQXBwJztcclxuaW1wb3J0IHJlcG9ydFdlYlZpdGFscyBmcm9tICcuL3JlcG9ydFdlYlZpdGFscyc7XHJcblxyXG5cclxuUmVhY3RET00ucmVuZGVyKFxyXG4gIDxSZWFjdC5TdHJpY3RNb2RlPlxyXG4gICAgPEFwcD48L0FwcD5cclxuICA8L1JlYWN0LlN0cmljdE1vZGU+LFxyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JylcclxuKTtcclxuXHJcbi8vIElmIHlvdSB3YW50IHRvIHN0YXJ0IG1lYXN1cmluZyBwZXJmb3JtYW5jZSBpbiB5b3VyIGFwcCwgcGFzcyBhIGZ1bmN0aW9uXHJcbi8vIHRvIGxvZyByZXN1bHRzIChmb3IgZXhhbXBsZTogcmVwb3J0V2ViVml0YWxzKGNvbnNvbGUubG9nKSlcclxuLy8gb3Igc2VuZCB0byBhbiBhbmFseXRpY3MgZW5kcG9pbnQuIExlYXJuIG1vcmU6IGh0dHBzOi8vYml0Lmx5L0NSQS12aXRhbHNcclxucmVwb3J0V2ViVml0YWxzKCk7Il0sInNvdXJjZVJvb3QiOiIifQ==